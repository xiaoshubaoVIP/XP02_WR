; Generated by holtek-gcc v3.19, Tue Mar 15 10:57:31 2022
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 67
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [67]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___sadc1 equ [43]
___sadc0 equ [42]
___lvdc equ [79]
___pb equ [24]
___pc equ [27]
___sadoh equ [45]
___sadol equ [46]
public _GetAdcSample
#pragma debug scope 2 1
#line 25 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
_GetAdcSample .section 'code'
_GetAdcSample proc
public _GetAdcSample_2
    local _GetAdcSample_2 db 4 dup(?)	; 4,0
#pragma debug variable 12 2 _GetAdcSample_2+0 "Channel"
#pragma debug variable 12 2 _GetAdcSample_2+2 "CoFualtCheckFlag"
#line 31 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [43].2
#line 32 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [43].1
#line 33 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [43].0
#line 36 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].5
#line 39 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [43].7
#line 40 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [43].6
#line 41 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [43].5
#line 44 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L2
#line 46 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].3
#line 47 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].2
#line 48 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].1
	jmp _L19
_L2:
#line 51 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	xor a,1
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L4
#line 53 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].3
#line 54 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].2
#line 55 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].1
#line 56 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].0
	jmp _L3
_L4:
#line 58 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	xor a,2
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L3
#line 60 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].3
#line 61 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].2
#line 62 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].1
_L19:
#line 63 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].0
_L3:
#line 71 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [43].4
#line 72 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [43].3
#line 75 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].4
#line 77 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [79].3
#line 79 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L5
#line 81 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [24].4
	jmp _L6
_L5:
#line 83 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	xor a,1
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L7
#line 85 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [24].6
	jmp _L6
_L7:
#line 87 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	xor a,2
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L6
	mov a,_GetAdcSample_2[2]
	xor a,1
	or a,_GetAdcSample_2[3]
	snz z
	jmp _L6
#line 89 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [27].1
#line 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF 10000>263690
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	ERRMESSAGE 'the value 10000of the argument exceeds the maxinum 263690'
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF 10000<0
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	ERRMESSAGE 'the value 10000 of the argument exceeds the mininum 0'
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF 10000==0
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	JMP $
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=1) AND (10000<( 4 + __PBP__ * 2))
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=2) AND (10000<( 4 + __PBP__ * 2))
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=3) AND (10000<( 4 + __PBP__ * 2))
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=4) AND (10000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=5) AND (10000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=6) AND (10000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=7) AND (10000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000>=8) AND (10000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000==9)  AND ( __PBP__ > 2 )
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000< ( 8 + __PBP__ * 2)) AND (10000>( 3 + __PBP__ * 2))
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -10000
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000< ( 0404h + __PBP__ * 2)) AND (10000>( 7 + __PBP__ * 2))
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,(10000-( 4 + __PBP__ * 2))/4
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYX3 + 3 -((10000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000< ( 040bh + __PBP__ * 2)) AND (10000> ( 0403h + __PBP__ * 2))
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,0 
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -10000
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000 >= ( 040bh + __PBP__ * 2)) AND ((((10000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,(10000-( 9 + __PBP__ * 2))/0402h
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV _builtin_holtek_delay_2,A
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,0
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYY5 +5- (((10000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (10000 >= ( 040bh + __PBP__ * 2)) AND ((((10000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,(10000-( 9 + __PBP__ * 2))/0402h
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV _builtin_holtek_delay_2,A
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,((10000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 90 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYY3 +3-(((10000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 91 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [27].1
_L6:
#line 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF 100>263690
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	ERRMESSAGE 'the value 100of the argument exceeds the maxinum 263690'
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF 100<0
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	ERRMESSAGE 'the value 100 of the argument exceeds the mininum 0'
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF 100==0
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	JMP $
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=1) AND (100<( 4 + __PBP__ * 2))
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=2) AND (100<( 4 + __PBP__ * 2))
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=3) AND (100<( 4 + __PBP__ * 2))
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=4) AND (100<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=5) AND (100<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=6) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=7) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100>=8) AND (100<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100==9)  AND ( __PBP__ > 2 )
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	NOP
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100< ( 8 + __PBP__ * 2)) AND (100>( 3 + __PBP__ * 2))
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -100
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100< ( 0404h + __PBP__ * 2)) AND (100>( 7 + __PBP__ * 2))
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,(100-( 4 + __PBP__ * 2))/4
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYX3 + 3 -((100-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100< ( 040bh + __PBP__ * 2)) AND (100> ( 0403h + __PBP__ * 2))
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,0 
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -100
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100 >= ( 040bh + __PBP__ * 2)) AND ((((100-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,(100-( 9 + __PBP__ * 2))/0402h
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV _builtin_holtek_delay_2,A
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,0
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYY5 +5- (((100-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	IF (100 >= ( 040bh + __PBP__ * 2)) AND ((((100-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,(100-( 9 + __PBP__ * 2))/0402h
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV _builtin_holtek_delay_2,A
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	MOV A,((100-( 9 + __PBP__ * 2))%0402h)/4+1
;# 95 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c" 1
	fcall __DELAYY3 +3-(((100-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 28 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr rb
	clr rc
#line 96 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr ra
_L12:
#line 99 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].7
#line 100 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	set [42].7
#line 101 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].7
_L9:
#line 104 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	sz [42].6
	jmp _L9
#line 107 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,[45]
	mov re,a
	clr rd
	mov a,re
	mov rg,a
	mov a,[46]
	or a,rd
	mov rf,a
#line 108 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	snz ra
	jmp _L10
#line 110 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,rf
	addm a,rb
	mov a,rg
	adcm a,rc
_L10:
#line 96 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	inc ra
	mov a,ra
	sub a,5
	snz z
	jmp _L12
#line 113 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,rb
	mov ra,a
	mov a,rc
	mov rb,a
	clr c
	rrc rb
	rrc ra
	clr c
	rrc rb
	rrc ra
#line 115 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L13
#line 117 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [24].4
	jmp _L14
_L13:
#line 119 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	xor a,1
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L15
#line 121 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [24].6
	jmp _L14
_L15:
#line 123 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	mov a,_GetAdcSample_2[0]
	xor a,2
	or a,_GetAdcSample_2[1]
	snz z
	jmp _L14
	mov a,_GetAdcSample_2[2]
	xor a,1
	or a,_GetAdcSample_2[3]
	snz z
	jmp _L14
#line 125 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [27].1
_L14:
#line 129 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
	clr [42].5
	ret
_GetAdcSample endp
#line 129 "e:\x-sense\xp02\htba45f5260-xp0456\src\Adc.c"
#pragma debug scope 1 1
#pragma debug struct_begin 42 "__pb_bits"
#pragma debug field 21 8 0 1 "__pb0" ;0,1
#pragma debug field 21 8 0 1 "__pb1" ;1,1
#pragma debug field 21 8 0 1 "__pb2" ;2,1
#pragma debug field 21 8 0 1 "__pb3" ;3,1
#pragma debug field 21 8 0 1 "__pb4" ;4,1
#pragma debug field 21 8 0 1 "__pb5" ;5,1
#pragma debug field 21 8 0 1 "__pb6" ;6,1
#pragma debug field 21 8 0 1 "__pb7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 43 ""
#pragma debug field 2 42 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 43 1 ___pb "__pb" 1
#pragma debug struct_begin 44 "__pc_bits"
#pragma debug field 21 8 0 1 "__pc0" ;0,1
#pragma debug field 21 8 0 1 "__pc1" ;1,1
#pragma debug field 21 8 0 1 "__pc2" ;2,1
#pragma debug field 21 8 0 1 "__pc3" ;3,1
#pragma debug field 21 8 0 1 "__pc4" ;4,1
#pragma debug field 21 8 0 1 "__pc5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___pc "__pc" 1
#pragma debug struct_begin 46 "__sadc0_bits"
#pragma debug field 21 8 0 1 "__sacs0" ;0,1
#pragma debug field 21 8 0 1 "__sacs1" ;1,1
#pragma debug field 21 8 0 1 "__sacs2" ;2,1
#pragma debug field 21 8 0 1 "__sacs3" ;3,1
#pragma debug field 21 8 0 1 "__adrfs" ;4,1
#pragma debug field 21 8 0 1 "__adcen" ;5,1
#pragma debug field 21 8 0 1 "__adbz" ;6,1
#pragma debug field 21 8 0 1 "__start" ;7,1
#pragma debug struct_end
#pragma debug union_begin 47 ""
#pragma debug field 2 46 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 47 1 ___sadc0 "__sadc0" 1
#pragma debug struct_begin 48 "__sadc1_bits"
#pragma debug field 21 8 0 1 "__sacks0" ;0,1
#pragma debug field 21 8 0 1 "__sacks1" ;1,1
#pragma debug field 21 8 0 1 "__sacks2" ;2,1
#pragma debug field 21 8 0 1 "__savrs0" ;3,1
#pragma debug field 21 8 0 1 "__savrs1" ;4,1
#pragma debug field 21 8 0 1 "__sains0" ;5,1
#pragma debug field 21 8 0 1 "__sains1" ;6,1
#pragma debug field 21 8 0 1 "__sains2" ;7,1
#pragma debug struct_end
#pragma debug union_begin 49 ""
#pragma debug field 2 48 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 49 1 ___sadc1 "__sadc1" 1
#pragma debug variable 8 1 ___sadoh "__sadoh" 1
#pragma debug variable 8 1 ___sadol "__sadol" 1
#pragma debug struct_begin 50 "__lvdc_bits"
#pragma debug field 21 8 0 1 "__vlvd0" ;0,1
#pragma debug field 21 8 0 1 "__vlvd1" ;1,1
#pragma debug field 21 8 0 1 "__vlvd2" ;2,1
#pragma debug field 21 8 0 1 "__vbgen" ;3,1
#pragma debug field 21 8 0 1 "__lvden" ;4,1
#pragma debug field 21 8 0 1 "__lvdo" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 51 ""
#pragma debug field 2 50 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 51 1 ___lvdc "__lvdc" 1

; 
; Generated by holtek-gcc v3.19, Tue Mar 15 10:57:31 2022
; Rebuild 718
; end of file

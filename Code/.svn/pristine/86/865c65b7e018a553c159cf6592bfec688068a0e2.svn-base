; Generated by holtek-gcc v3.19, Tue Mar 15 10:59:12 2022
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 67
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [67]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___pscr equ [80]
___tb0c equ [81]
___intc2 equ [69]
public _TimerTb0Init
#pragma debug scope 2 1
#line 155 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_TimerTb0Init .section 'code'
_TimerTb0Init proc
public _TimerTb0Init_2
    local _TimerTb0Init_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 2 _TimerTb0Init_2+0 "time"
#line 162 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,3
	orm a,[80]
#line 187 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_TimerTb0Init_2[0]
	mov [81],a
#line 189 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [81].7
#line 191 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [69].1
	ret
_TimerTb0Init endp
#line 191 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
___wdtc equ [33]
public _SysWakeUpInit
#pragma debug scope 3 1
#line 205 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_SysWakeUpInit .section 'code'
_SysWakeUpInit proc
public _SysWakeUpInit_2
    local _SysWakeUpInit_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 3 _SysWakeUpInit_2+0 "time"
#line 210 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [33].7
#line 211 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [33].6
#line 212 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [33].5
#line 213 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [33].4
#line 214 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [33].3
#line 228 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,[33]
	and a,80
	mov ra,a
	mov a,ra
	or a,_SysWakeUpInit_2[0]
	mov [33],a
	ret
_SysWakeUpInit endp
#line 228 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
@crom	.section 'crom'
_LC0:
	db 065h,065h,070h,072h,06fh,06dh,020h,064h,061h,074h
	db 061h,028h,030h,030h,02dh,046h,046h,029h,03ah,0dh
	db 0ah,00h
@crom	.section 'crom'
_LC1:
	db 025h,078h,03ah,00h
@crom	.section 'crom'
_LC2:
	db 025h,078h,020h,00h
@crom	.section 'crom'
_LC3:
	db 0ah,00h
public _E2promDisplay
#pragma debug scope 4 1
#line 432 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_E2promDisplay .section 'code'
_E2promDisplay proc
    local _E2promDisplay_2 db 4 dup(?)	; 0,4
#pragma debug variable 8 4 _E2promDisplay_2+1 "i"
#pragma debug variable 8 4 _E2promDisplay_2+0 "j"
#line 435 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC0
	mov _printf_2[0],a
	mov a,high offset _LC0
	mov _printf_2[1],a
	fcall _printf
	mov a,8
	mov _E2promDisplay_2[2],a
#line 436 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _E2promDisplay_2[1]
_L7:
#line 438 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_E2promDisplay_2[1]
	mov rb,a
	clr rc
	mov a,rb
	mov _printf_2[2],a
	mov a,rc
	mov _printf_2[3],a
	mov a,3
_LI1:
	clr c
	rlc _printf_2[2]
	rlc _printf_2[3]
	sdz acc
	jmp _LI1
	mov a,low offset _LC1
	mov _printf_2[0],a
	mov a,high offset _LC1
	mov _printf_2[1],a
	fcall _printf
#line 441 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_E2promDisplay_2[1]
	mov ra,a
	swapa ra
	rr acc
	and a,0f8h
	mov ra,a
	mov a,ra
	mov _E2promDisplay_2[3],a
#line 439 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _E2promDisplay_2[0]
_L5:
	mov a,_E2promDisplay_2[0]
	add a,_E2promDisplay_2[3]
	mov ra,a
#line 441 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,ra
	fcall _E2promRead
	mov ra,a
	mov a,ra
	mov _printf_2[2],a
	clr _printf_2[3]
	mov a,low offset _LC2
	mov _printf_2[0],a
	mov a,high offset _LC2
	mov _printf_2[1],a
	fcall _printf
#line 439 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	inc _E2promDisplay_2[0]
	mov a,_E2promDisplay_2[0]
	sub a,8
	snz z
	jmp _L5
#line 443 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC3
	mov _printf_2[0],a
	mov a,high offset _LC3
	mov _printf_2[1],a
	fcall _printf
#line 436 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	inc _E2promDisplay_2[1]
	sdz _E2promDisplay_2[2]
	jmp _L7
	ret
_E2promDisplay endp
#line 436 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
___stm0dh equ [98]
___stm0dl equ [97]
public _GetTicks
#pragma debug scope 5 1
#line 512 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_GetTicks .section 'code'
_GetTicks proc
#line 516 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,[98]
	mov rc,a
	clr rb
	mov a,[97]
	addm a,rb
	sz c
	inc rc
#line 517 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,___lastTick10ms_3180[0]
	mov rd,a
	mov a,___lastTick10ms_3180[1]
	mov re,a
	mov a,rb
	sub a,rd
	mov a,rc
	sbc a,re
	snz c
	jmp _L10
#line 517 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	subm a,rd
	mov a,rc
	sbcm a,re
	jmp _L11
_L10:
	mov a,255
	subm a,rd
	mov a,3
	sbcm a,re
	mov a,rb
	addm a,rd
	mov a,rc
	adcm a,re
_L11:
#line 519 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,63
	sub a,rd
	mov a,1
	sbc a,re
	sz c
	jmp _L15
#line 525 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rd  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,re  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,64  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,1  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rf,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rg,a
#line 526 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rd  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,re  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,64  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,1  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rd,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov re,a
#line 527 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rd
	sub a,rb
	mov a,re
	sbc a,rc
	snz c
	jmp _L16
	mov a,255
	addm a,rb
	mov a,3
	adcm a,rc
_L16:
	mov a,rb
	sub a,rd
	mov rb,a
	mov a,rc
	sbc a,re
	mov rc,a
	mov a,rb
	mov ___lastTick10ms_3180[0],a
	mov a,rc
	mov ___lastTick10ms_3180[1],a
	jmp _L12
_L15:
#line 521 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr rf
	clr rg
_L12:
#line 530 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rf
	mov ra,a
	mov a,rg
	mov rb,a
	ret
_GetTicks endp
#line 530 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
___pa equ [20]
___pc equ [27]
public _ErrIndex
#pragma debug scope 6 1
#line 652 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_ErrIndex .section 'code'
_ErrIndex proc
public _ErrIndex_2
    local _ErrIndex_2 db 3 dup(?)	; 2,1
	mov _ErrIndex_2[2],a
#pragma debug variable 8 6 _ErrIndex_2+2 "LedFlag"
#pragma debug variable 8 6 _ErrIndex_2+0 "BeepFlag"
#pragma debug variable 8 6 _ErrIndex_2+1 "Num"
#line 654 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].0
#line 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 655 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 656 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr ra
_L18:
#line 656 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,ra
	sub a,_ErrIndex_2[1]
	sz z
	jmp _L25
#line 658 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _ErrIndex_2[2]
	jmp _L19
#line 660 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
	set [20].0
_L19:
#line 662 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _ErrIndex_2[0]
	jmp _L20
#line 664 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [27].4
_L20:
#line 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 666 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 667 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _ErrIndex_2[2]
	jmp _L21
#line 669 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
	clr [20].0
_L21:
#line 671 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _ErrIndex_2[0]
	jmp _L22
#line 673 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [27].4
_L22:
#line 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 675 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 676 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 656 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	inc ra
	jmp _L18
_L25:
#line 679 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[16]
	xor a,1
	or a,_SysAO[17]
	snz z
	jmp _L17
#line 681 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].0
_L17:
	ret
_ErrIndex endp
#line 681 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _CailRes
#pragma debug scope 7 1
#line 694 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_CailRes .section 'code'
_CailRes proc
public _CailRes_2
    local _CailRes_2 db 3 dup(?)	; 2,1
	mov _CailRes_2[2],a
#pragma debug variable 8 7 _CailRes_2+2 "Res"
#pragma debug variable 12 7 _CailRes_2+0 "eStep"
#line 696 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].0
#line 697 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
#line 699 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,7
	mov _PwrAO[6],a
#line 700 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _EnteryLowPower
#line 701 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 701 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	clr wdt
#line 702 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _CailRes_2[2]
	jmp _L27
#line 702 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr ra
	jmp _L28
_L27:
#line 704 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_CailRes_2[0]
	xor a,1
	or a,_CailRes_2[1]
	sz z
	jmp _L40
	mov a,_CailRes_2[0]
	xor a,2
	or a,_CailRes_2[1]
	sz z
	jmp _L31
	mov a,_CailRes_2[0]
	xor a,3
	or a,_CailRes_2[1]
	sz z
	jmp _L32
	mov a,_CailRes_2[0]
	xor a,4
	or a,_CailRes_2[1]
	sz z
	jmp _L33
	mov a,_CailRes_2[0]
	xor a,5
	or a,_CailRes_2[1]
	sz z
	jmp _L34
	mov a,_CailRes_2[0]
	xor a,6
	or a,_CailRes_2[1]
	snz z
	jmp _L26
#line 762 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
#line 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 763 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 764 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
#line 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 765 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 766 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	jmp _L40
_L31:
#line 718 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].0
#line 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 719 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	jmp _L39
_L32:
#line 729 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
#line 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 730 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 731 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
_L37:
#line 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 732 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 733 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 734 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].0
#line 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 735 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L38:
#line 736 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].0
#line 737 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L26
_L33:
#line 740 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
#line 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 741 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 742 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
#line 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 743 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 744 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 745 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
	set [20].0
#line 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 746 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 747 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
	jmp _L38
_L34:
#line 751 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
	set [20].0
#line 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 752 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 753 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
_L39:
	clr [20].0
#line 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 754 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 755 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 756 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
#line 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 757 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 758 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
#line 759 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L26
_L40:
#line 767 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
	set [20].0
#line 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 768 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 769 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
	clr [20].0
	jmp _L37
_L28:
#line 783 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,ra
	mov rb,a
	clr rc
	mov a,rb
	sub a,_CailRes_2[0]
	mov a,rc
	sbc a,_CailRes_2[1]
	sz c
	jmp _L26
#line 785 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].0
#line 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000>263690
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000<0
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 30000==0
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 786 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 787 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].0
#line 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 788 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000>263690
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000<0
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 150000==0
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 789 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 783 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	inc ra
	jmp _L28
_L26:
	ret
_CailRes endp
#line 783 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _CailStepDisplay
#pragma debug scope 8 1
#line 803 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_CailStepDisplay .section 'code'
_CailStepDisplay proc
public _CailStepDisplay_2
    local _CailStepDisplay_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 8 _CailStepDisplay_2+0 "eStep"
#line 805 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].0
#line 806 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
#line 807 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
	clr [20].0
#line 809 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr ra
	jmp _L42
_L43:
#line 811 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].2
	set [20].0
#line 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 20000>263690
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 20000of the argument exceeds the maxinum 263690'
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 20000<0
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 20000 of the argument exceeds the mininum 0'
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 20000==0
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=1) AND (20000<( 4 + __PBP__ * 2))
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=2) AND (20000<( 4 + __PBP__ * 2))
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=3) AND (20000<( 4 + __PBP__ * 2))
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=4) AND (20000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=5) AND (20000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=6) AND (20000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=7) AND (20000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000>=8) AND (20000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000==9)  AND ( __PBP__ > 2 )
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000< ( 8 + __PBP__ * 2)) AND (20000>( 3 + __PBP__ * 2))
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -20000
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000< ( 0404h + __PBP__ * 2)) AND (20000>( 7 + __PBP__ * 2))
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(20000-( 4 + __PBP__ * 2))/4
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((20000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000< ( 040bh + __PBP__ * 2)) AND (20000> ( 0403h + __PBP__ * 2))
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -20000
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000 >= ( 040bh + __PBP__ * 2)) AND ((((20000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(20000-( 9 + __PBP__ * 2))/0402h
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((20000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (20000 >= ( 040bh + __PBP__ * 2)) AND ((((20000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(20000-( 9 + __PBP__ * 2))/0402h
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((20000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 812 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((20000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 813 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].2
	clr [20].0
#line 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 200000>263690
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 200000of the argument exceeds the maxinum 263690'
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 200000<0
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value 200000 of the argument exceeds the mininum 0'
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF 200000==0
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=1) AND (200000<( 4 + __PBP__ * 2))
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=2) AND (200000<( 4 + __PBP__ * 2))
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=3) AND (200000<( 4 + __PBP__ * 2))
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=4) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=5) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=6) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=7) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000>=8) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000==9)  AND ( __PBP__ > 2 )
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000< ( 8 + __PBP__ * 2)) AND (200000>( 3 + __PBP__ * 2))
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -200000
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000< ( 0404h + __PBP__ * 2)) AND (200000>( 7 + __PBP__ * 2))
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(200000-( 4 + __PBP__ * 2))/4
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -((200000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000< ( 040bh + __PBP__ * 2)) AND (200000> ( 0403h + __PBP__ * 2))
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -200000
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- (((200000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((200000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 814 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-(((200000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 809 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	inc ra
_L42:
	mov a,ra
	mov rb,a
	clr rc
	mov a,rb
	sub a,_CailStepDisplay_2[0]
	mov a,rc
	sbc a,_CailStepDisplay_2[1]
	snz c
	jmp _L43
	ret
_CailStepDisplay endp
#line 809 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _PollingLED
#pragma debug scope 9 1
#line 890 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_PollingLED .section 'code'
_PollingLED proc
public _PollingLED_2
    local _PollingLED_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 9 _PollingLED_2+0 "Time"
#line 891 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].0
#line 892 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,9
	sub a,_PollingLED_2[0]
	mov a,0
	sbc a,_PollingLED_2[1]
	sz c
	jmp _L46
#line 892 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,5
	add a,_PollingLED_2[0]
	mov rb,a
	mov a,0
	adc a,_PollingLED_2[1]
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	jmp _L45
_L46:
	mov a,1
	mov rb,a
	clr rc
_L45:
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,rb
	mov _TmrInsertTimer_2[2],a
	mov a,rc
	mov _TmrInsertTimer_2[3],a
	mov a,3
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
	ret
_PollingLED endp
#line 892 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _PollingLEDOff
#pragma debug scope 10 1
#line 896 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_PollingLEDOff .section 'code'
_PollingLEDOff proc
#line 897 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].0
	ret
_PollingLEDOff endp
#line 897 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _PollingBeep
#pragma debug scope 11 1
#line 909 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_PollingBeep .section 'code'
_PollingBeep proc
public _PollingBeep_2
    local _PollingBeep_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 11 _PollingBeep_2+0 "Time"
#line 910 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,9
	sub a,_PollingBeep_2[0]
	mov a,0
	sbc a,_PollingBeep_2[1]
	sz c
	jmp _L50
#line 910 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,5
	add a,_PollingBeep_2[0]
	mov rb,a
	mov a,0
	adc a,_PollingBeep_2[1]
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	jmp _L49
_L50:
	mov a,1
	mov rb,a
	clr rc
_L49:
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,rb
	mov _TmrInsertTimer_2[2],a
	mov a,rc
	mov _TmrInsertTimer_2[3],a
	mov a,4
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
	ret
_PollingBeep endp
#line 910 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _PollingBeepOff
#pragma debug scope 12 1
#line 914 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_PollingBeepOff .section 'code'
_PollingBeepOff proc
#line 915 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [27].4
	ret
_PollingBeepOff endp
#line 915 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _SysteSetSig
#pragma debug scope 13 1
#line 920 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_SysteSetSig .section 'code'
_SysteSetSig proc
public _SysteSetSig_2
    local _SysteSetSig_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 13 _SysteSetSig_2+0 "sig"
#line 924 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _SysAO[30]
	jmp _L56
#line 924 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _SysAO[33]
	jmp _L57
	mov a,2
	mov rb,a
	clr rc
	sz _SysAO[36]
	jmp _L58
	jmp _L53
_L56:
	clr rb
	clr rc
	jmp _L53
_L57:
	mov a,1
	mov rb,a
	clr rc
_L53:
#line 926 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr c
	rlca rb
	mov rd,a
	rlca rc
	mov re,a
	mov a,rd
	addm a,rb
	mov a,re
	adcm a,rc
	mov a,low (offset _SysAO+28)
	add a,rb
	mov mp,a
	mov a,high (offset _SysAO+28)
	adc a,rc
	mov sbp,a
	mov a,_SysteSetSig_2[0]
	mov ir,a
	inc mp
	mov a,_SysteSetSig_2[1]
	mov ir,a
#line 927 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low (offset _SysAO+30)
	add a,rb
	mov mp,a
	mov a,high (offset _SysAO+30)
	adc a,rc
	mov sbp,a
	mov a,1
	mov ir,a
	jmp _L52
_L58:
#line 933 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysteSetSig_2[0]
	mov _SysAO[28],a
	mov a,_SysteSetSig_2[1]
	mov _SysAO[29],a
#line 934 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _SysAO[30],a
_L52:
	ret
_SysteSetSig endp
#line 934 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _SysteGetSig
#pragma debug scope 14 1
#line 940 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_SysteGetSig .section 'code'
_SysteGetSig proc
#line 946 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	sdza _SysAO[30]
	jmp _LI2
	jmp _L62
_LI2:
#line 946 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	sdza _SysAO[33]
	jmp _LI3
	jmp _L63
_LI3:
#line 943 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr ra
	clr rb
#line 946 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	sdza _SysAO[36]
	jmp _L61
	mov a,2
	mov rb,a
	clr rc
	jmp _L60
_L62:
	clr rb
	clr rc
	jmp _L60
_L63:
	mov a,1
	mov rb,a
	clr rc
_L60:
#line 948 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr c
	rlca rb
	mov rd,a
	rlca rc
	mov re,a
	mov a,rb
	addm a,rd
	mov a,rc
	adcm a,re
	mov a,low (offset _SysAO+28)
	add a,rd
	mov mp,a
	mov a,high (offset _SysAO+28)
	adc a,re
	mov sbp,a
	fcall _Crom2Prom
	mov ra,a
	fcall _Crom2PromNext
	mov rb,a
#line 949 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low (offset _SysAO+30)
	add a,rd
	mov mp,a
	mov a,high (offset _SysAO+30)
	adc a,re
	mov sbp,a
	mov a,0
	mov ir,a
_L61:
	ret
_SysteGetSig endp
#line 949 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _Lvd_Int_ISR
#pragma debug scope 15 1
#line 958 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
rombank 0 @Lvd_Int_ISR_code
@Lvd_Int_ISR_code .section at 20 'code'
_Lvd_Int_ISR:
	reti
#line 958 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _Timebase0_Int_ISR
#pragma debug scope 16 1
#line 964 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
rombank 0 @Timebase0_Int_ISR_code
@Timebase0_Int_ISR_code .section at 36 'code'
	mov r1,a
	mov a,bp
	clr bp
	jmp _Timebase0_Int_ISR
ROMBANK 0 _Timebase0_Int_ISR
#pragma debug scope 1 1
@dummy36 proc
	call _Timebase0_Int_ISR
@dummy36 endp
#pragma debug scope 17 1
_Timebase0_Int_ISR .section 'code'
_Timebase0_Int_ISR proc
	mov r2,a
	mov a, status
	mov r3,a
#line 965 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [69].5
	mov a,r2
	mov bp,a
	mov a,r3
	mov status,a
	mov a,r1
	reti
_Timebase0_Int_ISR endp

#line 965 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
___intc0 equ [67]
public _Adc_Input_Int_ISR
#pragma debug scope 18 1
#line 969 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
rombank 0 @Adc_Input_Int_ISR_code
@Adc_Input_Int_ISR_code .section at 8 'code'
	mov r1,a
	mov a,bp
	clr bp
	jmp _Adc_Input_Int_ISR
ROMBANK 0 _Adc_Input_Int_ISR
#pragma debug scope 1 1
@dummy8 proc
	call _Adc_Input_Int_ISR
@dummy8 endp
#pragma debug scope 19 1
_Adc_Input_Int_ISR .section 'code'
_Adc_Input_Int_ISR proc
	mov r2,a
	mov a, status
	mov r3,a
#line 970 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [67].5
	mov a,r2
	mov bp,a
	mov a,r3
	mov status,a
	mov a,r1
	reti
_Adc_Input_Int_ISR endp

#line 970 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
public _Dec_Int_ISR
#pragma debug scope 20 1
#line 974 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
rombank 0 @Dec_Int_ISR_code
@Dec_Int_ISR_code .section at 12 'code'
	mov r1,a
	mov a,bp
	clr bp
	jmp _Dec_Int_ISR
ROMBANK 0 _Dec_Int_ISR
#pragma debug scope 1 1
@dummy12 proc
	call _Dec_Int_ISR
@dummy12 endp
#pragma debug scope 21 1
_Dec_Int_ISR .section 'code'
_Dec_Int_ISR proc
	mov r2,a
	mov a, status
	mov r3,a
#line 975 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [67].6
	mov a,r2
	mov bp,a
	mov a,r3
	mov status,a
	mov a,r1
	reti
_Dec_Int_ISR endp

#line 975 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
@crom	.section 'crom'
_LC4:
	db 06ch,06fh,077h,020h,062h,061h,074h,020h,065h,076h
	db 065h,06eh,074h,0ah,00h
@crom	.section 'crom'
_LC5:
	db 065h,06eh,064h,020h,06ch,069h,066h,065h,020h,065h
	db 076h,065h,06eh,074h,0ah,00h
@crom	.section 'crom'
_LC6:
	db 073h,074h,061h,06eh,064h,062h,079h,0ah,00h
public _NormalMain
#pragma debug scope 22 1
#line 1005 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
_NormalMain .section 'code'
_NormalMain proc
#line 1006 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[4]
	xor a,1
	or a,_SysAO[5]
	sz z
	jmp _L103
#line 1006 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[4]
	xor a,2
	or a,_SysAO[5]
	sz z
	jmp _L72
	mov a,_SysAO[4]
	xor a,6
	or a,_SysAO[5]
	sz z
	jmp _L73
	mov a,_SysAO[4]
	xor a,7
	or a,_SysAO[5]
	sz z
	jmp _L74
	mov a,_SysAO[4]
	xor a,9
	or a,_SysAO[5]
	sz z
	jmp _L75
	mov a,_SysAO[4]
	xor a,10
	or a,_SysAO[5]
	sz z
	jmp _L76
	mov a,_SysAO[4]
	xor a,14
	or a,_SysAO[5]
	sz z
	jmp _L77
	mov a,_SysAO[4]
	xor a,22
	or a,_SysAO[5]
	sz z
	jmp _L78
	mov a,_SysAO[4]
	xor a,47
	or a,_SysAO[5]
	sz z
	jmp _L79
	mov a,_SysAO[4]
	xor a,49
	or a,_SysAO[5]
	snz z
	jmp _L69
#line 1060 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,18
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1061 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L69
_L73:
#line 1013 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz rb.0
	jmp _L81
#line 1015 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,254  
	andm a,rb  
	mov a,255  
	andm a,rc
#line 1016 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,2
	mov _SysAO[7],a
#line 1017 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[14]
	clr _SysAO[15]
_L81:
#line 1020 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz rb.4
	jmp _L82
#line 1022 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,239  
	andm a,rb  
	mov a,255  
	andm a,rc
#line 1023 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,32
	mov _SysAO[7],a
#line 1024 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[14]
	clr _SysAO[15]
_L82:
#line 1027 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz rb.7
	jmp _L83
#line 1029 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	mov rd,a
	mov a,rc
	mov re,a
	mov a,127  
	andm a,rd  
	mov a,255  
	andm a,re
	mov a,rd
	mov _SysAO[7],a
	mov a,re
	mov _SysAO[8],a
_L83:
#line 1032 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz _SysAO[8].0
	jmp _L79
#line 1034 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	mov rd,a
	mov a,rc
	mov re,a
	mov a,255  
	andm a,rd  
	mov a,254  
	andm a,re
	mov a,rd
	mov _SysAO[7],a
	mov a,re
	mov _SysAO[8],a
_L79:
#line 1037 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,2
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1038 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L69
_L74:
#line 1041 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,13
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1042 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L69
_L75:
#line 1045 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,14
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1046 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L69
_L76:
#line 1049 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _GetRfPairedMode
	mov a,ra
	xor a,2
	or a,rb
	snz z
	jmp _L84
#line 1051 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,17
	mov _SysAO[0],a
	clr _SysAO[1]
	jmp _L69
_L84:
#line 1055 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,12
	mov _SysAO[0],a
	clr _SysAO[1]
	jmp _L69
_L77:
#line 1065 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,3
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1066 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L69
_L78:
#line 1069 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,5
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1070 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L69
_L72:
#pragma debug scope 23 22
;begin block, line: 1070.-1
#pragma debug scope 24 23
;begin block, line: 1070.-1
#line 827 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	add a,_SysAO[12]
	mov rb,a
	mov a,0
	adc a,_SysAO[13]
	mov rc,a
#line 829 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,4
	sub a,rb
	mov a,41
	sbc a,rc
	snz c
	jmp _L85
#line 827 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	mov _SysAO[12],a
	mov a,rc
	mov _SysAO[13],a
	jmp _L86
_L85:
#line 831 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[12]
	clr _SysAO[13]
#line 832 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _SysAO[11],a
_L86:
#line 835 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[12]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[13]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,32  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	sub a,31
	mov a,rc
	sbc a,3
	snz cz
	jmp _L87
#line 837 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _SmokeAO[16],a
_L87:
#line 840 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	sdza _SysAO[11]
	jmp _L88
#line 842 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[11]
#line 843 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	add a,_SysAO[9]
	mov rb,a
	mov a,0
	adc a,_SysAO[10]
	mov rc,a
	mov a,rb
	mov _SysAO[9],a
	mov a,rc
	mov _SysAO[10],a
#line 845 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rc
	mov _E2promWrite_2[0],a
	mov a,0
	fcall _E2promWrite
#line 846 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[9]
	mov _E2promWrite_2[0],a
	mov a,1
	fcall _E2promWrite
_L88:
#line 849 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[9]
	mov rb,a
	mov a,_SysAO[10]
	mov rc,a
	mov a,96
	sub a,rb
	mov a,14
	sbc a,rc
	sz c
	jmp _L89
#line 851 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,0
	orm a,_SysAO[8]
	mov a,64
	orm a,_SysAO[7]
	jmp _L90
_L89:
#line 853 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,66
	sub a,rb
	mov a,14
	sbc a,rc
	sz c
	jmp _L90
#line 855 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz rb.5
	jmp _L91
#line 857 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[14]
	mov rd,a
	mov a,_SysAO[15]
	mov re,a
	mov a,172
	sub a,rd
	mov a,38
	sbc a,re
	sz c
	jmp _L92
#line 859 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,223  
	andm a,rb  
	mov a,255  
	andm a,rc
	jmp _L91
_L92:
#line 864 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	add a,rd
	mov _SysAO[14],a
	mov a,0
	adc a,re
	mov _SysAO[15],a
	jmp _L90
_L91:
#line 869 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,16
	mov _SysAO[7],a
_L90:
#pragma debug scope 23 22
#pragma debug scope 22 1
#line 1084 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _BatteryCheck
#pragma debug scope 25 22
;begin block, line: 1084.-1
#pragma debug scope 26 25
;begin block, line: 1084.-1
#line 542 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SmokeAO[18]
	sub a,90
	snz z
	jmp _L93
#line 545 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SmokeAlarmCheck
_L93:
#pragma debug scope 25 22
#pragma debug scope 22 1
#pragma debug scope 27 22
;begin block, line: 545.-1
#pragma debug scope 28 27
;begin block, line: 545.-1
#line 582 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	sz rb.0
	jmp _L94
	mov a,rb
	mov rd,a
	mov a,rc
	mov re,a
	mov a,6  
	andm a,rd  
	mov a,0  
	andm a,re
#line 583 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rd
	or a,re
	sz z
	jmp _L95
_L94:
#line 585 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[20]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[21]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,6  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	xor a,5
	or a,rc
	snz z
	jmp _L97
#line 588 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC4
	mov _printf_2[0],a
	mov a,high offset _LC4
	mov _printf_2[1],a
	fcall _printf
#line 594 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _SysAO[7].1
	jmp _L98
#line 596 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _ErrIndex_2[1],a
	jmp _L118
_L98:
#line 600 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _ErrIndex_2[1],a
_L117:
	mov a,1
	mov _ErrIndex_2[0],a
_L116:
	mov a,1
	fcall _ErrIndex
	jmp _L97
_L95:
#line 604 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	sz rb.4
	jmp _L99
	mov a,96  
	andm a,rb  
	mov a,0  
	andm a,rc
#line 605 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	or a,rc
	sz z
	jmp _L100
_L99:
#line 607 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[20]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[21]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,6  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	xor a,5
	or a,rc
	snz z
	jmp _L97
#line 610 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC5
	mov _printf_2[0],a
	mov a,high offset _LC5
	mov _printf_2[1],a
	fcall _printf
#line 617 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz _SysAO[7].5
	jmp _L102
#line 619 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,3
	mov _ErrIndex_2[1],a
_L118:
	clr _ErrIndex_2[0]
	jmp _L116
_L102:
#line 623 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,3
	mov _ErrIndex_2[1],a
	jmp _L117
_L100:
#line 630 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC6
	mov _printf_2[0],a
	mov a,high offset _LC6
	mov _printf_2[1],a
	fcall _printf
#line 633 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[16]
	or a,_SysAO[17]
	snz z
	jmp _L97
#line 635 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[20]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[21]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,6  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	xor a,5
	or a,rc
	snz z
	jmp _L97
#line 637 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].0
#line 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (6000)>263690
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value (6000)of the argument exceeds the maxinum 263690'
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (6000)<0
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	ERRMESSAGE 'the value (6000) of the argument exceeds the mininum 0'
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF (6000)==0
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	JMP $
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=1) AND ((6000)<( 4 + __PBP__ * 2))
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=2) AND ((6000)<( 4 + __PBP__ * 2))
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=3) AND ((6000)<( 4 + __PBP__ * 2))
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=4) AND ((6000)<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=5) AND ((6000)<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=6) AND ((6000)<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=7) AND ((6000)<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)>=8) AND ((6000)<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)==9)  AND ( __PBP__ > 2 )
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	NOP
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)< ( 8 + __PBP__ * 2)) AND ((6000)>( 3 + __PBP__ * 2))
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -(6000)
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)< ( 0404h + __PBP__ * 2)) AND ((6000)>( 7 + __PBP__ * 2))
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((6000)-( 4 + __PBP__ * 2))/4
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX3 + 3 -(((6000)-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000)< ( 040bh + __PBP__ * 2)) AND ((6000)> ( 0403h + __PBP__ * 2))
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0 
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -(6000)
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000) >= ( 040bh + __PBP__ * 2)) AND (((((6000)-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((6000)-( 9 + __PBP__ * 2))/0402h
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,0
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY5 +5- ((((6000)-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	IF ((6000) >= ( 040bh + __PBP__ * 2)) AND (((((6000)-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,((6000)-( 9 + __PBP__ * 2))/0402h
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	MOV A,(((6000)-( 9 + __PBP__ * 2))%0402h)/4+1
;# 638 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	fcall __DELAYY3 +3-((((6000)-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 639 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20].0
_L97:
#line 644 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	add a,_SysAO[20]
	mov rb,a
	mov a,0
	adc a,_SysAO[21]
	mov rc,a
#line 645 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,5
	sub a,rb
	mov a,0
	sbc a,rc
	snz c
	jmp _L103
#line 644 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	mov _SysAO[20],a
	mov a,rc
	mov _SysAO[21],a
	jmp _L69
_L103:
#line 647 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[20]
	clr _SysAO[21]
_L69:
#pragma debug scope 27 22
#pragma debug scope 22 1
	ret
_NormalMain endp
#line 647 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
___hircc equ [17]
___scc equ [16]
___papu equ [22]
___pac equ [21]
___pawu equ [23]
___pas0 equ [322]
___pas1 equ [323]
___pb equ [24]
___pbpu equ [26]
___pbc equ [25]
___pbs0 equ [324]
___pbs1 equ [325]
___integ equ [66]
___pcpu equ [29]
___pcc equ [28]
___pcs0 equ [326]
___pcs1 equ [327]
___pd equ [30]
___pdpu equ [32]
___pdc equ [31]
___pds0 equ [328]
___sledc0 equ [307]
___sledc1 equ [308]
@crom	.section 'crom'
_LC7:
	db 031h,02eh,030h,02eh,030h,00h
@crom	.section 'crom'
_LC8:
	db 058h,050h,030h,032h,05fh,053h,05fh,057h,052h,00h
@crom	.section 'crom'
_LC9:
	db 058h,02dh,053h,065h,06eh,073h,065h,020h,04dh,06fh
	db 064h,065h,06ch,03ah,020h,025h,073h,02ch,056h,065h
	db 072h,03ah,020h,025h,073h,0ah,00h
@crom	.section 'crom'
_LC10:
	db 055h,04ch,028h,055h,053h,041h,029h,00h
@crom	.section 'crom'
_LC11:
	db 020h,020h,054h,068h,072h,065h,073h,068h,06fh,06ch
	db 064h,020h,03dh,020h,025h,064h,06dh,056h,0ah,00h
@crom	.section 'crom'
_LC12:
	db 042h,061h,074h,03ah,00h
@crom	.section 'crom'
_LC13:
	db 025h,064h,00h
@crom	.section 'crom'
_LC14:
	db 02eh,025h,064h,00h
@crom	.section 'crom'
_LC15:
	db 06dh,056h,0ah,00h
@crom	.section 'crom'
_LC16:
	db 073h,069h,067h,03ah,020h,025h,064h,02ch,020h,00h
@crom	.section 'crom'
_LC17:
	db 065h,04dh,06fh,064h,065h,03dh,025h,064h,0ah,00h
@crom	.section 'crom'
_LC18:
	db 045h,076h,065h,06eh,074h,03dh,025h,064h,0ah,00h
public _main
#pragma debug scope 29 1
#line 1102 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
IFDEF WITH_DEFAULT_STARTUP
extern _main_initial0:near
extern _main_startup:near
ENDIF

ROMBANK 0 @start
@start .section com_l 'code'
_main_startup1:
@start .section com_e 'code'
	mov a,bank _main
	mov bp,a
	jmp _main

_main .section 'code'
_main proc
    local _main_2 db 2 dup(?)
#pragma debug scope 30 29
;begin block, line: 1102.-1
#pragma debug scope 31 30
;begin block, line: 1102.-1
#pragma debug variable 10 31 _main_2+0 "BatVol"
#pragma debug scope 32 31
;begin block, line: 1102.-1
#pragma debug scope 33 32
;begin block, line: 1102.-1
#line 117 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,5
	orm a,[17]
_L121:
#line 120 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	snz [17].1
	jmp _L121
#line 141 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,[16]
	mov ra,a
	clr [16]
#pragma debug scope 32 31
#pragma debug scope 31 30
#line 461 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _STimerInit
#line 462 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,7
	mov _TimerTb0Init_2[0],a
	clr _TimerTb0Init_2[1]
	fcall _TimerTb0Init
#line 463 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _TmrInitHeader
#pragma debug scope 34 31
;begin block, line: 463.-1
#pragma debug scope 35 34
;begin block, line: 463.-1
#line 36 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[24]
	clr _SysAO[25]
	clr _SysAO[26]
	clr _SysAO[27]
#line 37 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[7]
	clr _SysAO[8]
#line 38 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[9]
	clr _SysAO[10]
#line 39 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[11]
#line 40 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[12]
	clr _SysAO[13]
#line 41 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[14]
	clr _SysAO[15]
#line 42 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[20]
	clr _SysAO[21]
#line 43 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[22]
	clr _SysAO[23]
#line 44 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[18]
	clr _SysAO[19]
#line 47 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _SysAO[0],a
	clr _SysAO[1]
#line 48 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _SysAO[2],a
	clr _SysAO[3]
#line 50 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,0
	fcall _E2promRead
	mov ra,a
#line 51 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,ra
	mov _main_2[1],a
	clr _main_2[0]
	mov a,_main_2[0]
	mov _SysAO[9],a
	mov a,_main_2[1]
	mov _SysAO[10],a
#line 52 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	fcall _E2promRead
	mov ra,a
	mov a,_main_2[1]
	mov _SysAO[10],a
	mov a,ra
	or a,_main_2[0]
	mov _SysAO[9],a
#line 54 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[4]
	clr _SysAO[5]
#line 55 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[6]
#line 58 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[28]
	clr _SysAO[29]
#line 59 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[30]
#line 58 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[31]
	clr _SysAO[32]
#line 59 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[33]
#line 58 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[34]
	clr _SysAO[35]
#line 59 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _SysAO[36]
#line 62 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _SysteSetSig_2[0],a
	clr _SysteSetSig_2[1]
	fcall _SysteSetSig
#pragma debug scope 34 31
#pragma debug scope 31 30
#pragma debug scope 36 31
;begin block, line: 62.-1
#pragma debug scope 37 36
;begin block, line: 62.-1
#line 293 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [20]
#line 294 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [22]
#line 295 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [21]
#line 296 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [23]
#line 307 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,5
	mov [22],a
#line 309 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [21].7
#line 311 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	lset [323].7
#line 314 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].4
#line 315 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [22].4
#line 316 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [21].4
#line 317 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [23].4
#line 320 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [20].6
#line 321 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [22].6
#line 322 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [21].6
#line 323 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [23].6
#line 326 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [24]
#line 327 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [26]
#line 328 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [25]
#line 333 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [25].0
#line 334 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [26].0
#line 341 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [66]
#line 342 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [66].0
#line 343 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [66].1
#line 345 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [67].2
#line 348 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [21].1
#line 349 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [22].1
#line 357 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,12
	lorm a,[324]
#line 362 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,192
	lorm a,[324]
#line 363 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [25].3
#line 364 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,10
	orm a,[26]
#line 369 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,175
	andm a,[25]
#line 370 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,80
	orm a,[26]
#line 372 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [27]
#line 373 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [29]
#line 374 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [28]
#line 378 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [28].0
#line 379 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	lset [326].1
#line 380 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [29].3
#line 387 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,126
	orm a,[29]
#line 390 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [30]
#line 391 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [32]
#line 392 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [31]
#line 395 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	lset [307]
#line 396 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	lset [308]
#line 405 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [21].6
#line 406 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [22].6
#line 418 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [25].7
#line 419 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	lset [325].7
#line 420 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	lclr [325].6
#pragma debug scope 36 31
#pragma debug scope 31 30
#line 467 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr [28].4
	set [29].4
	clr [27].4
#line 470 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _UsartCfg
#line 473 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _KeyInit
#line 474 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _PwrInit
#line 475 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,7
	mov _SysWakeUpInit_2[0],a
	clr _SysWakeUpInit_2[1]
	fcall _SysWakeUpInit
#line 476 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SmokeDetInit
#line 477 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _InitCO_Data
#line 480 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	set [67].0
#line 484 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC7
	mov _printf_2[4],a
	mov a,high offset _LC7
	mov _printf_2[5],a
	mov a,low offset _LC8
	mov _printf_2[2],a
	mov a,high offset _LC8
	mov _printf_2[3],a
	mov a,low offset _LC9
	mov _printf_2[0],a
	mov a,high offset _LC9
	mov _printf_2[1],a
	fcall _printf
#line 486 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC10
	mov _printf_2[0],a
	mov a,high offset _LC10
	mov _printf_2[1],a
	fcall _printf
#line 490 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,-92
	mov _printf_2[2],a
	mov a,1
	mov _printf_2[3],a
	mov a,low offset _LC11
	mov _printf_2[0],a
	mov a,high offset _LC11
	mov _printf_2[1],a
	fcall _printf
#line 491 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _E2promDisplay
#line 494 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _BatteryCheckHandle
	mov a,ra
	mov _main_2[0],a
	mov a,rb
	mov _main_2[1],a
#line 496 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC12
	mov _printf_2[0],a
	mov a,high offset _LC12
	mov _printf_2[1],a
	fcall _printf
#line 497 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov _printf_2[3],a
	mov a,low offset _LC13
	mov _printf_2[0],a
	mov a,high offset _LC13
	mov _printf_2[1],a
	fcall _printf
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov _printf_2[3],a
	mov a,low offset _LC14
	mov _printf_2[0],a
	mov a,high offset _LC14
	mov _printf_2[1],a
	fcall _printf
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov _printf_2[3],a
	mov a,low offset _LC13
	mov _printf_2[0],a
	mov a,high offset _LC13
	mov _printf_2[1],a
	fcall _printf
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov _printf_2[3],a
	mov a,low offset _LC13
	mov _printf_2[0],a
	mov a,high offset _LC13
	mov _printf_2[1],a
	fcall _printf
#line 498 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,low offset _LC15
	mov _printf_2[0],a
	mov a,high offset _LC15
	mov _printf_2[1],a
	fcall _printf
#line 506 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _RfInit
_L122:
#pragma debug scope 30 29
#pragma debug scope 29 1
#line 1107 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
;# 1107 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c" 1
	clr wdt
#line 1108 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _Polling
#line 1109 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _KeyHandleMsg
#line 1110 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _UartService
#line 1112 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SysteGetSig
	mov a,ra
	mov _SysAO[4],a
	mov a,rb
	mov _SysAO[5],a
#line 1113 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,ra
	or a,rb
	sz z
	jmp _L123
#line 1116 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,ra
	mov _printf_2[2],a
	mov a,rb
	mov _printf_2[3],a
	mov a,low offset _LC16
	mov _printf_2[0],a
	mov a,high offset _LC16
	mov _printf_2[1],a
	fcall _printf
#line 1117 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[0]
	mov _printf_2[2],a
	mov a,_SysAO[1]
	mov _printf_2[3],a
	mov a,low offset _LC17
	mov _printf_2[0],a
	mov a,high offset _LC17
	mov _printf_2[1],a
	fcall _printf
#line 1118 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[7]
	mov _printf_2[2],a
	mov a,_SysAO[8]
	mov _printf_2[3],a
	mov a,low offset _LC18
	mov _printf_2[0],a
	mov a,high offset _LC18
	mov _printf_2[1],a
	fcall _printf
#line 1120 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[0]
	mov rb,a
	mov a,_SysAO[1]
	mov rc,a
	mov a,rb
	or a,rc
	sz z
	jmp _L125
	mov a,rb
	xor a,1
	or a,rc
	sz z
	jmp _L126
	mov a,rb
	xor a,2
	or a,rc
	sz z
	jmp _L127
	mov a,rb
	xor a,3
	or a,rc
	sz z
	jmp _L128
	mov a,rb
	xor a,4
	or a,rc
	sz z
	jmp _L129
	mov a,rb
	xor a,5
	or a,rc
	sz z
	jmp _L130
	mov a,rb
	xor a,7
	or a,rc
	sz z
	jmp _L131
	mov a,rb
	xor a,11
	or a,rc
	sz z
	jmp _L132
	mov a,rb
	xor a,12
	or a,rc
	sz z
	jmp _L132
	mov a,rb
	xor a,13
	or a,rc
	sz z
	jmp _L132
	mov a,rb
	xor a,14
	or a,rc
	sz z
	jmp _L132
	mov a,rb
	xor a,15
	or a,rc
	sz z
	jmp _L133
	mov a,rb
	xor a,16
	or a,rc
	sz z
	jmp _L134
	mov a,rb
	xor a,17
	or a,rc
	sz z
	jmp _L135
	mov a,rb
	xor a,18
	or a,rc
	snz z
	jmp _L124
	jmp _L135
_L125:
#line 1123 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _NormalMain
#line 1124 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L126:
#line 1127 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SmokeCaliMain
#line 1128 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L127:
#line 1131 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SmokeTestMain
#line 1132 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L128:
#line 1135 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SmokeAlarmMain
#line 1136 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L129:
#line 1139 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SmokeMuteMain
#line 1140 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L130:
#line 1143 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _SmokeErrMain
#line 1144 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L131:
#line 1153 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _CoTestMain
#line 1154 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L132:
#line 1176 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	fcall _RfPairMain
#line 1177 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L133:
#line 1180 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _RfSmokeAlarmMain
#line 1181 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L134:
#line 1184 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _RfCoAlarmMain
#line 1185 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	jmp _L124
_L135:
#line 1189 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,rb
	fcall _RfIntranetTestMain
_L124:
#line 1197 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[2]
	sub a,_SysAO[0]
	mov a,_SysAO[3]
	sbc a,_SysAO[1]
	sz cz
	jmp _L122
#line 1199 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,1
	mov _SysteSetSig_2[0],a
	clr _SysteSetSig_2[1]
	fcall _SysteSetSig
#line 1200 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[0]
	mov _SysAO[2],a
	mov a,_SysAO[1]
	mov _SysAO[3],a
	jmp _L122
_L123:
#line 1203 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	mov a,_SysAO[24]
	or a,_SysAO[25]
	or a,_SysAO[26]
	or a,_SysAO[27]
	snz z
	jmp _L122
#line 1205 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
	fcall _EnteryLowPower
	jmp _L122
	jmp $
_main endp

@dummy proc
	call _main
@dummy endp

#line 1205 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
#pragma debug scope 1 1
@HCCINIT	.section 'data'
#line 514 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
@HCCINIT___lastTick10ms_3180 .section 'data'
___lastTick10ms_3180 label byte
#pragma debug variable 10 5 ___lastTick10ms_3180 "lastTick10ms"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___lastTick10ms_3180 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___lastTick10ms_3180 .section 'data'
#line 23 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
public _SysAO
@HCCINIT0_SysAO .section 'data'
_SysAO	db 37 dup(0)
#pragma debug struct_begin 42 "SystemQueueObject"
#pragma debug field 0 12 "sig"
#pragma debug field 0 8 "atrr"
#pragma debug struct_end
#pragma debug struct_begin 43 "SystemObject"
#pragma debug field 0 12 "eMode"
#pragma debug field 0 12 "eOldMode"
#pragma debug field 0 12 "sig"
#pragma debug field 0 8 "attrQF__"
#pragma debug field 0 12 "eEventFlg"
#pragma debug field 0 12 "LifeTimeDays"
#pragma debug field 0 8 "LifeTimeUpdateFlag"
#pragma debug field 0 12 "SlpTimeCnt"
#pragma debug field 0 12 "EventMuteTimeCnt"
#pragma debug field 0 12 "AdcInputFlag"
#pragma debug field 0 12 "PowerOnFlag"
#pragma debug field 0 12 "StdbyTimeCnt"
#pragma debug field 0 12 "eErrCode"
#pragma debug field 0 14 "haltFlag"
#pragma debug field 1 42 3 "sigQue"
#pragma debug struct_end
#pragma debug variable 43 1 _SysAO "SysAO"

@HCCINIT .section 'data'
#pragma debug struct_begin 44 "__scc_bits"
#pragma debug field 21 8 0 1 "__fsiden" ;0,1
#pragma debug field 21 8 0 1 "__fhiden" ;1,1
#pragma debug field 21 8 0 1 "__fss" ;2,1
#pragma debug field 21 8 0 1 "__fhs" ;3,1
#pragma debug field 21 8 0 1 ;4,1
#pragma debug field 21 8 0 1 "__cks0" ;5,1
#pragma debug field 21 8 0 1 "__cks1" ;6,1
#pragma debug field 21 8 0 1 "__cks2" ;7,1
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___scc "__scc" 1
#pragma debug struct_begin 46 "__hircc_bits"
#pragma debug field 21 8 0 1 "__hircen" ;0,1
#pragma debug field 21 8 0 1 "__hircf" ;1,1
#pragma debug field 21 8 0 1 "__hirc0" ;2,1
#pragma debug field 21 8 0 1 "__hirc1" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 47 ""
#pragma debug field 2 46 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 47 1 ___hircc "__hircc" 1
#pragma debug struct_begin 48 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 49 ""
#pragma debug field 2 48 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 49 1 ___pa "__pa" 1
#pragma debug struct_begin 50 "__pac_bits"
#pragma debug field 21 8 0 1 "__pac0" ;0,1
#pragma debug field 21 8 0 1 "__pac1" ;1,1
#pragma debug field 21 8 0 1 "__pac2" ;2,1
#pragma debug field 21 8 0 1 "__pac3" ;3,1
#pragma debug field 21 8 0 1 "__pac4" ;4,1
#pragma debug field 21 8 0 1 "__pac5" ;5,1
#pragma debug field 21 8 0 1 "__pac6" ;6,1
#pragma debug field 21 8 0 1 "__pac7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 51 ""
#pragma debug field 2 50 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 51 1 ___pac "__pac" 1
#pragma debug struct_begin 52 "__papu_bits"
#pragma debug field 21 8 0 1 "__papu0" ;0,1
#pragma debug field 21 8 0 1 "__papu1" ;1,1
#pragma debug field 21 8 0 1 "__papu2" ;2,1
#pragma debug field 21 8 0 1 "__papu3" ;3,1
#pragma debug field 21 8 0 1 "__papu4" ;4,1
#pragma debug field 21 8 0 1 "__papu5" ;5,1
#pragma debug field 21 8 0 1 "__papu6" ;6,1
#pragma debug field 21 8 0 1 "__papu7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 53 ""
#pragma debug field 2 52 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 53 1 ___papu "__papu" 1
#pragma debug struct_begin 54 "__pawu_bits"
#pragma debug field 21 8 0 1 "__pawu0" ;0,1
#pragma debug field 21 8 0 1 "__pawu1" ;1,1
#pragma debug field 21 8 0 1 "__pawu2" ;2,1
#pragma debug field 21 8 0 1 "__pawu3" ;3,1
#pragma debug field 21 8 0 1 "__pawu4" ;4,1
#pragma debug field 21 8 0 1 "__pawu5" ;5,1
#pragma debug field 21 8 0 1 "__pawu6" ;6,1
#pragma debug field 21 8 0 1 "__pawu7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 55 ""
#pragma debug field 2 54 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 55 1 ___pawu "__pawu" 1
#pragma debug struct_begin 56 "__pb_bits"
#pragma debug field 21 8 0 1 "__pb0" ;0,1
#pragma debug field 21 8 0 1 "__pb1" ;1,1
#pragma debug field 21 8 0 1 "__pb2" ;2,1
#pragma debug field 21 8 0 1 "__pb3" ;3,1
#pragma debug field 21 8 0 1 "__pb4" ;4,1
#pragma debug field 21 8 0 1 "__pb5" ;5,1
#pragma debug field 21 8 0 1 "__pb6" ;6,1
#pragma debug field 21 8 0 1 "__pb7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 57 ""
#pragma debug field 2 56 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 57 1 ___pb "__pb" 1
#pragma debug struct_begin 58 "__pbc_bits"
#pragma debug field 21 8 0 1 "__pbc0" ;0,1
#pragma debug field 21 8 0 1 "__pbc1" ;1,1
#pragma debug field 21 8 0 1 "__pbc2" ;2,1
#pragma debug field 21 8 0 1 "__pbc3" ;3,1
#pragma debug field 21 8 0 1 "__pbc4" ;4,1
#pragma debug field 21 8 0 1 "__pbc5" ;5,1
#pragma debug field 21 8 0 1 "__pbc6" ;6,1
#pragma debug field 21 8 0 1 "__pbc7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 59 ""
#pragma debug field 2 58 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 59 1 ___pbc "__pbc" 1
#pragma debug struct_begin 60 "__pbpu_bits"
#pragma debug field 21 8 0 1 "__pbpu0" ;0,1
#pragma debug field 21 8 0 1 "__pbpu1" ;1,1
#pragma debug field 21 8 0 1 "__pbpu2" ;2,1
#pragma debug field 21 8 0 1 "__pbpu3" ;3,1
#pragma debug field 21 8 0 1 "__pbpu4" ;4,1
#pragma debug field 21 8 0 1 "__pbpu5" ;5,1
#pragma debug field 21 8 0 1 "__pbpu6" ;6,1
#pragma debug field 21 8 0 1 "__pbpu7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 61 ""
#pragma debug field 2 60 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 61 1 ___pbpu "__pbpu" 1
#pragma debug struct_begin 62 "__pc_bits"
#pragma debug field 21 8 0 1 "__pc0" ;0,1
#pragma debug field 21 8 0 1 "__pc1" ;1,1
#pragma debug field 21 8 0 1 "__pc2" ;2,1
#pragma debug field 21 8 0 1 "__pc3" ;3,1
#pragma debug field 21 8 0 1 "__pc4" ;4,1
#pragma debug field 21 8 0 1 "__pc5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 63 ""
#pragma debug field 2 62 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 63 1 ___pc "__pc" 1
#pragma debug struct_begin 64 "__pcc_bits"
#pragma debug field 21 8 0 1 "__pcc0" ;0,1
#pragma debug field 21 8 0 1 "__pcc1" ;1,1
#pragma debug field 21 8 0 1 "__pcc2" ;2,1
#pragma debug field 21 8 0 1 "__pcc3" ;3,1
#pragma debug field 21 8 0 1 "__pcc4" ;4,1
#pragma debug field 21 8 0 1 "__pcc5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 65 ""
#pragma debug field 2 64 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 65 1 ___pcc "__pcc" 1
#pragma debug struct_begin 66 "__pcpu_bits"
#pragma debug field 21 8 0 1 "__pcpu0" ;0,1
#pragma debug field 21 8 0 1 "__pcpu1" ;1,1
#pragma debug field 21 8 0 1 "__pcpu2" ;2,1
#pragma debug field 21 8 0 1 "__pcpu3" ;3,1
#pragma debug field 21 8 0 1 "__pcpu4" ;4,1
#pragma debug field 21 8 0 1 "__pcpu5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 67 ""
#pragma debug field 2 66 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 67 1 ___pcpu "__pcpu" 1
#pragma debug struct_begin 68 "__pd_bits"
#pragma debug field 21 8 0 1 "__pd0" ;0,1
#pragma debug field 21 8 0 1 "__pd1" ;1,1
#pragma debug field 21 8 0 1 "__pd2" ;2,1
#pragma debug field 21 8 0 1 "__pd3" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 69 ""
#pragma debug field 2 68 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 69 1 ___pd "__pd" 1
#pragma debug struct_begin 70 "__pdc_bits"
#pragma debug field 21 8 0 1 "__pdc0" ;0,1
#pragma debug field 21 8 0 1 "__pdc1" ;1,1
#pragma debug field 21 8 0 1 "__pdc2" ;2,1
#pragma debug field 21 8 0 1 "__pdc3" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 71 ""
#pragma debug field 2 70 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 71 1 ___pdc "__pdc" 1
#pragma debug struct_begin 72 "__pdpu_bits"
#pragma debug field 21 8 0 1 "__pdpu0" ;0,1
#pragma debug field 21 8 0 1 "__pdpu1" ;1,1
#pragma debug field 21 8 0 1 "__pdpu2" ;2,1
#pragma debug field 21 8 0 1 "__pdpu3" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 73 ""
#pragma debug field 2 72 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 73 1 ___pdpu "__pdpu" 1
#pragma debug struct_begin 74 "__wdtc_bits"
#pragma debug field 21 8 0 1 "__ws0" ;0,1
#pragma debug field 21 8 0 1 "__ws1" ;1,1
#pragma debug field 21 8 0 1 "__ws2" ;2,1
#pragma debug field 21 8 0 1 "__we0" ;3,1
#pragma debug field 21 8 0 1 "__we1" ;4,1
#pragma debug field 21 8 0 1 "__we2" ;5,1
#pragma debug field 21 8 0 1 "__we3" ;6,1
#pragma debug field 21 8 0 1 "__we4" ;7,1
#pragma debug struct_end
#pragma debug union_begin 75 ""
#pragma debug field 2 74 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 75 1 ___wdtc "__wdtc" 1
#pragma debug struct_begin 76 "__integ_bits"
#pragma debug field 21 8 0 1 "__int0s0" ;0,1
#pragma debug field 21 8 0 1 "__int0s1" ;1,1
#pragma debug field 21 8 0 1 "__int1s0" ;2,1
#pragma debug field 21 8 0 1 "__int1s1" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 77 ""
#pragma debug field 2 76 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 77 1 ___integ "__integ" 1
#pragma debug struct_begin 78 "__intc0_bits"
#pragma debug field 21 8 0 1 "__emi" ;0,1
#pragma debug field 21 8 0 1 "__pltc0e" ;1,1
#pragma debug field 21 8 0 1 "__int0e" ;2,1
#pragma debug field 21 8 0 1 "__int1e" ;3,1
#pragma debug field 21 8 0 1 "__pltc0f" ;4,1
#pragma debug field 21 8 0 1 "__int0f" ;5,1
#pragma debug field 21 8 0 1 "__int1f" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 79 ""
#pragma debug field 2 78 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 79 1 ___intc0 "__intc0" 1
#pragma debug struct_begin 80 "__intc2_bits"
#pragma debug field 21 8 0 1 "__mf2e" ;0,1
#pragma debug field 21 8 0 1 "__tb0e" ;1,1
#pragma debug field 21 8 0 1 "__tb1e" ;2,1
#pragma debug field 21 8 0 1 "__pltc1e" ;3,1
#pragma debug field 21 8 0 1 "__mf2f" ;4,1
#pragma debug field 21 8 0 1 "__tb0f" ;5,1
#pragma debug field 21 8 0 1 "__tb1f" ;6,1
#pragma debug field 21 8 0 1 "__pltc1f" ;7,1
#pragma debug struct_end
#pragma debug union_begin 81 ""
#pragma debug field 2 80 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 81 1 ___intc2 "__intc2" 1
#pragma debug struct_begin 82 "__pscr_bits"
#pragma debug field 21 8 0 1 "__clksel0" ;0,1
#pragma debug field 21 8 0 1 "__clksel1" ;1,1
#pragma debug field 21 8 0 6 ;2,6
#pragma debug struct_end
#pragma debug union_begin 83 ""
#pragma debug field 2 82 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 83 1 ___pscr "__pscr" 1
#pragma debug struct_begin 84 "__tb0c_bits"
#pragma debug field 21 8 0 1 "__tb00" ;0,1
#pragma debug field 21 8 0 1 "__tb01" ;1,1
#pragma debug field 21 8 0 1 "__tb02" ;2,1
#pragma debug field 21 8 0 4 ;3,4
#pragma debug field 21 8 0 1 "__tb0on" ;7,1
#pragma debug struct_end
#pragma debug union_begin 85 ""
#pragma debug field 2 84 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 85 1 ___tb0c "__tb0c" 1
#pragma debug variable 8 1 ___stm0dl "__stm0dl" 1
#pragma debug variable 8 1 ___stm0dh "__stm0dh" 1
#pragma debug struct_begin 86 "__sledc0_bits"
#pragma debug field 21 8 0 1 "__sledc00" ;0,1
#pragma debug field 21 8 0 1 "__sledc01" ;1,1
#pragma debug field 21 8 0 1 "__sledc02" ;2,1
#pragma debug field 21 8 0 1 "__sledc03" ;3,1
#pragma debug field 21 8 0 1 "__sledc04" ;4,1
#pragma debug field 21 8 0 1 "__sledc05" ;5,1
#pragma debug field 21 8 0 1 "__sledc06" ;6,1
#pragma debug field 21 8 0 1 "__sledc07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 87 ""
#pragma debug field 2 86 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 87 1 ___sledc0 "__sledc0" 1
#pragma debug struct_begin 88 "__sledc1_bits"
#pragma debug field 21 8 0 1 "__sledc10" ;0,1
#pragma debug field 21 8 0 1 "__sledc11" ;1,1
#pragma debug field 21 8 0 1 "__sledc12" ;2,1
#pragma debug field 21 8 0 1 "__sledc13" ;3,1
#pragma debug field 21 8 0 1 "__sledc14" ;4,1
#pragma debug field 21 8 0 1 "__sledc15" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 89 ""
#pragma debug field 2 88 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 89 1 ___sledc1 "__sledc1" 1
#pragma debug struct_begin 90 "__pas0_bits"
#pragma debug field 21 8 0 1 "__pas00" ;0,1
#pragma debug field 21 8 0 1 "__pas01" ;1,1
#pragma debug field 21 8 0 1 "__pas02" ;2,1
#pragma debug field 21 8 0 1 "__pas03" ;3,1
#pragma debug field 21 8 0 1 "__pas04" ;4,1
#pragma debug field 21 8 0 1 "__pas05" ;5,1
#pragma debug field 21 8 0 1 "__pas06" ;6,1
#pragma debug field 21 8 0 1 "__pas07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 91 ""
#pragma debug field 2 90 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 91 1 ___pas0 "__pas0" 1
#pragma debug struct_begin 92 "__pas1_bits"
#pragma debug field 21 8 0 1 "__pas10" ;0,1
#pragma debug field 21 8 0 1 "__pas11" ;1,1
#pragma debug field 21 8 0 1 "__pas12" ;2,1
#pragma debug field 21 8 0 1 "__pas13" ;3,1
#pragma debug field 21 8 0 1 "__pas14" ;4,1
#pragma debug field 21 8 0 1 "__pas15" ;5,1
#pragma debug field 21 8 0 1 "__pas16" ;6,1
#pragma debug field 21 8 0 1 "__pas17" ;7,1
#pragma debug struct_end
#pragma debug union_begin 93 ""
#pragma debug field 2 92 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 93 1 ___pas1 "__pas1" 1
#pragma debug struct_begin 94 "__pbs0_bits"
#pragma debug field 21 8 0 1 "__pbs00" ;0,1
#pragma debug field 21 8 0 1 "__pbs01" ;1,1
#pragma debug field 21 8 0 1 "__pbs02" ;2,1
#pragma debug field 21 8 0 1 "__pbs03" ;3,1
#pragma debug field 21 8 0 1 "__pbs04" ;4,1
#pragma debug field 21 8 0 1 "__pbs05" ;5,1
#pragma debug field 21 8 0 1 "__pbs06" ;6,1
#pragma debug field 21 8 0 1 "__pbs07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 95 ""
#pragma debug field 2 94 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 95 1 ___pbs0 "__pbs0" 1
#pragma debug struct_begin 96 "__pbs1_bits"
#pragma debug field 21 8 0 1 "__pbs10" ;0,1
#pragma debug field 21 8 0 1 "__pbs11" ;1,1
#pragma debug field 21 8 0 1 "__pbs12" ;2,1
#pragma debug field 21 8 0 1 "__pbs13" ;3,1
#pragma debug field 21 8 0 1 "__pbs14" ;4,1
#pragma debug field 21 8 0 1 "__pbs15" ;5,1
#pragma debug field 21 8 0 1 "__pbs16" ;6,1
#pragma debug field 21 8 0 1 "__pbs17" ;7,1
#pragma debug struct_end
#pragma debug union_begin 97 ""
#pragma debug field 2 96 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 97 1 ___pbs1 "__pbs1" 1
#pragma debug struct_begin 98 "__pcs0_bits"
#pragma debug field 21 8 0 1 "__pcs00" ;0,1
#pragma debug field 21 8 0 1 "__pcs01" ;1,1
#pragma debug field 21 8 0 1 "__pcs02" ;2,1
#pragma debug field 21 8 0 1 "__pcs03" ;3,1
#pragma debug field 21 8 0 1 "__pcs04" ;4,1
#pragma debug field 21 8 0 1 "__pcs05" ;5,1
#pragma debug field 21 8 0 1 "__pcs06" ;6,1
#pragma debug field 21 8 0 1 "__pcs07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 99 ""
#pragma debug field 2 98 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 99 1 ___pcs0 "__pcs0" 1
#pragma debug struct_begin 100 "__pcs1_bits"
#pragma debug field 21 8 0 1 "__pcs10" ;0,1
#pragma debug field 21 8 0 1 "__pcs11" ;1,1
#pragma debug field 21 8 0 1 "__pcs12" ;2,1
#pragma debug field 21 8 0 1 "__pcs13" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 101 ""
#pragma debug field 2 100 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 101 1 ___pcs1 "__pcs1" 1
#pragma debug struct_begin 102 "__pds0_bits"
#pragma debug field 21 8 0 1 "__pds00" ;0,1
#pragma debug field 21 8 0 1 "__pds01" ;1,1
#pragma debug field 21 8 0 1 "__pds02" ;2,1
#pragma debug field 21 8 0 1 "__pds03" ;3,1
#pragma debug field 21 8 0 1 "__pds04" ;4,1
#pragma debug field 21 8 0 1 "__pds05" ;5,1
#pragma debug field 21 8 0 1 "__pds06" ;6,1
#pragma debug field 21 8 0 1 "__pds07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 103 ""
#pragma debug field 2 102 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 103 1 ___pds0 "__pds0" 1

; output external variables
extern _SmokeAO:byte
extern _PwrAO:byte
extern r1:byte
extern r2:byte
extern r3:byte
#line 1102 "e:\x-sense\xp02\htba45f5260-xp0456\src\main.c"
@code .section at 0 'code'
	clr bp
	jmp _main_startup1

extern _printf_2:byte
extern _printf:near
extern _E2promRead:near
extern _builtin_holtek_udivmodhi4_2:byte
extern _builtin_holtek_udivmodhi4:near
extern _EnteryLowPower:near
extern _TmrInsertTimer_2:byte
extern _TmrInsertTimer:near
extern _GetRfPairedMode:near
extern _E2promWrite_2:byte
extern _E2promWrite:near
extern _BatteryCheck:near
extern _SmokeAlarmCheck:near
extern _STimerInit:near
extern _TmrInitHeader:near
extern _UsartCfg:near
extern _KeyInit:near
extern _PwrInit:near
extern _SmokeDetInit:near
extern _InitCO_Data:near
extern _BatteryCheckHandle:near
extern _RfInit:near
extern _Polling:near
extern _KeyHandleMsg:near
extern _UartService:near
extern _SmokeCaliMain:near
extern _SmokeTestMain:near
extern _SmokeAlarmMain:near
extern _SmokeMuteMain:near
extern _SmokeErrMain:near
extern _CoTestMain:near
extern _RfPairMain:near
extern _RfSmokeAlarmMain:near
extern _RfCoAlarmMain:near
extern _RfIntranetTestMain:near

; 
; Generated by holtek-gcc v3.19, Tue Mar 15 10:59:13 2022
; Rebuild 718
; end of file

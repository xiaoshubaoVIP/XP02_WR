; Generated by holtek-gcc v3.19, Wed Mar 01 18:52:29 2023
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 67
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [67]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___pc equ [27]
public _SendCmd
#pragma debug scope 2 1
#line 18 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
_SendCmd .section 'code'
_SendCmd proc
    local _SendCmd_2 db 1 dup(?)	; 0,1
	mov _SendCmd_2[0],a
#pragma debug variable 8 2 _SendCmd_2+0 "VoiceData"
#line 21 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	set [27].5
#line 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 8000>263690
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 8000of the argument exceeds the maxinum 263690'
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 8000<0
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 8000 of the argument exceeds the mininum 0'
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 8000==0
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=1) AND (8000<( 4 + __PBP__ * 2))
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=2) AND (8000<( 4 + __PBP__ * 2))
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=3) AND (8000<( 4 + __PBP__ * 2))
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=4) AND (8000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=5) AND (8000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=6) AND (8000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=7) AND (8000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000>=8) AND (8000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000==9)  AND ( __PBP__ > 2 )
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000< ( 8 + __PBP__ * 2)) AND (8000>( 3 + __PBP__ * 2))
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -8000
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000< ( 0404h + __PBP__ * 2)) AND (8000>( 7 + __PBP__ * 2))
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(8000-( 4 + __PBP__ * 2))/4
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((8000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000< ( 040bh + __PBP__ * 2)) AND (8000> ( 0403h + __PBP__ * 2))
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -8000
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000 >= ( 040bh + __PBP__ * 2)) AND ((((8000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(8000-( 9 + __PBP__ * 2))/0402h
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((8000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (8000 >= ( 040bh + __PBP__ * 2)) AND ((((8000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(8000-( 9 + __PBP__ * 2))/0402h
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((8000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 22 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((8000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 23 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	clr [27].5
#line 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1000>263690
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 1000of the argument exceeds the maxinum 263690'
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1000<0
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 1000 of the argument exceeds the mininum 0'
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1000==0
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=1) AND (1000<( 4 + __PBP__ * 2))
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=2) AND (1000<( 4 + __PBP__ * 2))
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=3) AND (1000<( 4 + __PBP__ * 2))
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=4) AND (1000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=5) AND (1000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=6) AND (1000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=7) AND (1000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000>=8) AND (1000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000==9)  AND ( __PBP__ > 2 )
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000< ( 8 + __PBP__ * 2)) AND (1000>( 3 + __PBP__ * 2))
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -1000
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000< ( 0404h + __PBP__ * 2)) AND (1000>( 7 + __PBP__ * 2))
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1000-( 4 + __PBP__ * 2))/4
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((1000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000< ( 040bh + __PBP__ * 2)) AND (1000> ( 0403h + __PBP__ * 2))
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -1000
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000 >= ( 040bh + __PBP__ * 2)) AND ((((1000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1000-( 9 + __PBP__ * 2))/0402h
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((1000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1000 >= ( 040bh + __PBP__ * 2)) AND ((((1000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1000-( 9 + __PBP__ * 2))/0402h
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((1000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 24 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((1000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	mov a,8
	mov ra,a
_L5:
#line 28 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz _SendCmd_2[0].7
	jmp _L2
#line 30 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	set [27].5
#line 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1500>263690
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 1500of the argument exceeds the maxinum 263690'
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1500<0
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 1500 of the argument exceeds the mininum 0'
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1500==0
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=1) AND (1500<( 4 + __PBP__ * 2))
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=2) AND (1500<( 4 + __PBP__ * 2))
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=3) AND (1500<( 4 + __PBP__ * 2))
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=4) AND (1500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=5) AND (1500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=6) AND (1500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=7) AND (1500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=8) AND (1500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500==9)  AND ( __PBP__ > 2 )
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500< ( 8 + __PBP__ * 2)) AND (1500>( 3 + __PBP__ * 2))
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -1500
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500< ( 0404h + __PBP__ * 2)) AND (1500>( 7 + __PBP__ * 2))
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1500-( 4 + __PBP__ * 2))/4
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((1500-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500< ( 040bh + __PBP__ * 2)) AND (1500> ( 0403h + __PBP__ * 2))
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -1500
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500 >= ( 040bh + __PBP__ * 2)) AND ((((1500-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1500-( 9 + __PBP__ * 2))/0402h
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((1500-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500 >= ( 040bh + __PBP__ * 2)) AND ((((1500-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1500-( 9 + __PBP__ * 2))/0402h
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((1500-( 9 + __PBP__ * 2))%0402h)/4+1
;# 31 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((1500-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 32 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	clr [27].5
#line 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 500>263690
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 500of the argument exceeds the maxinum 263690'
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 500<0
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 500 of the argument exceeds the mininum 0'
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 500==0
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=1) AND (500<( 4 + __PBP__ * 2))
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=2) AND (500<( 4 + __PBP__ * 2))
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=3) AND (500<( 4 + __PBP__ * 2))
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=4) AND (500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=5) AND (500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=6) AND (500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=7) AND (500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=8) AND (500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500==9)  AND ( __PBP__ > 2 )
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500< ( 8 + __PBP__ * 2)) AND (500>( 3 + __PBP__ * 2))
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -500
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500< ( 0404h + __PBP__ * 2)) AND (500>( 7 + __PBP__ * 2))
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(500-( 4 + __PBP__ * 2))/4
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((500-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500< ( 040bh + __PBP__ * 2)) AND (500> ( 0403h + __PBP__ * 2))
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -500
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500 >= ( 040bh + __PBP__ * 2)) AND ((((500-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(500-( 9 + __PBP__ * 2))/0402h
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((500-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500 >= ( 040bh + __PBP__ * 2)) AND ((((500-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(500-( 9 + __PBP__ * 2))/0402h
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((500-( 9 + __PBP__ * 2))%0402h)/4+1
;# 33 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((500-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	jmp _L3
_L2:
#line 37 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	set [27].5
#line 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 500>263690
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 500of the argument exceeds the maxinum 263690'
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 500<0
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 500 of the argument exceeds the mininum 0'
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 500==0
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=1) AND (500<( 4 + __PBP__ * 2))
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=2) AND (500<( 4 + __PBP__ * 2))
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=3) AND (500<( 4 + __PBP__ * 2))
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=4) AND (500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=5) AND (500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=6) AND (500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=7) AND (500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500>=8) AND (500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500==9)  AND ( __PBP__ > 2 )
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500< ( 8 + __PBP__ * 2)) AND (500>( 3 + __PBP__ * 2))
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -500
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500< ( 0404h + __PBP__ * 2)) AND (500>( 7 + __PBP__ * 2))
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(500-( 4 + __PBP__ * 2))/4
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((500-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500< ( 040bh + __PBP__ * 2)) AND (500> ( 0403h + __PBP__ * 2))
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -500
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500 >= ( 040bh + __PBP__ * 2)) AND ((((500-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(500-( 9 + __PBP__ * 2))/0402h
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((500-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (500 >= ( 040bh + __PBP__ * 2)) AND ((((500-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(500-( 9 + __PBP__ * 2))/0402h
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((500-( 9 + __PBP__ * 2))%0402h)/4+1
;# 38 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((500-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 39 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	clr [27].5
#line 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1500>263690
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 1500of the argument exceeds the maxinum 263690'
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1500<0
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 1500 of the argument exceeds the mininum 0'
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 1500==0
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=1) AND (1500<( 4 + __PBP__ * 2))
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=2) AND (1500<( 4 + __PBP__ * 2))
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=3) AND (1500<( 4 + __PBP__ * 2))
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=4) AND (1500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=5) AND (1500<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=6) AND (1500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=7) AND (1500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500>=8) AND (1500<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500==9)  AND ( __PBP__ > 2 )
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500< ( 8 + __PBP__ * 2)) AND (1500>( 3 + __PBP__ * 2))
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -1500
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500< ( 0404h + __PBP__ * 2)) AND (1500>( 7 + __PBP__ * 2))
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1500-( 4 + __PBP__ * 2))/4
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((1500-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500< ( 040bh + __PBP__ * 2)) AND (1500> ( 0403h + __PBP__ * 2))
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -1500
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500 >= ( 040bh + __PBP__ * 2)) AND ((((1500-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1500-( 9 + __PBP__ * 2))/0402h
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((1500-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (1500 >= ( 040bh + __PBP__ * 2)) AND ((((1500-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(1500-( 9 + __PBP__ * 2))/0402h
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((1500-( 9 + __PBP__ * 2))%0402h)/4+1
;# 40 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((1500-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L3:
#line 42 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,_SendCmd_2[0]
	addm a,_SendCmd_2[0]
	sdz ra
	jmp _L5
	ret
_SendCmd endp
#line 42 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
#pragma debug scope 1 1
___pa equ [20]
public _SpeakerSendCmdForPowerOn
#pragma debug scope 3 1
#line 53 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
_SpeakerSendCmdForPowerOn .section 'code'
_SpeakerSendCmdForPowerOn proc
    local _SpeakerSendCmdForPowerOn_2 db 1 dup(?)	; 0,1
	mov _SpeakerSendCmdForPowerOn_2[0],a
#pragma debug variable 8 3 _SpeakerSendCmdForPowerOn_2+0 "VoiceData"
#line 54 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	clr [20].5
#line 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 50000>263690
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 50000<0
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 50000==0
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 56 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L9:
#line 57 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	sz [20].3
	jmp _L9
#line 58 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,255
	fcall _SendCmd
#line 59 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,_SpeakerSendCmdForPowerOn_2[0]
	fcall _SendCmd
#line 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000>263690
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000of the argument exceeds the maxinum 263690'
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000<0
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000 of the argument exceeds the mininum 0'
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000==0
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=1) AND (5000<( 4 + __PBP__ * 2))
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=2) AND (5000<( 4 + __PBP__ * 2))
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=3) AND (5000<( 4 + __PBP__ * 2))
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=4) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=5) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=6) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=7) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=8) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000==9)  AND ( __PBP__ > 2 )
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 8 + __PBP__ * 2)) AND (5000>( 3 + __PBP__ * 2))
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -5000
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 0404h + __PBP__ * 2)) AND (5000>( 7 + __PBP__ * 2))
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 4 + __PBP__ * 2))/4
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((5000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 040bh + __PBP__ * 2)) AND (5000> ( 0403h + __PBP__ * 2))
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -5000
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((5000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((5000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 60 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((5000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L10:
#line 61 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz [20].3
	jmp _L12
#line 63 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 63 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	clr wdt
	jmp _L10
_L12:
#line 66 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	set [20].5
	ret
_SpeakerSendCmdForPowerOn endp
#line 66 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
#pragma debug scope 1 1
public _SpeakerSendCmd
#pragma debug scope 4 1
#line 77 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
_SpeakerSendCmd .section 'code'
_SpeakerSendCmd proc
public _SpeakerSendCmd_2
    local _SpeakerSendCmd_2 db 4 dup(?)	; 4,0
#pragma debug variable 14 4 _SpeakerSendCmd_2+0 "VoiceData"
#line 80 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	clr [20].5
#line 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 50000>263690
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 50000<0
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 50000==0
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 81 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L15:
#line 82 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	sz [20].3
	jmp _L15
#line 83 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,255
	fcall _SendCmd
#line 85 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,_SpeakerSendCmd_2[0]
	mov rd,a
	mov a,_SpeakerSendCmd_2[1]
	mov re,a
	mov a,_SpeakerSendCmd_2[2]
	mov rf,a
	mov a,_SpeakerSendCmd_2[3]
	mov rg,a
	mov a,rg
	mov rd,a
	clr rg
	clr rf
	clr re
#line 86 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,rd
	or a,re
	or a,rf
	or a,rg
	snz z
	jmp _L16
_L21:
#line 106 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,_SpeakerSendCmd_2[0]
	mov rd,a
	mov a,_SpeakerSendCmd_2[1]
	mov re,a
	mov a,_SpeakerSendCmd_2[2]
	mov rf,a
	mov a,_SpeakerSendCmd_2[3]
	mov rg,a
	mov a,rf
	mov rd,a
	mov a,rg
	mov re,a
	clr rg
	clr rf
#line 107 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz rd
	jmp _L18
	jmp _L30
_L16:
#line 89 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,rd
	fcall _SendCmd
#line 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000>263690
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000of the argument exceeds the maxinum 263690'
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000<0
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000 of the argument exceeds the mininum 0'
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000==0
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=1) AND (5000<( 4 + __PBP__ * 2))
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=2) AND (5000<( 4 + __PBP__ * 2))
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=3) AND (5000<( 4 + __PBP__ * 2))
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=4) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=5) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=6) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=7) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=8) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000==9)  AND ( __PBP__ > 2 )
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 8 + __PBP__ * 2)) AND (5000>( 3 + __PBP__ * 2))
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -5000
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 0404h + __PBP__ * 2)) AND (5000>( 7 + __PBP__ * 2))
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 4 + __PBP__ * 2))/4
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((5000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 040bh + __PBP__ * 2)) AND (5000> ( 0403h + __PBP__ * 2))
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -5000
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((5000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((5000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 90 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((5000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L19:
#line 91 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz [20].3
	jmp _L21
#line 93 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 93 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	clr wdt
#line 94 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _Polling
#line 95 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _KeyHandleMsg
#line 97 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _PollingUartSend
#line 101 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _UartService
	jmp _L19
_L18:
#line 127 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,_SpeakerSendCmd_2[0]
	mov rd,a
	mov a,_SpeakerSendCmd_2[1]
	mov re,a
	mov a,_SpeakerSendCmd_2[2]
	mov rf,a
	mov a,_SpeakerSendCmd_2[3]
	mov rg,a
	mov a,re
	mov rd,a
	mov a,rf
	mov re,a
	mov a,rg
	mov rf,a
	clr rg
#line 128 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz rd
	jmp _L23
	jmp _L31
_L30:
#line 110 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,rd
	fcall _SendCmd
#line 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000>263690
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000of the argument exceeds the maxinum 263690'
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000<0
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000 of the argument exceeds the mininum 0'
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000==0
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=1) AND (5000<( 4 + __PBP__ * 2))
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=2) AND (5000<( 4 + __PBP__ * 2))
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=3) AND (5000<( 4 + __PBP__ * 2))
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=4) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=5) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=6) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=7) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=8) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000==9)  AND ( __PBP__ > 2 )
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 8 + __PBP__ * 2)) AND (5000>( 3 + __PBP__ * 2))
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -5000
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 0404h + __PBP__ * 2)) AND (5000>( 7 + __PBP__ * 2))
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 4 + __PBP__ * 2))/4
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((5000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 040bh + __PBP__ * 2)) AND (5000> ( 0403h + __PBP__ * 2))
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -5000
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((5000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((5000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 111 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((5000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L24:
#line 112 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz [20].3
	jmp _L18
#line 114 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 114 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	clr wdt
#line 115 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _Polling
#line 116 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _KeyHandleMsg
#line 118 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _PollingUartSend
#line 122 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _UartService
	jmp _L24
_L23:
#line 150 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,_SpeakerSendCmd_2[0]
	fcall _SendCmd
#line 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000>263690
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000of the argument exceeds the maxinum 263690'
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000<0
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000 of the argument exceeds the mininum 0'
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000==0
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=1) AND (5000<( 4 + __PBP__ * 2))
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=2) AND (5000<( 4 + __PBP__ * 2))
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=3) AND (5000<( 4 + __PBP__ * 2))
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=4) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=5) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=6) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=7) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=8) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000==9)  AND ( __PBP__ > 2 )
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 8 + __PBP__ * 2)) AND (5000>( 3 + __PBP__ * 2))
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -5000
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 0404h + __PBP__ * 2)) AND (5000>( 7 + __PBP__ * 2))
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 4 + __PBP__ * 2))/4
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((5000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 040bh + __PBP__ * 2)) AND (5000> ( 0403h + __PBP__ * 2))
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -5000
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((5000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((5000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 151 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((5000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 152 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	jmp _L26
_L31:
#line 131 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	mov a,rd
	fcall _SendCmd
#line 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000>263690
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000of the argument exceeds the maxinum 263690'
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000<0
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 5000 of the argument exceeds the mininum 0'
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 5000==0
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=1) AND (5000<( 4 + __PBP__ * 2))
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=2) AND (5000<( 4 + __PBP__ * 2))
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=3) AND (5000<( 4 + __PBP__ * 2))
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=4) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=5) AND (5000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=6) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=7) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000>=8) AND (5000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000==9)  AND ( __PBP__ > 2 )
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 8 + __PBP__ * 2)) AND (5000>( 3 + __PBP__ * 2))
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -5000
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 0404h + __PBP__ * 2)) AND (5000>( 7 + __PBP__ * 2))
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 4 + __PBP__ * 2))/4
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((5000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000< ( 040bh + __PBP__ * 2)) AND (5000> ( 0403h + __PBP__ * 2))
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -5000
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((5000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (5000 >= ( 040bh + __PBP__ * 2)) AND ((((5000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(5000-( 9 + __PBP__ * 2))/0402h
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((5000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 132 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((5000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L27:
#line 133 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz [20].3
	jmp _L23
#line 135 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 135 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	clr wdt
#line 136 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _Polling
#line 137 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _KeyHandleMsg
#line 139 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _PollingUartSend
#line 143 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _UartService
	jmp _L27
_L26:
#line 152 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	snz [20].3
	jmp _L32
#line 154 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 154 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	clr wdt
#line 155 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _Polling
#line 156 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _KeyHandleMsg
#line 158 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _PollingUartSend
#line 162 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	fcall _UartService
	jmp _L26
_L32:
#line 166 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	set [20].5
	ret
_SpeakerSendCmd endp
#line 166 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
#pragma debug scope 1 1
public _SpeakerInit
#pragma debug scope 5 1
#line 176 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
_SpeakerInit .section 'code'
_SpeakerInit proc
#line 177 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	clr [20].5
#line 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 10000>263690
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 10000of the argument exceeds the maxinum 263690'
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 10000<0
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	ERRMESSAGE 'the value 10000 of the argument exceeds the mininum 0'
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF 10000==0
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	JMP $
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=1) AND (10000<( 4 + __PBP__ * 2))
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=2) AND (10000<( 4 + __PBP__ * 2))
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=3) AND (10000<( 4 + __PBP__ * 2))
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=4) AND (10000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=5) AND (10000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=6) AND (10000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=7) AND (10000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000>=8) AND (10000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000==9)  AND ( __PBP__ > 2 )
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	NOP
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000< ( 8 + __PBP__ * 2)) AND (10000>( 3 + __PBP__ * 2))
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -10000
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000< ( 0404h + __PBP__ * 2)) AND (10000>( 7 + __PBP__ * 2))
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(10000-( 4 + __PBP__ * 2))/4
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX3 + 3 -((10000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000< ( 040bh + __PBP__ * 2)) AND (10000> ( 0403h + __PBP__ * 2))
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0 
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -10000
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000 >= ( 040bh + __PBP__ * 2)) AND ((((10000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(10000-( 9 + __PBP__ * 2))/0402h
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,0
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY5 +5- (((10000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	IF (10000 >= ( 040bh + __PBP__ * 2)) AND ((((10000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,(10000-( 9 + __PBP__ * 2))/0402h
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV _builtin_holtek_delay_2,A
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	MOV A,((10000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 178 "e:\x-sense_svn\xp02\xp02\src\Speaker.c" 1
	fcall __DELAYY3 +3-(((10000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 180 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	set _SpeakerSendCmd_2[0]
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	fcall _SpeakerSendCmd
#line 182 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
	set [20].5
	ret
_SpeakerInit endp
#line 182 "e:\x-sense_svn\xp02\xp02\src\Speaker.c"
#pragma debug scope 1 1
#pragma debug struct_begin 42 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 43 ""
#pragma debug field 2 42 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 43 1 ___pa "__pa" 1
#pragma debug struct_begin 44 "__pc_bits"
#pragma debug field 21 8 0 1 "__pc0" ;0,1
#pragma debug field 21 8 0 1 "__pc1" ;1,1
#pragma debug field 21 8 0 1 "__pc2" ;2,1
#pragma debug field 21 8 0 1 "__pc3" ;3,1
#pragma debug field 21 8 0 1 "__pc4" ;4,1
#pragma debug field 21 8 0 1 "__pc5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___pc "__pc" 1
extern _Polling:near
extern _KeyHandleMsg:near
extern _PollingUartSend:near
extern _UartService:near

; 
; Generated by holtek-gcc v3.19, Wed Mar 01 18:52:30 2023
; Rebuild 718
; end of file

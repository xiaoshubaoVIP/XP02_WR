; Generated by holtek-gcc v3.19, Wed Mar 01 19:42:18 2023
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 67
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [67]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___pscr equ [80]
___tb0c equ [81]
___intc2 equ [69]
public _TimerTb0Init
#pragma debug scope 2 1
#line 162 "e:\x-sense_svn\xp02\xp02\src\main.c"
_TimerTb0Init .section 'code'
_TimerTb0Init proc
public _TimerTb0Init_2
    local _TimerTb0Init_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 2 _TimerTb0Init_2+0 "time"
#line 169 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,3
	orm a,[80]
#line 194 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_TimerTb0Init_2[0]
	mov [81],a
#line 196 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [81].7
#line 198 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [69].1
	ret
_TimerTb0Init endp
#line 198 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
___wdtc equ [33]
public _SysWakeUpInit
#pragma debug scope 3 1
#line 212 "e:\x-sense_svn\xp02\xp02\src\main.c"
_SysWakeUpInit .section 'code'
_SysWakeUpInit proc
public _SysWakeUpInit_2
    local _SysWakeUpInit_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 3 _SysWakeUpInit_2+0 "time"
#line 217 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [33].7
#line 218 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [33].6
#line 219 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [33].5
#line 220 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [33].4
#line 221 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [33].3
#line 235 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,[33]
	and a,80
	mov ra,a
	mov a,ra
	or a,_SysWakeUpInit_2[0]
	mov [33],a
	ret
_SysWakeUpInit endp
#line 235 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
@crom	.section 'crom'
_LC0:
	db 065h,065h,070h,072h,06fh,06dh,020h,064h,061h,074h
	db 061h,028h,030h,030h,02dh,046h,046h,029h,03ah,0dh
	db 0ah,00h
@crom	.section 'crom'
_LC1:
	db 025h,078h,03ah,00h
@crom	.section 'crom'
_LC2:
	db 025h,078h,020h,00h
@crom	.section 'crom'
_LC3:
	db 0ah,00h
public _E2promDisplay
#pragma debug scope 4 1
#line 561 "e:\x-sense_svn\xp02\xp02\src\main.c"
_E2promDisplay .section 'code'
_E2promDisplay proc
    local _E2promDisplay_2 db 4 dup(?)	; 0,4
#pragma debug variable 8 4 _E2promDisplay_2+1 "i"
#pragma debug variable 8 4 _E2promDisplay_2+0 "j"
#line 564 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low offset _LC0
	mov _printf_2[0],a
	mov a,high offset _LC0
	mov _printf_2[1],a
	fcall _printf
	mov a,8
	mov _E2promDisplay_2[2],a
#line 565 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _E2promDisplay_2[1]
_L7:
#line 567 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_E2promDisplay_2[1]
	mov rb,a
	clr rc
	mov a,rb
	mov _printf_2[2],a
	mov a,rc
	mov _printf_2[3],a
	mov a,3
_LI1:
	clr c
	rlc _printf_2[2]
	rlc _printf_2[3]
	sdz acc
	jmp _LI1
	mov a,low offset _LC1
	mov _printf_2[0],a
	mov a,high offset _LC1
	mov _printf_2[1],a
	fcall _printf
#line 570 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_E2promDisplay_2[1]
	mov ra,a
	swapa ra
	rr acc
	and a,0f8h
	mov ra,a
	mov a,ra
	mov _E2promDisplay_2[3],a
#line 568 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _E2promDisplay_2[0]
_L5:
	mov a,_E2promDisplay_2[0]
	add a,_E2promDisplay_2[3]
	mov ra,a
#line 570 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	fcall _E2promRead
	mov ra,a
	mov a,ra
	mov _printf_2[2],a
	clr _printf_2[3]
	mov a,low offset _LC2
	mov _printf_2[0],a
	mov a,high offset _LC2
	mov _printf_2[1],a
	fcall _printf
#line 568 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc _E2promDisplay_2[0]
	mov a,_E2promDisplay_2[0]
	sub a,8
	snz z
	jmp _L5
#line 572 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low offset _LC3
	mov _printf_2[0],a
	mov a,high offset _LC3
	mov _printf_2[1],a
	fcall _printf
#line 565 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc _E2promDisplay_2[1]
	sdz _E2promDisplay_2[2]
	jmp _L7
	ret
_E2promDisplay endp
#line 565 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
___stm0dh equ [98]
___stm0dl equ [97]
public _GetTicks
#pragma debug scope 5 1
#line 698 "e:\x-sense_svn\xp02\xp02\src\main.c"
_GetTicks .section 'code'
_GetTicks proc
#line 702 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,[98]
	mov rc,a
	clr rb
	mov a,[97]
	addm a,rb
	sz c
	inc rc
#line 703 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___lastTick10ms_3194[0]
	mov rd,a
	mov a,___lastTick10ms_3194[1]
	mov re,a
	mov a,rb
	sub a,rd
	mov a,rc
	sbc a,re
	snz c
	jmp _L10
#line 703 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rb
	subm a,rd
	mov a,rc
	sbcm a,re
	jmp _L11
_L10:
	mov a,255
	subm a,rd
	mov a,3
	sbcm a,re
	mov a,rb
	addm a,rd
	mov a,rc
	adcm a,re
_L11:
#line 705 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,63
	sub a,rd
	mov a,1
	sbc a,re
	sz c
	jmp _L15
#line 711 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rd  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,re  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,64  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,1  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rf,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rg,a
#line 712 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rd  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,re  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,64  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,1  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rd,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov re,a
#line 713 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rd
	sub a,rb
	mov a,re
	sbc a,rc
	snz c
	jmp _L16
	mov a,255
	addm a,rb
	mov a,3
	adcm a,rc
_L16:
	mov a,rb
	sub a,rd
	mov rb,a
	mov a,rc
	sbc a,re
	mov rc,a
	mov a,rb
	mov ___lastTick10ms_3194[0],a
	mov a,rc
	mov ___lastTick10ms_3194[1],a
	jmp _L12
_L15:
#line 707 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr rf
	clr rg
_L12:
#line 716 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rf
	mov ra,a
	mov a,rg
	mov rb,a
	ret
_GetTicks endp
#line 716 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
___pb equ [24]
___pa equ [20]
___pc equ [27]
public _ErrIndex
#pragma debug scope 6 1
#line 842 "e:\x-sense_svn\xp02\xp02\src\main.c"
_ErrIndex .section 'code'
_ErrIndex proc
public _ErrIndex_2
    local _ErrIndex_2 db 3 dup(?)	; 2,1
	mov _ErrIndex_2[2],a
#pragma debug variable 8 6 _ErrIndex_2+2 "LedFlag"
#pragma debug variable 8 6 _ErrIndex_2+0 "BeepFlag"
#pragma debug variable 8 6 _ErrIndex_2+1 "Num"
#line 844 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 845 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 845 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 846 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr ra
	jmp _L18
_L23:
#line 848 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz _ErrIndex_2[2]
	jmp _L19
#line 850 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
	set [24].4
_L19:
#line 852 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz _ErrIndex_2[0]
	jmp _L20
#line 854 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].5
	set [27].4
_L20:
#line 856 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 30000>263690
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 30000of the argument exceeds the maxinum 263690'
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 30000<0
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 30000 of the argument exceeds the mininum 0'
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 30000==0
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=1) AND (30000<( 4 + __PBP__ * 2))
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=2) AND (30000<( 4 + __PBP__ * 2))
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=3) AND (30000<( 4 + __PBP__ * 2))
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=4) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=5) AND (30000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=6) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=7) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000>=8) AND (30000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000==9)  AND ( __PBP__ > 2 )
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000< ( 8 + __PBP__ * 2)) AND (30000>( 3 + __PBP__ * 2))
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -30000
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000< ( 0404h + __PBP__ * 2)) AND (30000>( 7 + __PBP__ * 2))
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(30000-( 4 + __PBP__ * 2))/4
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((30000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000< ( 040bh + __PBP__ * 2)) AND (30000> ( 0403h + __PBP__ * 2))
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -30000
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((30000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (30000 >= ( 040bh + __PBP__ * 2)) AND ((((30000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(30000-( 9 + __PBP__ * 2))/0402h
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((30000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 856 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((30000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 857 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz _ErrIndex_2[2]
	jmp _L21
#line 859 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
	clr [24].4
_L21:
#line 861 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz _ErrIndex_2[0]
	jmp _L22
#line 863 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].5
	clr [27].4
_L22:
#line 865 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 865 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 866 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 866 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 846 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc ra
_L18:
	mov a,ra
	sub a,_ErrIndex_2[1]
	snz z
	jmp _L23
	ret
_ErrIndex endp
#line 846 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PowerOnDisplay
#pragma debug scope 7 1
#line 879 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PowerOnDisplay .section 'code'
_PowerOnDisplay proc
	mov a,8
	mov ra,a
_L26:
#line 883 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
	set [24].4
#line 884 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 884 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 885 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 885 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 886 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 886 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 887 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
	clr [24].4
#line 889 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 890 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 890 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 891 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 891 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 892 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 892 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 893 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 895 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
#line 896 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 896 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 897 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 897 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 898 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 898 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 899 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
#line 901 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 901 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 902 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 902 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 903 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000>263690
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000of the argument exceeds the maxinum 263690'
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000<0
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 250000 of the argument exceeds the mininum 0'
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 250000==0
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=1) AND (250000<( 4 + __PBP__ * 2))
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=2) AND (250000<( 4 + __PBP__ * 2))
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=3) AND (250000<( 4 + __PBP__ * 2))
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=4) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=5) AND (250000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=6) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=7) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000>=8) AND (250000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000==9)  AND ( __PBP__ > 2 )
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 8 + __PBP__ * 2)) AND (250000>( 3 + __PBP__ * 2))
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -250000
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 0404h + __PBP__ * 2)) AND (250000>( 7 + __PBP__ * 2))
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 4 + __PBP__ * 2))/4
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((250000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000< ( 040bh + __PBP__ * 2)) AND (250000> ( 0403h + __PBP__ * 2))
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -250000
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((250000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (250000 >= ( 040bh + __PBP__ * 2)) AND ((((250000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(250000-( 9 + __PBP__ * 2))/0402h
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((250000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 903 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((250000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	sdz ra
	jmp _L26
	ret
_PowerOnDisplay endp
#line 903 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PowerOnWelcomeAndDisplay
#pragma debug scope 8 1
#line 916 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PowerOnWelcomeAndDisplay .section 'code'
_PowerOnWelcomeAndDisplay proc
#line 917 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[18]
	or a,_SysAO[19]
	snz z
	jmp _L27
#line 919 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _PowerOnDisplay
#line 921 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	fcall _SpeakerSendCmdForPowerOn
#line 922 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_RfAO[12]
	sub a,23
	snz z
	jmp _L29
#line 924 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,2
	jmp _L30
_L29:
#line 928 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,3
_L30:
	fcall _SpeakerSendCmdForPowerOn
_L27:
	ret
_PowerOnWelcomeAndDisplay endp
#line 928 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _CailRes
#pragma debug scope 9 1
#line 942 "e:\x-sense_svn\xp02\xp02\src\main.c"
_CailRes .section 'code'
_CailRes proc
public _CailRes_2
    local _CailRes_2 db 3 dup(?)	; 2,1
	mov _CailRes_2[2],a
#pragma debug variable 8 9 _CailRes_2+2 "Res"
#pragma debug variable 12 9 _CailRes_2+0 "eStep"
#line 944 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 945 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
#line 947 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,7
	mov _PwrAO[11],a
#line 948 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _EnteryLowPower
#line 949 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 949 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 950 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz _CailRes_2[2]
	jmp _L32
#line 950 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr ra
	jmp _L33
_L32:
#line 952 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_CailRes_2[0]
	xor a,1
	or a,_CailRes_2[1]
	sz z
	jmp _L45
	mov a,_CailRes_2[0]
	xor a,2
	or a,_CailRes_2[1]
	sz z
	jmp _L36
	mov a,_CailRes_2[0]
	xor a,3
	or a,_CailRes_2[1]
	sz z
	jmp _L37
	mov a,_CailRes_2[0]
	xor a,4
	or a,_CailRes_2[1]
	sz z
	jmp _L38
	mov a,_CailRes_2[0]
	xor a,5
	or a,_CailRes_2[1]
	sz z
	jmp _L39
	mov a,_CailRes_2[0]
	xor a,6
	or a,_CailRes_2[1]
	snz z
	jmp _L31
#line 1010 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
#line 1011 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1011 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1012 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
#line 1013 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1013 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1014 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1014 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	jmp _L45
_L36:
#line 966 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 967 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 967 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	jmp _L44
_L37:
#line 977 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
#line 978 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 978 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 979 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
_L42:
#line 980 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 980 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 981 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 981 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 982 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 983 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 983 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L43:
#line 984 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 985 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L31
_L38:
#line 988 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
#line 989 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 989 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 990 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
#line 991 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 991 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 992 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 992 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 993 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
	set [24].4
#line 994 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 994 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 995 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
	jmp _L43
_L39:
#line 999 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
	set [24].4
#line 1000 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1000 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1001 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
_L44:
	clr [24].4
#line 1002 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1002 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1003 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1003 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1004 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
#line 1005 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1005 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1006 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
#line 1007 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L31
_L45:
#line 1015 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
	set [24].4
#line 1016 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1016 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1017 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
	clr [24].4
	jmp _L42
_L33:
#line 1031 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	mov rb,a
	clr rc
	mov a,rb
	sub a,_CailRes_2[0]
	mov a,rc
	sbc a,_CailRes_2[1]
	sz c
	jmp _L31
#line 1033 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1033 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 1034 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 1035 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1035 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1036 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 1037 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000>263690
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000<0
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000 of the argument exceeds the mininum 0'
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000==0
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=1) AND (200000<( 4 + __PBP__ * 2))
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=2) AND (200000<( 4 + __PBP__ * 2))
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=3) AND (200000<( 4 + __PBP__ * 2))
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=4) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=5) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=6) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=7) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=8) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000==9)  AND ( __PBP__ > 2 )
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 8 + __PBP__ * 2)) AND (200000>( 3 + __PBP__ * 2))
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -200000
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 0404h + __PBP__ * 2)) AND (200000>( 7 + __PBP__ * 2))
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 4 + __PBP__ * 2))/4
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((200000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 040bh + __PBP__ * 2)) AND (200000> ( 0403h + __PBP__ * 2))
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -200000
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((200000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((200000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1037 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((200000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1038 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000>263690
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000<0
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000 of the argument exceeds the mininum 0'
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000==0
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=1) AND (200000<( 4 + __PBP__ * 2))
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=2) AND (200000<( 4 + __PBP__ * 2))
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=3) AND (200000<( 4 + __PBP__ * 2))
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=4) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=5) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=6) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=7) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=8) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000==9)  AND ( __PBP__ > 2 )
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 8 + __PBP__ * 2)) AND (200000>( 3 + __PBP__ * 2))
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -200000
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 0404h + __PBP__ * 2)) AND (200000>( 7 + __PBP__ * 2))
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 4 + __PBP__ * 2))/4
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((200000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 040bh + __PBP__ * 2)) AND (200000> ( 0403h + __PBP__ * 2))
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -200000
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((200000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((200000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1038 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((200000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1031 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc ra
	jmp _L33
_L31:
	ret
_CailRes endp
#line 1031 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _CailStepDisplay
#pragma debug scope 10 1
#line 1052 "e:\x-sense_svn\xp02\xp02\src\main.c"
_CailStepDisplay .section 'code'
_CailStepDisplay proc
public _CailStepDisplay_2
    local _CailStepDisplay_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 10 _CailStepDisplay_2+0 "eStep"
#line 1054 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 1055 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
#line 1056 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
	clr [24].4
#line 1058 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr ra
_L47:
#line 1058 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	mov rb,a
	clr rc
	mov a,rb
	sub a,_CailStepDisplay_2[0]
	mov a,rc
	sbc a,_CailStepDisplay_2[1]
	sz c
	jmp _L49
#line 1060 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1060 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 1061 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
	set [24].4
#line 1062 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000>263690
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000<0
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 50000 of the argument exceeds the mininum 0'
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 50000==0
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=1) AND (50000<( 4 + __PBP__ * 2))
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=2) AND (50000<( 4 + __PBP__ * 2))
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=3) AND (50000<( 4 + __PBP__ * 2))
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=4) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=5) AND (50000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=6) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=7) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000>=8) AND (50000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000==9)  AND ( __PBP__ > 2 )
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 8 + __PBP__ * 2)) AND (50000>( 3 + __PBP__ * 2))
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -50000
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 0404h + __PBP__ * 2)) AND (50000>( 7 + __PBP__ * 2))
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 4 + __PBP__ * 2))/4
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((50000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000< ( 040bh + __PBP__ * 2)) AND (50000> ( 0403h + __PBP__ * 2))
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -50000
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((50000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (50000 >= ( 040bh + __PBP__ * 2)) AND ((((50000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(50000-( 9 + __PBP__ * 2))/0402h
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((50000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1062 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((50000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1063 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
	clr [24].4
#line 1064 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000>263690
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000<0
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000 of the argument exceeds the mininum 0'
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000==0
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=1) AND (200000<( 4 + __PBP__ * 2))
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=2) AND (200000<( 4 + __PBP__ * 2))
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=3) AND (200000<( 4 + __PBP__ * 2))
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=4) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=5) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=6) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=7) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=8) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000==9)  AND ( __PBP__ > 2 )
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 8 + __PBP__ * 2)) AND (200000>( 3 + __PBP__ * 2))
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -200000
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 0404h + __PBP__ * 2)) AND (200000>( 7 + __PBP__ * 2))
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 4 + __PBP__ * 2))/4
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((200000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 040bh + __PBP__ * 2)) AND (200000> ( 0403h + __PBP__ * 2))
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -200000
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((200000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((200000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1064 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((200000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1065 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000>263690
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000<0
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000 of the argument exceeds the mininum 0'
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000==0
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=1) AND (200000<( 4 + __PBP__ * 2))
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=2) AND (200000<( 4 + __PBP__ * 2))
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=3) AND (200000<( 4 + __PBP__ * 2))
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=4) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=5) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=6) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=7) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=8) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000==9)  AND ( __PBP__ > 2 )
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 8 + __PBP__ * 2)) AND (200000>( 3 + __PBP__ * 2))
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -200000
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 0404h + __PBP__ * 2)) AND (200000>( 7 + __PBP__ * 2))
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 4 + __PBP__ * 2))/4
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((200000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 040bh + __PBP__ * 2)) AND (200000> ( 0403h + __PBP__ * 2))
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -200000
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((200000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((200000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1065 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((200000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 1058 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc ra
	jmp _L47
_L49:
#line 1067 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000>263690
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000of the argument exceeds the maxinum 263690'
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000<0
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 200000 of the argument exceeds the mininum 0'
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 200000==0
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=1) AND (200000<( 4 + __PBP__ * 2))
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=2) AND (200000<( 4 + __PBP__ * 2))
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=3) AND (200000<( 4 + __PBP__ * 2))
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=4) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=5) AND (200000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=6) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=7) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000>=8) AND (200000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000==9)  AND ( __PBP__ > 2 )
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 8 + __PBP__ * 2)) AND (200000>( 3 + __PBP__ * 2))
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -200000
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 0404h + __PBP__ * 2)) AND (200000>( 7 + __PBP__ * 2))
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 4 + __PBP__ * 2))/4
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((200000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000< ( 040bh + __PBP__ * 2)) AND (200000> ( 0403h + __PBP__ * 2))
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -200000
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((200000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (200000 >= ( 040bh + __PBP__ * 2)) AND ((((200000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(200000-( 9 + __PBP__ * 2))/0402h
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((200000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 1067 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((200000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
	ret
_CailStepDisplay endp
#line 1067 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingLED
#pragma debug scope 11 1
#line 1142 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingLED .section 'code'
_PollingLED proc
public _PollingLED_2
    local _PollingLED_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 11 _PollingLED_2+0 "Time"
#line 1143 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 1144 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
#line 1145 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,9
	sub a,_PollingLED_2[0]
	mov a,0
	sbc a,_PollingLED_2[1]
	sz c
	jmp _L52
#line 1145 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	add a,_PollingLED_2[0]
	mov rb,a
	mov a,0
	adc a,_PollingLED_2[1]
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	jmp _L51
_L52:
	mov a,1
	mov rb,a
	clr rc
_L51:
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,rb
	mov _TmrInsertTimer_2[2],a
	mov a,rc
	mov _TmrInsertTimer_2[3],a
	mov a,2
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
	ret
_PollingLED endp
#line 1145 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingLEDOff
#pragma debug scope 12 1
#line 1149 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingLEDOff .section 'code'
_PollingLEDOff proc
#line 1150 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
	ret
_PollingLEDOff endp
#line 1150 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingBeep
#pragma debug scope 13 1
#line 1162 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingBeep .section 'code'
_PollingBeep proc
public _PollingBeep_2
    local _PollingBeep_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 13 _PollingBeep_2+0 "Time"
#line 1163 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].5
	set [27].4
#line 1164 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,9
	sub a,_PollingBeep_2[0]
	mov a,0
	sbc a,_PollingBeep_2[1]
	sz c
	jmp _L56
#line 1164 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	add a,_PollingBeep_2[0]
	mov rb,a
	mov a,0
	adc a,_PollingBeep_2[1]
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	jmp _L55
_L56:
	mov a,1
	mov rb,a
	clr rc
_L55:
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,rb
	mov _TmrInsertTimer_2[2],a
	mov a,rc
	mov _TmrInsertTimer_2[3],a
	mov a,3
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
	ret
_PollingBeep endp
#line 1164 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingBeepOff
#pragma debug scope 14 1
#line 1168 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingBeepOff .section 'code'
_PollingBeepOff proc
#line 1169 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].5
	clr [27].4
	ret
_PollingBeepOff endp
#line 1169 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingGreenLED
#pragma debug scope 15 1
#line 1174 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingGreenLED .section 'code'
_PollingGreenLED proc
public _PollingGreenLED_2
    local _PollingGreenLED_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 15 _PollingGreenLED_2+0 "Time"
#line 1175 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].2
#line 1176 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 1177 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,9
	sub a,_PollingGreenLED_2[0]
	mov a,0
	sbc a,_PollingGreenLED_2[1]
	sz c
	jmp _L60
#line 1177 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	add a,_PollingGreenLED_2[0]
	mov rb,a
	mov a,0
	adc a,_PollingGreenLED_2[1]
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	jmp _L59
_L60:
	mov a,1
	mov rb,a
	clr rc
_L59:
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,rb
	mov _TmrInsertTimer_2[2],a
	mov a,rc
	mov _TmrInsertTimer_2[3],a
	mov a,12
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
	ret
_PollingGreenLED endp
#line 1177 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingGreenLEDOff
#pragma debug scope 16 1
#line 1181 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingGreenLEDOff .section 'code'
_PollingGreenLEDOff proc
#line 1182 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
	ret
_PollingGreenLEDOff endp
#line 1182 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingGREENLEDFlicker
#pragma debug scope 17 1
#line 1186 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingGREENLEDFlicker .section 'code'
_PollingGREENLEDFlicker proc
public _PollingGREENLEDFlicker_2
    local _PollingGREENLEDFlicker_2 db 2 dup(?)	; 2,0
#pragma debug pointer 42 7 17
#pragma debug variable 42 17 _PollingGREENLEDFlicker_2+0 "Time"
#line 1187 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 1188 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_PollingGREENLEDFlicker_2[0]
	mov _PollingGreenLED_2[0],a
	mov a,_PollingGREENLEDFlicker_2[1]
	mov _PollingGreenLED_2[1],a
	fcall _PollingGreenLED
	ret
_PollingGREENLEDFlicker endp
#line 1188 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingRFLED
#pragma debug scope 18 1
#line 1192 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingRFLED .section 'code'
_PollingRFLED proc
public _PollingRFLED_2
    local _PollingRFLED_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 18 _PollingRFLED_2+0 "Time"
#line 1193 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].2
#line 1194 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,9
	sub a,_PollingRFLED_2[0]
	mov a,0
	sbc a,_PollingRFLED_2[1]
	sz c
	jmp _L65
#line 1194 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	add a,_PollingRFLED_2[0]
	mov rb,a
	mov a,0
	adc a,_PollingRFLED_2[1]
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov rc,a
	jmp _L64
_L65:
	mov a,1
	mov rb,a
	clr rc
_L64:
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,rb
	mov _TmrInsertTimer_2[2],a
	mov a,rc
	mov _TmrInsertTimer_2[3],a
	mov a,2
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
#line 1195 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,-56
	mov _TmrInsertTimer_2[4],a
	clr _TmrInsertTimer_2[5]
	mov a,80
	mov _TmrInsertTimer_2[2],a
	clr _TmrInsertTimer_2[3]
	mov a,11
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
	ret
_PollingRFLED endp
#line 1195 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _SysteSetSig
#pragma debug scope 19 1
#line 1199 "e:\x-sense_svn\xp02\xp02\src\main.c"
_SysteSetSig .section 'code'
_SysteSetSig proc
public _SysteSetSig_2
    local _SysteSetSig_2 db 2 dup(?)	; 2,0
#pragma debug variable 12 19 _SysteSetSig_2+0 "sig"
	mov a,10
	mov rf,a
#line 1201 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr ra
_L70:
#line 1203 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	mov rb,a
	clr rc
	clr c
	rlca rb
	mov rd,a
	rlca rc
	mov re,a
	mov a,rd
	addm a,rb
	mov a,re
	adcm a,rc
	mov a,low (offset _SysAO+31)
	add a,rb
	mov rd,a
	mov a,high (offset _SysAO+31)
	adc a,rc
	mov re,a
	mov a,rd
	mov mp,a
	mov a,re
	mov sbp,a
	fcall _Crom2Prom
	mov rg,a
	sz rg
	jmp _L67
#line 1205 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low (offset _SysAO+29)
	add a,rb
	mov mp,a
	mov a,high (offset _SysAO+29)
	adc a,rc
	mov sbp,a
	mov a,_SysteSetSig_2[0]
	mov ir,a
	inc mp
	mov a,_SysteSetSig_2[1]
	mov ir,a
#line 1206 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rd
	mov mp,a
	mov a,re
	mov sbp,a
	mov a,1
	mov ir,a
	jmp _L66
_L67:
#line 1201 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc ra
	sdz rf
	jmp _L70
#line 1212 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysteSetSig_2[0]
	mov _SysAO[29],a
	mov a,_SysteSetSig_2[1]
	mov _SysAO[30],a
#line 1213 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysAO[31],a
_L66:
	ret
_SysteSetSig endp
#line 1213 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _SysteGetSig
#pragma debug scope 20 1
#line 1219 "e:\x-sense_svn\xp02\xp02\src\main.c"
_SysteGetSig .section 'code'
_SysteGetSig proc
	mov a,10
	mov rf,a
#line 1223 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr ra
_L74:
#line 1225 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	mov rb,a
	clr rc
	clr c
	rlca rb
	mov rd,a
	rlca rc
	mov re,a
	mov a,rd
	addm a,rb
	mov a,re
	adcm a,rc
	mov a,low (offset _SysAO+31)
	add a,rb
	mov rd,a
	mov a,high (offset _SysAO+31)
	adc a,rc
	mov re,a
	mov a,rd
	mov mp,a
	mov a,re
	mov sbp,a
	fcall _Crom2Prom
	mov rg,a
	sdza rg
	jmp _L72
#line 1227 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low (offset _SysAO+29)
	add a,rb
	mov mp,a
	mov a,high (offset _SysAO+29)
	adc a,rc
	mov sbp,a
	fcall _Crom2Prom
	mov ra,a
	fcall _Crom2PromNext
	mov rb,a
#line 1228 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rd
	mov mp,a
	mov a,re
	mov sbp,a
	mov a,0
	mov ir,a
#line 1229 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L73
_L72:
#line 1223 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc ra
	sdz rf
	jmp _L74
#line 1222 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr ra
	clr rb
_L73:
	ret
_SysteGetSig endp
#line 1222 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _Lvd_Int_ISR
#pragma debug scope 21 1
#line 1237 "e:\x-sense_svn\xp02\xp02\src\main.c"
rombank 0 @Lvd_Int_ISR_code
@Lvd_Int_ISR_code .section at 20 'code'
_Lvd_Int_ISR:
	reti
#line 1237 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _Timebase0_Int_ISR
#pragma debug scope 22 1
#line 1243 "e:\x-sense_svn\xp02\xp02\src\main.c"
rombank 0 @Timebase0_Int_ISR_code
@Timebase0_Int_ISR_code .section at 36 'code'
	mov r1,a
	mov a,bp
	clr bp
	jmp _Timebase0_Int_ISR
ROMBANK 0 _Timebase0_Int_ISR
#pragma debug scope 1 1
@dummy36 proc
	call _Timebase0_Int_ISR
@dummy36 endp
#pragma debug scope 23 1
_Timebase0_Int_ISR .section 'code'
_Timebase0_Int_ISR proc
	mov r2,a
	mov a, status
	mov r3,a
#line 1244 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [69].5
	mov a,r2
	mov bp,a
	mov a,r3
	mov status,a
	mov a,r1
	reti
_Timebase0_Int_ISR endp

#line 1244 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
___intc0 equ [67]
public _Adc_Input_Int_ISR
#pragma debug scope 24 1
#line 1248 "e:\x-sense_svn\xp02\xp02\src\main.c"
rombank 0 @Adc_Input_Int_ISR_code
@Adc_Input_Int_ISR_code .section at 8 'code'
	mov r1,a
	mov a,bp
	clr bp
	jmp _Adc_Input_Int_ISR
ROMBANK 0 _Adc_Input_Int_ISR
#pragma debug scope 1 1
@dummy8 proc
	call _Adc_Input_Int_ISR
@dummy8 endp
#pragma debug scope 25 1
_Adc_Input_Int_ISR .section 'code'
_Adc_Input_Int_ISR proc
	mov r2,a
	mov a, status
	mov r3,a
#line 1249 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [67].5
	mov a,r2
	mov bp,a
	mov a,r3
	mov status,a
	mov a,r1
	reti
_Adc_Input_Int_ISR endp

#line 1249 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _Dec_Int_ISR
#pragma debug scope 26 1
#line 1253 "e:\x-sense_svn\xp02\xp02\src\main.c"
rombank 0 @Dec_Int_ISR_code
@Dec_Int_ISR_code .section at 12 'code'
	mov r1,a
	mov a,bp
	clr bp
	jmp _Dec_Int_ISR
ROMBANK 0 _Dec_Int_ISR
#pragma debug scope 1 1
@dummy12 proc
	call _Dec_Int_ISR
@dummy12 endp
#pragma debug scope 27 1
_Dec_Int_ISR .section 'code'
_Dec_Int_ISR proc
	mov r2,a
	mov a, status
	mov r3,a
#line 1254 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [67].6
	mov a,r2
	mov bp,a
	mov a,r3
	mov status,a
	mov a,r1
	reti
_Dec_Int_ISR endp

#line 1254 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingSetLocation
#pragma debug scope 28 1
#line 1290 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingSetLocation .section 'code'
_PollingSetLocation proc
public _PollingSetLocation_2
    local _PollingSetLocation_2 db 2 dup(?)	; 2,0
#pragma debug pointer 43 7 28
#pragma debug variable 43 28 _PollingSetLocation_2+0 "pTxt"
#line 1292 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_PollingSetLocation_2[0]
	or a,_PollingSetLocation_2[1]
	snz z
	jmp _L80
#line 1295 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,66
	mov _SysteSetSig_2[0],a
	clr _SysteSetSig_2[1]
	fcall _SysteSetSig
_L80:
	ret
_PollingSetLocation endp
#line 1295 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _PollingSetLocationDisplay
#pragma debug scope 29 1
#line 1310 "e:\x-sense_svn\xp02\xp02\src\main.c"
_PollingSetLocationDisplay .section 'code'
_PollingSetLocationDisplay proc
#line 1311 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,-6
	mov _PollingLED_2[0],a
	clr _PollingLED_2[1]
	fcall _PollingLED
	ret
_PollingSetLocationDisplay endp
#line 1311 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _LocationSettingMain
#pragma debug scope 30 1
#line 1322 "e:\x-sense_svn\xp02\xp02\src\main.c"
_LocationSettingMain .section 'code'
_LocationSettingMain proc
#line 1326 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[4]
	xor a,1
	or a,_SysAO[5]
	sz z
	jmp _L86
#line 1326 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[4]
	xor a,12
	or a,_SysAO[5]
	sz z
	jmp _L87
	mov a,_SysAO[4]
	xor a,13
	or a,_SysAO[5]
	sz z
	jmp _L88
	mov a,_SysAO[4]
	xor a,16
	or a,_SysAO[5]
	sz z
	jmp _L89
	mov a,_SysAO[4]
	xor a,66
	or a,_SysAO[5]
	snz z
	jmp _L84
#line 1400 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,13
	mov _TmrDeleteTimer_2[0],a
	clr _TmrDeleteTimer_2[1]
	fcall _TmrDeleteTimer
#line 1401 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,14
	mov _TmrDeleteTimer_2[0],a
	clr _TmrDeleteTimer_2[1]
	fcall _TmrDeleteTimer
#line 1402 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,25
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	jmp _L103
_L86:
#line 1329 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr ___Flag_3317[0]
	clr ___Flag_3317[1]
#line 1330 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_RfAO[12]
	mov ra,a
	mov a,ra
	mov ___SetLocation_3318[0],a
#line 1332 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	sub a,23
	snz z
	jmp _L91
#line 1334 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,4
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	jmp _L100
_L91:
#line 1338 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	mov rc,a
	clr rb
	mov a,0
	orm a,rc
	mov a,5
	orm a,rb
	mov a,rb
	mov _SpeakerSendCmd_2[0],a
	mov a,rc
	mov _SpeakerSendCmd_2[1],a
	clr acc
	sz _SpeakerSendCmd_2[1].7
	set acc
	mov _SpeakerSendCmd_2[2],a
	mov _SpeakerSendCmd_2[3],a
_L100:
	fcall _SpeakerSendCmd
#line 1340 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,6
	mov ___SetLocation_3318[0],a
#line 1342 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,112
	mov _TmrInsertTimer_2[2],a
	mov a,23
	mov _TmrInsertTimer_2[3],a
	mov a,13
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
#line 1343 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,44
	mov _TmrInsertTimer_2[2],a
	mov a,1
	mov _TmrInsertTimer_2[3],a
	mov a,14
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	jmp _L102
_L87:
#line 1347 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___Flag_3317[0]
	or a,___Flag_3317[1]
	snz z
	jmp _L93
#line 1349 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov ___Flag_3317[0],a
	clr ___Flag_3317[1]
#line 1350 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,6
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	jmp _L101
_L93:
#line 1354 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___SetLocation_3318[0]
	mov ra,a
	mov a,22
	sub a,ra
	snz c
	jmp _L95
#line 1356 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inca ra
	mov ___SetLocation_3318[0],a
	jmp _L96
_L95:
#line 1360 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,7
	mov ___SetLocation_3318[0],a
_L96:
#line 1362 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___SetLocation_3318[0]
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
_L101:
	fcall _SpeakerSendCmd
#line 1364 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,112
	mov _TmrInsertTimer_2[2],a
	mov a,23
	mov _TmrInsertTimer_2[3],a
	mov a,13
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
_L102:
	fcall _TmrInsertTimer
#line 1365 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L84
_L88:
#line 1369 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _TmrInsertTimer_2[4]
	clr _TmrInsertTimer_2[5]
	mov a,112
	mov _TmrInsertTimer_2[2],a
	mov a,23
	mov _TmrInsertTimer_2[3],a
	mov a,13
	mov _TmrInsertTimer_2[0],a
	clr _TmrInsertTimer_2[1]
	fcall _TmrInsertTimer
#line 1370 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___SetLocation_3318[0]
	mov ra,a
	mov a,7
	sub a,ra
	sz c
	jmp _L97
#line 1372 "e:\x-sense_svn\xp02\xp02\src\main.c"
	deca ra
	mov ___SetLocation_3318[0],a
	jmp _L98
_L97:
#line 1376 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,23
	mov ___SetLocation_3318[0],a
_L98:
#line 1378 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___SetLocation_3318[0]
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	jmp _L104
_L89:
#line 1382 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___Flag_3317[0]
	or a,___Flag_3317[1]
	snz z
	jmp _L99
#line 1384 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov ___Flag_3317[0],a
	clr ___Flag_3317[1]
#line 1385 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,6
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
_L104:
	fcall _SpeakerSendCmd
	jmp _L84
_L99:
#line 1389 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,13
	mov _TmrDeleteTimer_2[0],a
	clr _TmrDeleteTimer_2[1]
	fcall _TmrDeleteTimer
#line 1390 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,14
	mov _TmrDeleteTimer_2[0],a
	clr _TmrDeleteTimer_2[1]
	fcall _TmrDeleteTimer
#line 1391 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,___SetLocation_3318[0]
	mov ra,a
	mov a,ra
	mov _RfAO[12],a
#line 1392 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	mov _E2promWrite_2[0],a
	mov a,20
	fcall _E2promWrite
#line 1394 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_RfAO[12]
	mov rc,a
	clr rb
	mov a,0
	orm a,rc
	mov a,24
	orm a,rb
	mov a,rb
	mov _SpeakerSendCmd_2[0],a
	mov a,rc
	mov _SpeakerSendCmd_2[1],a
	clr acc
	sz _SpeakerSendCmd_2[1].7
	set acc
	mov _SpeakerSendCmd_2[2],a
	mov _SpeakerSendCmd_2[3],a
_L103:
#line 1402 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SpeakerSendCmd
#line 1403 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[0]
	clr _SysAO[1]
_L84:
	ret
_LocationSettingMain endp
#line 1403 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
public _NormalMain
#pragma debug scope 31 1
#line 1421 "e:\x-sense_svn\xp02\xp02\src\main.c"
_NormalMain .section 'code'
_NormalMain proc
#line 1422 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[4]
	xor a,1
	or a,_SysAO[5]
	sz z
	jmp _L150
#line 1422 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[4]
	xor a,3
	or a,_SysAO[5]
	sz z
	jmp _L108
	mov a,_SysAO[4]
	xor a,7
	or a,_SysAO[5]
	sz z
	jmp _L109
	mov a,_SysAO[4]
	xor a,8
	or a,_SysAO[5]
	sz z
	jmp _L110
	mov a,_SysAO[4]
	xor a,10
	or a,_SysAO[5]
	sz z
	jmp _L111
	mov a,_SysAO[4]
	xor a,11
	or a,_SysAO[5]
	sz z
	jmp _L112
	mov a,_SysAO[4]
	xor a,12
	or a,_SysAO[5]
	sz z
	jmp _L113
	mov a,_SysAO[4]
	xor a,16
	or a,_SysAO[5]
	sz z
	jmp _L114
	mov a,_SysAO[4]
	xor a,21
	or a,_SysAO[5]
	sz z
	jmp _L115
	mov a,_SysAO[4]
	xor a,29
	or a,_SysAO[5]
	sz z
	jmp _L116
	mov a,_SysAO[4]
	xor a,35
	or a,_SysAO[5]
	sz z
	jmp _L117
	mov a,_SysAO[4]
	xor a,42
	or a,_SysAO[5]
	sz z
	jmp _L118
	mov a,_SysAO[4]
	xor a,55
	or a,_SysAO[5]
	sz z
	jmp _L119
	mov a,_SysAO[4]
	xor a,57
	or a,_SysAO[5]
	sz z
	jmp _L120
	mov a,_SysAO[4]
	xor a,59
	or a,_SysAO[5]
	sz z
	jmp _L121
	mov a,_SysAO[4]
	xor a,61
	or a,_SysAO[5]
	snz z
	jmp _L105
#line 1507 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,16
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1508 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L109:
#line 1433 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz rb.0
	jmp _L123
#line 1435 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,254  
	andm a,rb  
	mov a,255  
	andm a,rc
#line 1436 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,2
	mov _SysAO[7],a
	jmp _L156
_L123:
#line 1444 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz rb.4
	jmp _L125
#line 1446 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,239  
	andm a,rb  
	mov a,255  
	andm a,rc
#line 1447 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,32
	mov _SysAO[7],a
_L156:
#line 1448 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[14]
	clr _SysAO[15]
#line 1450 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,56
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
_L157:
	fcall _SpeakerSendCmd
	jmp _L105
_L113:
#line 1463 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,20
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1464 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L114:
#line 1467 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,23
	mov _RfAO[12],a
#line 1468 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,23
	mov _E2promWrite_2[0],a
	mov a,20
	fcall _E2promWrite
#line 1469 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,25
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	jmp _L157
_L112:
#line 1476 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _GetRfPairedMode
	mov a,ra
	xor a,2
	or a,rb
	snz z
	jmp _L125
#line 1478 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,18
	mov _SysAO[0],a
	clr _SysAO[1]
	jmp _L105
_L125:
#line 1482 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,2
	mov _SysAO[0],a
	clr _SysAO[1]
	jmp _L105
_L119:
#line 1487 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,17
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1488 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L110:
#line 1491 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,13
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1492 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L111:
#line 1495 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,14
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1496 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L120:
#line 1499 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,19
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1500 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L121:
#line 1503 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,15
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1504 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L115:
#line 1512 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,3
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1513 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L116:
#line 1516 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1517 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L117:
#line 1521 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,8
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1522 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L118:
#line 1525 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,10
	mov _SysAO[0],a
	clr _SysAO[1]
#line 1526 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L105
_L108:
#pragma debug scope 32 31
;begin block, line: 1526.-1
#pragma debug scope 33 32
;begin block, line: 1526.-1
#line 1079 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	add a,_SysAO[12]
	mov rb,a
	mov a,0
	adc a,_SysAO[13]
	mov rc,a
#line 1081 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,4
	sub a,rb
	mov a,41
	sbc a,rc
	snz c
	jmp _L126
#line 1079 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rb
	mov _SysAO[12],a
	mov a,rc
	mov _SysAO[13],a
	jmp _L127
_L126:
#line 1083 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[12]
	clr _SysAO[13]
#line 1084 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysAO[11],a
_L127:
#line 1087 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[12]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[13]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,32  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	sub a,31
	mov a,rc
	sbc a,3
	snz cz
	jmp _L128
#line 1089 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SmokeAO[13],a
_L128:
#line 1092 "e:\x-sense_svn\xp02\xp02\src\main.c"
	sdza _SysAO[11]
	jmp _L129
#line 1094 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[11]
#line 1095 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	add a,_SysAO[9]
	mov rb,a
	mov a,0
	adc a,_SysAO[10]
	mov rc,a
	mov a,rb
	mov _SysAO[9],a
	mov a,rc
	mov _SysAO[10],a
#line 1097 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rc
	mov _E2promWrite_2[0],a
	mov a,0
	fcall _E2promWrite
#line 1098 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[9]
	mov _E2promWrite_2[0],a
	mov a,1
	fcall _E2promWrite
_L129:
#line 1101 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[9]
	mov rb,a
	mov a,_SysAO[10]
	mov rc,a
	mov a,96
	sub a,rb
	mov a,14
	sbc a,rc
	sz c
	jmp _L130
#line 1103 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,0
	orm a,_SysAO[8]
	mov a,64
	orm a,_SysAO[7]
	jmp _L131
_L130:
#line 1105 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,66
	sub a,rb
	mov a,14
	sbc a,rc
	sz c
	jmp _L131
#line 1107 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz rb.5
	jmp _L132
#line 1109 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[14]
	mov rd,a
	mov a,_SysAO[15]
	mov re,a
	mov a,240
	sub a,rd
	mov a,30
	sbc a,re
	sz c
	jmp _L133
#line 1111 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,223  
	andm a,rb  
	mov a,255  
	andm a,rc
	jmp _L132
_L133:
#line 1116 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	add a,rd
	mov _SysAO[14],a
	mov a,0
	adc a,re
	mov _SysAO[15],a
	jmp _L131
_L132:
#line 1121 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,16
	mov _SysAO[7],a
_L131:
#pragma debug scope 32 31
#pragma debug scope 31 1
#line 1532 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _BatteryCheck
#pragma debug scope 34 31
;begin block, line: 1532.-1
#pragma debug scope 35 34
;begin block, line: 1532.-1
#line 728 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SmokeAO[15]
	sub a,90
	snz z
	jmp _L134
#line 731 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SmokeAlarmCheck
_L134:
#line 735 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_COAO[0]
	sub a,170
	snz z
	jmp _L136
	sz _COAO[26]
	jmp _L137
#line 736 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz _COAO[27]
	jmp _L138
_L137:
#line 738 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low offset _COAO
	mov _COSelfCheck_2[0],a
	mov a,high offset _COAO
	mov _COSelfCheck_2[1],a
	fcall _COSelfCheck
	jmp _L136
_L138:
#line 744 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[12]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[13]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	xor a,2
	or a,rc
	snz z
	jmp _L139
#line 746 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _CoAlarmCheck
_L139:
#line 749 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[12]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[13]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,6  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	xor a,5
	or a,rc
	sz z
	jmp _L137
_L136:
#pragma debug scope 34 31
#pragma debug scope 31 1
#pragma debug scope 36 31
;begin block, line: 749.-1
#pragma debug scope 37 36
;begin block, line: 749.-1
#line 768 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	mov a,_SysAO[21]
	mov rd,a
	mov a,_SysAO[22]
	mov re,a
#line 771 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rd  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,re  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,6  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rd,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov re,a
#line 768 "e:\x-sense_svn\xp02\xp02\src\main.c"
	sz rb.0
	jmp _L141
	mov a,rb
	mov rf,a
	mov a,rc
	mov rg,a
	mov a,6  
	andm a,rf  
	mov a,0  
	andm a,rg
#line 769 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rf
	or a,rg
	sz z
	jmp _L142
_L141:
#line 771 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rd
	xor a,5
	or a,re
	snz z
	jmp _L143
#line 777 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz rb.1
	jmp _L144
#line 779 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _ErrIndex_2[1],a
	jmp _L158
_L144:
#line 784 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[23]
	mov ra,a
	mov a,14
	sub a,ra
	snz c
	jmp _L145
#line 786 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inca ra
	mov _SysAO[23],a
#line 787 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,40
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	fcall _SpeakerSendCmd
_L145:
#line 790 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _ErrIndex_2[1],a
_L155:
	mov a,1
	mov _ErrIndex_2[0],a
_L154:
	mov a,1
	fcall _ErrIndex
	jmp _L143
_L142:
#line 794 "e:\x-sense_svn\xp02\xp02\src\main.c"
	sz rb.4
	jmp _L146
	mov a,rb
	mov rf,a
	mov a,rc
	mov rg,a
	mov a,96  
	andm a,rf  
	mov a,0  
	andm a,rg
#line 795 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rf
	or a,rg
	sz z
	jmp _L147
_L146:
#line 797 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rd
	xor a,5
	or a,re
	snz z
	jmp _L143
#line 803 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz rb.5
	jmp _L148
#line 805 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,3
	mov _ErrIndex_2[1],a
_L158:
	clr _ErrIndex_2[0]
	jmp _L154
_L148:
#line 810 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[24]
	mov ra,a
	mov a,14
	sub a,ra
	snz c
	jmp _L149
#line 812 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inca ra
	mov _SysAO[24],a
#line 813 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,55
	mov _SpeakerSendCmd_2[0],a
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	fcall _SpeakerSendCmd
_L149:
#line 816 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,3
	mov _ErrIndex_2[1],a
	jmp _L155
_L147:
#line 825 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rd
	xor a,5
	or a,re
	snz z
	jmp _L143
#line 827 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _GetTempIndex
	mov ra,a
	mov a,ra
	mov _SysAO[20],a
#line 828 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 829 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (3000)>263690
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value (3000)of the argument exceeds the maxinum 263690'
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (3000)<0
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value (3000) of the argument exceeds the mininum 0'
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (3000)==0
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=1) AND ((3000)<( 4 + __PBP__ * 2))
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=2) AND ((3000)<( 4 + __PBP__ * 2))
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=3) AND ((3000)<( 4 + __PBP__ * 2))
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=4) AND ((3000)<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=5) AND ((3000)<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=6) AND ((3000)<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=7) AND ((3000)<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)>=8) AND ((3000)<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)==9)  AND ( __PBP__ > 2 )
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)< ( 8 + __PBP__ * 2)) AND ((3000)>( 3 + __PBP__ * 2))
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -(3000)
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)< ( 0404h + __PBP__ * 2)) AND ((3000)>( 7 + __PBP__ * 2))
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((3000)-( 4 + __PBP__ * 2))/4
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -(((3000)-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000)< ( 040bh + __PBP__ * 2)) AND ((3000)> ( 0403h + __PBP__ * 2))
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -(3000)
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000) >= ( 040bh + __PBP__ * 2)) AND (((((3000)-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((3000)-( 9 + __PBP__ * 2))/0402h
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- ((((3000)-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF ((3000) >= ( 040bh + __PBP__ * 2)) AND (((((3000)-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((3000)-( 9 + __PBP__ * 2))/0402h
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(((3000)-( 9 + __PBP__ * 2))%0402h)/4+1
;# 829 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-((((3000)-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 830 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
_L143:
#line 834 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	add a,_SysAO[21]
	mov rb,a
	mov a,0
	adc a,_SysAO[22]
	mov rc,a
#line 835 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	sub a,rb
	mov a,0
	sbc a,rc
	snz c
	jmp _L150
#line 834 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rb
	mov _SysAO[21],a
	mov a,rc
	mov _SysAO[22],a
	jmp _L105
_L150:
#line 837 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[21]
	clr _SysAO[22]
_L105:
#pragma debug scope 36 31
#pragma debug scope 31 1
	ret
_NormalMain endp
#line 837 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
___hircc equ [17]
___scc equ [16]
___papu equ [22]
___pac equ [21]
___pawu equ [23]
___pas0 equ [322]
___pas1 equ [323]
___pbpu equ [26]
___pbc equ [25]
___pbs0 equ [324]
___pbs1 equ [325]
___integ equ [66]
___pcpu equ [29]
___pcc equ [28]
___pcs0 equ [326]
___pcs1 equ [327]
___pd equ [30]
___pdpu equ [32]
___pdc equ [31]
___pds0 equ [328]
___sledc0 equ [307]
___sledc1 equ [308]
@crom	.section 'crom'
_LC4:
	db 032h,02eh,031h,02eh,038h,00h
@crom	.section 'crom'
_LC5:
	db 058h,050h,030h,032h,05fh,057h,052h,00h
@crom	.section 'crom'
_LC6:
	db 058h,02dh,053h,065h,06eh,073h,065h,020h,04dh,06fh
	db 064h,065h,06ch,03ah,020h,025h,073h,02ch,056h,065h
	db 072h,03ah,020h,025h,073h,0ah,00h
@crom	.section 'crom'
_LC7:
	db 055h,04ch,028h,055h,053h,041h,029h,00h
@crom	.section 'crom'
_LC8:
	db 020h,020h,054h,068h,072h,065h,073h,068h,06fh,06ch
	db 064h,020h,03dh,020h,025h,064h,06dh,056h,0ah,00h
@crom	.section 'crom'
_LC9:
	db 042h,061h,074h,03ah,00h
@crom	.section 'crom'
_LC10:
	db 025h,064h,00h
@crom	.section 'crom'
_LC11:
	db 02eh,025h,064h,00h
@crom	.section 'crom'
_LC12:
	db 06dh,056h,0ah,00h
public _main
#pragma debug scope 38 1
#line 1550 "e:\x-sense_svn\xp02\xp02\src\main.c"
IFDEF WITH_DEFAULT_STARTUP
extern _main_initial0:near
extern _main_startup:near
ENDIF

ROMBANK 0 @start
@start .section com_l 'code'
_main_startup1:
@start .section com_e 'code'
	mov a,bank _main
	mov bp,a
	jmp _main

_main .section 'code'
_main proc
    local _main_2 db 2 dup(?)
#pragma debug scope 39 38
;begin block, line: 1550.-1
#pragma debug scope 40 39
;begin block, line: 1550.-1
#pragma debug variable 10 40 _main_2+0 "BatVol"
#pragma debug scope 41 40
;begin block, line: 1550.-1
#pragma debug scope 42 41
;begin block, line: 1550.-1
#line 124 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	orm a,[17]
_L161:
#line 127 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz [17].1
	jmp _L161
#line 148 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,[16]
	mov ra,a
	clr [16]
#pragma debug scope 41 40
#pragma debug scope 40 39
#line 593 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _STimerInit
#line 594 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,7
	mov _TimerTb0Init_2[0],a
	clr _TimerTb0Init_2[1]
	fcall _TimerTb0Init
#line 595 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _TmrInitHeader
#pragma debug scope 43 40
;begin block, line: 595.-1
#pragma debug scope 44 43
;begin block, line: 595.-1
#line 38 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[25]
	clr _SysAO[26]
	clr _SysAO[27]
	clr _SysAO[28]
#line 39 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[7]
	clr _SysAO[8]
#line 40 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[9]
	clr _SysAO[10]
#line 41 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[11]
#line 42 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[12]
	clr _SysAO[13]
#line 43 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[14]
	clr _SysAO[15]
#line 44 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[21]
	clr _SysAO[22]
#line 45 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[16]
	clr _SysAO[17]
#line 46 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[18]
	clr _SysAO[19]
#line 47 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,45
	mov _SysAO[20],a
#line 50 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[23]
#line 51 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[24]
#line 54 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysAO[0],a
	clr _SysAO[1]
#line 55 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysAO[2],a
	clr _SysAO[3]
#line 57 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,0
	fcall _E2promRead
	mov ra,a
#line 58 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	mov _main_2[1],a
	clr _main_2[0]
	mov a,_main_2[0]
	mov _SysAO[9],a
	mov a,_main_2[1]
	mov _SysAO[10],a
#line 59 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	fcall _E2promRead
	mov ra,a
	mov a,_main_2[1]
	mov _SysAO[10],a
	mov a,ra
	or a,_main_2[0]
	mov _SysAO[9],a
#line 61 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[4]
	clr _SysAO[5]
#line 62 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SysAO[6]
	mov a,10
	mov ra,a
#line 63 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr rf
_L163:
#line 65 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rf
	mov rb,a
	clr rc
	clr c
	rlca rb
	mov rd,a
	rlca rc
	mov re,a
	mov a,rd
	addm a,rb
	mov a,re
	adcm a,rc
	mov a,low (offset _SysAO+29)
	add a,rb
	mov mp,a
	mov a,high (offset _SysAO+29)
	adc a,rc
	mov sbp,a
	clr ir
	inc mp
	clr ir
#line 66 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low (offset _SysAO+31)
	add a,rb
	mov mp,a
	mov a,high (offset _SysAO+31)
	adc a,rc
	mov sbp,a
	mov a,0
	mov ir,a
#line 63 "e:\x-sense_svn\xp02\xp02\src\main.c"
	inc rf
	sdz ra
	jmp _L163
#line 69 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysteSetSig_2[0],a
	clr _SysteSetSig_2[1]
	fcall _SysteSetSig
#pragma debug scope 43 40
#pragma debug scope 40 39
#pragma debug scope 45 40
;begin block, line: 69.-1
#pragma debug scope 46 45
;begin block, line: 69.-1
#line 254 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20]
#line 255 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [22]
#line 256 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [21]
#line 257 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [23]
#line 269 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,5
	mov [22],a
#line 271 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [21].7
#line 273 "e:\x-sense_svn\xp02\xp02\src\main.c"
	lset [323].7
#line 276 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].4
#line 277 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [22].4
#line 278 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [21].4
#line 279 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [23].4
#line 297 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24]
#line 298 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [26]
#line 299 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [25]
#line 304 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [25].0
#line 305 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [26].0
#line 312 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [66]
#line 313 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [66].0
#line 314 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [66].1
#line 316 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [67].2
#line 320 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,12
	lorm a,[324]
#line 325 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,192
	lorm a,[324]
#line 326 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [25].3
#line 327 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,10
	orm a,[26]
#line 332 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,175
	andm a,[25]
#line 333 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,80
	orm a,[26]
#line 336 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [25].4
#line 337 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [26].4
#line 338 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [24].4
#line 339 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 1000>263690
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 1000of the argument exceeds the maxinum 263690'
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 1000<0
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 1000 of the argument exceeds the mininum 0'
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 1000==0
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=1) AND (1000<( 4 + __PBP__ * 2))
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=2) AND (1000<( 4 + __PBP__ * 2))
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=3) AND (1000<( 4 + __PBP__ * 2))
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=4) AND (1000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=5) AND (1000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=6) AND (1000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=7) AND (1000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000>=8) AND (1000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000==9)  AND ( __PBP__ > 2 )
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000< ( 8 + __PBP__ * 2)) AND (1000>( 3 + __PBP__ * 2))
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -1000
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000< ( 0404h + __PBP__ * 2)) AND (1000>( 7 + __PBP__ * 2))
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(1000-( 4 + __PBP__ * 2))/4
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((1000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000< ( 040bh + __PBP__ * 2)) AND (1000> ( 0403h + __PBP__ * 2))
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -1000
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000 >= ( 040bh + __PBP__ * 2)) AND ((((1000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(1000-( 9 + __PBP__ * 2))/0402h
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((1000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (1000 >= ( 040bh + __PBP__ * 2)) AND ((((1000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(1000-( 9 + __PBP__ * 2))/0402h
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((1000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 339 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((1000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 340 "e:\x-sense_svn\xp02\xp02\src\main.c"
	sz [24].4
	jmp _L164
#line 342 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysAO[18],a
	clr _SysAO[19]
_L164:
#line 345 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [25].4
#line 346 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [26].4
#line 347 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [24].4
#line 352 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [27]
#line 353 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [29]
#line 354 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [28]
#line 358 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [28].0
#line 359 "e:\x-sense_svn\xp02\xp02\src\main.c"
	lset [326].1
#line 360 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [29].3
#line 367 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,126
	orm a,[29]
#line 372 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [30]
#line 373 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [32]
#line 374 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [31]
#line 377 "e:\x-sense_svn\xp02\xp02\src\main.c"
	lset [307]
#line 378 "e:\x-sense_svn\xp02\xp02\src\main.c"
	lset [308]
#line 383 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [21].1
#line 384 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [22].1
#line 385 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [23].1
#line 389 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [21].5
#line 390 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [22].5
#line 391 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [20].5
#line 394 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [28].5
#line 395 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [29].5
#line 396 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [27].5
#line 398 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [21].3
#line 399 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [22].3
#line 402 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [20].0
#line 403 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [22].0
#line 404 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [21].0
#line 405 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [23].0
#line 408 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [25].7
#line 409 "e:\x-sense_svn\xp02\xp02\src\main.c"
	lset [325].7
#line 410 "e:\x-sense_svn\xp02\xp02\src\main.c"
	lclr [325].6
#pragma debug scope 45 40
#pragma debug scope 40 39
#line 599 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr [28].4
	set [29].4
	clr [27].4
#line 602 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _UsartCfg
#line 605 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _KeyInit
#line 606 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _PwrInit
#line 607 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,7
	mov _SysWakeUpInit_2[0],a
	clr _SysWakeUpInit_2[1]
	fcall _SysWakeUpInit
#line 608 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SmokeDetInit
#line 609 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _InitCO_Data
#line 612 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [67].0
#line 621 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low offset _LC4
	mov _printf_2[4],a
	mov a,high offset _LC4
	mov _printf_2[5],a
	mov a,low offset _LC5
	mov _printf_2[2],a
	mov a,high offset _LC5
	mov _printf_2[3],a
	mov a,low offset _LC6
	mov _printf_2[0],a
	mov a,high offset _LC6
	mov _printf_2[1],a
	fcall _printf
#line 623 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low offset _LC7
	mov _printf_2[0],a
	mov a,high offset _LC7
	mov _printf_2[1],a
	fcall _printf
#line 627 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SMOKE_ALARM_LEVEL[0]
	mov _printf_2[2],a
	mov a,_SMOKE_ALARM_LEVEL[1]
	mov _printf_2[3],a
	mov a,low offset _LC8
	mov _printf_2[0],a
	mov a,high offset _LC8
	mov _printf_2[1],a
	fcall _printf
#line 628 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _E2promDisplay
#line 631 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _BatteryCheckHandle
	mov a,ra
	mov _main_2[0],a
	mov a,rb
	mov _main_2[1],a
#line 633 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low offset _LC9
	mov _printf_2[0],a
	mov a,high offset _LC9
	mov _printf_2[1],a
	fcall _printf
#line 634 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov _printf_2[3],a
	mov a,low offset _LC10
	mov _printf_2[0],a
	mov a,high offset _LC10
	mov _printf_2[1],a
	fcall _printf
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,232  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	mov a,3  
	mov _builtin_holtek_udivmodhi4_2[3],a
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov _printf_2[3],a
	mov a,low offset _LC11
	mov _printf_2[0],a
	mov a,high offset _LC11
	mov _printf_2[1],a
	fcall _printf
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,100  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,rb  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,rc  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[0]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[1]  
	mov _printf_2[3],a
	mov a,low offset _LC10
	mov _printf_2[0],a
	mov a,high offset _LC10
	mov _printf_2[1],a
	fcall _printf
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_main_2[0]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_main_2[1]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,10  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov _printf_2[2],a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov _printf_2[3],a
	mov a,low offset _LC10
	mov _printf_2[0],a
	mov a,high offset _LC10
	mov _printf_2[1],a
	fcall _printf
#line 635 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,low offset _LC12
	mov _printf_2[0],a
	mov a,high offset _LC12
	mov _printf_2[1],a
	fcall _printf
#line 639 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SpeakerInit
#line 643 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _RfInit
#line 646 "e:\x-sense_svn\xp02\xp02\src\main.c"
	snz [20].0
	jmp _L165
_L168:
#line 661 "e:\x-sense_svn\xp02\xp02\src\main.c"
	sz [20].4
	jmp _L170
	jmp _L219
_L165:
#line 648 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 648 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 649 "e:\x-sense_svn\xp02\xp02\src\main.c"
	sz [20].0
	jmp _L168
	mov a,8
	mov _main_2[0],a
_L169:
#line 653 "e:\x-sense_svn\xp02\xp02\src\main.c"
	clr _SpeakerSendCmd_2[0]
	clr _SpeakerSendCmd_2[1]
	clr _SpeakerSendCmd_2[2]
	clr _SpeakerSendCmd_2[3]
	fcall _SpeakerSendCmd
#line 654 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 654 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
	sdz _main_2[0]
	jmp _L169
	jmp _L168
_L219:
#line 661 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _LoadSmokeData
	mov a,ra
	xor a,1
	or a,rb
	snz z
	jmp _L170
#line 662 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _LoadCOData
#line 661 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	xor a,1
	or a,rb
	snz z
	jmp _L170
#line 667 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000>263690
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000of the argument exceeds the maxinum 263690'
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000<0
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	ERRMESSAGE 'the value 150000 of the argument exceeds the mininum 0'
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF 150000==0
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	JMP $
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=1) AND (150000<( 4 + __PBP__ * 2))
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=2) AND (150000<( 4 + __PBP__ * 2))
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=3) AND (150000<( 4 + __PBP__ * 2))
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=4) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=5) AND (150000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=6) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=7) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000>=8) AND (150000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000==9)  AND ( __PBP__ > 2 )
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	NOP
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 8 + __PBP__ * 2)) AND (150000>( 3 + __PBP__ * 2))
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -150000
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 0404h + __PBP__ * 2)) AND (150000>( 7 + __PBP__ * 2))
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 4 + __PBP__ * 2))/4
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX3 + 3 -((150000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000< ( 040bh + __PBP__ * 2)) AND (150000> ( 0403h + __PBP__ * 2))
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0 
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -150000
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,0
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY5 +5- (((150000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	IF (150000 >= ( 040bh + __PBP__ * 2)) AND ((((150000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,(150000-( 9 + __PBP__ * 2))/0402h
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV _builtin_holtek_delay_2,A
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	MOV A,((150000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 667 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	fcall __DELAYY3 +3-(((150000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
#line 668 "e:\x-sense_svn\xp02\xp02\src\main.c"
	sz [20].4
	jmp _L170
#line 670 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,11
	mov _SysAO[0],a
	clr _SysAO[1]
#line 671 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysteSetSig_2[0],a
	clr _SysteSetSig_2[1]
	fcall _SysteSetSig
_L170:
#line 674 "e:\x-sense_svn\xp02\xp02\src\main.c"
	set [22].4
_L171:
#pragma debug scope 39 38
#pragma debug scope 38 1
#line 1555 "e:\x-sense_svn\xp02\xp02\src\main.c"
;# 1555 "e:\x-sense_svn\xp02\xp02\src\main.c" 1
	clr wdt
#line 1556 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _Polling
#line 1558 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _PollingUartSend
#line 1560 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _KeyHandleMsg
#line 1562 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _UartService
#line 1564 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SysteGetSig
	mov a,ra
	mov _SysAO[4],a
	mov a,rb
	mov _SysAO[5],a
#line 1565 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,ra
	or a,rb
	sz z
	jmp _L172
#line 1572 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[0]
	mov rb,a
	mov a,_SysAO[1]
	mov rc,a
	mov a,rb
	or a,rc
	sz z
	jmp _L174
	mov a,rb
	xor a,1
	or a,rc
	sz z
	jmp _L175
	mov a,rb
	xor a,2
	or a,rc
	sz z
	jmp _L176
	mov a,rb
	xor a,3
	or a,rc
	sz z
	jmp _L177
	mov a,rb
	xor a,4
	or a,rc
	sz z
	jmp _L178
	mov a,rb
	xor a,5
	or a,rc
	sz z
	jmp _L179
	mov a,rb
	xor a,6
	or a,rc
	sz z
	jmp _L180
	mov a,rb
	xor a,7
	or a,rc
	sz z
	jmp _L181
	mov a,rb
	xor a,8
	or a,rc
	sz z
	jmp _L182
	mov a,rb
	xor a,9
	or a,rc
	sz z
	jmp _L183
	mov a,rb
	xor a,10
	or a,rc
	sz z
	jmp _L184
	mov a,rb
	xor a,11
	or a,rc
	sz z
	jmp _L185
	mov a,rb
	xor a,12
	or a,rc
	sz z
	jmp _L185
	mov a,rb
	xor a,13
	or a,rc
	sz z
	jmp _L185
	mov a,rb
	xor a,14
	or a,rc
	sz z
	jmp _L185
	mov a,rb
	xor a,15
	or a,rc
	sz z
	jmp _L186
	mov a,rb
	xor a,16
	or a,rc
	sz z
	jmp _L187
	mov a,rb
	xor a,17
	or a,rc
	sz z
	jmp _L176
	mov a,rb
	xor a,18
	or a,rc
	sz z
	jmp _L188
	mov a,rb
	xor a,19
	or a,rc
	sz z
	jmp _L188
	mov a,rb
	xor a,20
	or a,rc
	snz z
	jmp _L173
#line 1651 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _LocationSettingMain
#line 1652 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L174:
#line 1576 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _NormalMain
#line 1577 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L175:
#line 1580 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SmokeCaliMain
#line 1581 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L176:
#line 1587 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SmokeTestMain
#line 1588 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L177:
#line 1591 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SmokeAlarmMain
#line 1592 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L178:
#line 1595 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SmokeMuteMain
#line 1596 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L179:
#line 1599 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _SmokeErrMain
#line 1600 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L180:
#line 1605 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _CoCaliMain
#line 1606 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L181:
#line 1610 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _CoTestMain
#line 1611 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L182:
#line 1615 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _CoAlarmMain
#line 1616 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L184:
#line 1619 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _CoErrMain
#line 1620 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L183:
#line 1623 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _CoMuteMain
#line 1624 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L185:
#line 1632 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rb
	fcall _RfPairMain
#line 1633 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L186:
#line 1636 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _RfSmokeAlarmMain
#line 1637 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L187:
#line 1640 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _RfCoAlarmMain
#line 1641 "e:\x-sense_svn\xp02\xp02\src\main.c"
	jmp _L173
_L188:
#line 1645 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,rb
	fcall _RfIntranetTestMain
_L173:
#line 1659 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[2]
	sub a,_SysAO[0]
	mov a,_SysAO[3]
	sbc a,_SysAO[1]
	sz cz
	jmp _L171
#line 1661 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,1
	mov _SysteSetSig_2[0],a
	clr _SysteSetSig_2[1]
	fcall _SysteSetSig
#line 1662 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[0]
	mov _SysAO[2],a
	mov a,_SysAO[1]
	mov _SysAO[3],a
	jmp _L171
_L172:
#line 1665 "e:\x-sense_svn\xp02\xp02\src\main.c"
	mov a,_SysAO[25]
	or a,_SysAO[26]
	or a,_SysAO[27]
	or a,_SysAO[28]
	snz z
	jmp _L171
#line 1667 "e:\x-sense_svn\xp02\xp02\src\main.c"
	fcall _EnteryLowPower
	jmp _L171
	jmp $
_main endp

@dummy proc
	call _main
@dummy endp

#line 1667 "e:\x-sense_svn\xp02\xp02\src\main.c"
#pragma debug scope 1 1
@HCCINIT	.section 'data'
#line 1324 "e:\x-sense_svn\xp02\xp02\src\main.c"
@HCCINIT___SetLocation_3318 .section 'data'
___SetLocation_3318 label byte
#pragma debug variable 8 30 ___SetLocation_3318 "SetLocation"
	db 7
@ROMDATA_BASE .section inpage 'code'
	db 7
@HCCINIT___SetLocation_3318 .section 'data'
#line 1323 "e:\x-sense_svn\xp02\xp02\src\main.c"
@HCCINIT___Flag_3317 .section 'data'
___Flag_3317 label byte
#pragma debug variable 12 30 ___Flag_3317 "Flag"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___Flag_3317 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___Flag_3317 .section 'data'
#line 700 "e:\x-sense_svn\xp02\xp02\src\main.c"
@HCCINIT___lastTick10ms_3194 .section 'data'
___lastTick10ms_3194 label byte
#pragma debug variable 10 5 ___lastTick10ms_3194 "lastTick10ms"
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___lastTick10ms_3194 .section 'data'
	db 0
@ROMDATA_BASE .section inpage 'code'
	db 0
@HCCINIT___lastTick10ms_3194 .section 'data'
#line 25 "e:\x-sense_svn\xp02\xp02\src\main.c"
public _SysAO
@HCCINIT0_SysAO .section 'data'
_SysAO	db 59 dup(0)
#pragma debug struct_begin 44 "SystemQueueObject"
#pragma debug field 0 12 "sig"
#pragma debug field 0 8 "atrr"
#pragma debug struct_end
#pragma debug struct_begin 45 "SystemObject"
#pragma debug field 0 12 "eMode"
#pragma debug field 0 12 "eOldMode"
#pragma debug field 0 12 "sig"
#pragma debug field 0 8 "attrQF__"
#pragma debug field 0 12 "eEventFlg"
#pragma debug field 0 12 "LifeTimeDays"
#pragma debug field 0 8 "LifeTimeUpdateFlag"
#pragma debug field 0 12 "SlpTimeCnt"
#pragma debug field 0 12 "EventMuteTimeCnt"
#pragma debug field 0 12 "DebugOnFlag"
#pragma debug field 0 12 "PowerTestFlag"
#pragma debug field 0 8 "TempData"
#pragma debug field 0 12 "StdbyTimeCnt"
#pragma debug field 0 8 "LowPowerSpeakTimeCnt"
#pragma debug field 0 8 "EndLifeSpeakTimeCnt"
#pragma debug field 0 14 "haltFlag"
#pragma debug field 1 44 10 "sigQue"
#pragma debug struct_end
#pragma debug variable 45 1 _SysAO "SysAO"

@HCCINIT .section 'data'
public _SMOKE_ALARM_LEVEL
#line 23 "e:\x-sense_svn\xp02\xp02\src\main.c"
@HCCINIT_SMOKE_ALARM_LEVEL .section 'data'
_SMOKE_ALARM_LEVEL label byte
#pragma debug variable 10 1 _SMOKE_ALARM_LEVEL "SMOKE_ALARM_LEVEL"
	dw 510
@ROMDATA_BASE .section inpage 'code'
	dc 510
@HCCINIT_SMOKE_ALARM_LEVEL .section 'data'
#pragma debug struct_begin 46 "__scc_bits"
#pragma debug field 21 8 0 1 "__fsiden" ;0,1
#pragma debug field 21 8 0 1 "__fhiden" ;1,1
#pragma debug field 21 8 0 1 "__fss" ;2,1
#pragma debug field 21 8 0 1 "__fhs" ;3,1
#pragma debug field 21 8 0 1 ;4,1
#pragma debug field 21 8 0 1 "__cks0" ;5,1
#pragma debug field 21 8 0 1 "__cks1" ;6,1
#pragma debug field 21 8 0 1 "__cks2" ;7,1
#pragma debug struct_end
#pragma debug union_begin 47 ""
#pragma debug field 2 46 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 47 1 ___scc "__scc" 1
#pragma debug struct_begin 48 "__hircc_bits"
#pragma debug field 21 8 0 1 "__hircen" ;0,1
#pragma debug field 21 8 0 1 "__hircf" ;1,1
#pragma debug field 21 8 0 1 "__hirc0" ;2,1
#pragma debug field 21 8 0 1 "__hirc1" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 49 ""
#pragma debug field 2 48 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 49 1 ___hircc "__hircc" 1
#pragma debug struct_begin 50 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 51 ""
#pragma debug field 2 50 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 51 1 ___pa "__pa" 1
#pragma debug struct_begin 52 "__pac_bits"
#pragma debug field 21 8 0 1 "__pac0" ;0,1
#pragma debug field 21 8 0 1 "__pac1" ;1,1
#pragma debug field 21 8 0 1 "__pac2" ;2,1
#pragma debug field 21 8 0 1 "__pac3" ;3,1
#pragma debug field 21 8 0 1 "__pac4" ;4,1
#pragma debug field 21 8 0 1 "__pac5" ;5,1
#pragma debug field 21 8 0 1 "__pac6" ;6,1
#pragma debug field 21 8 0 1 "__pac7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 53 ""
#pragma debug field 2 52 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 53 1 ___pac "__pac" 1
#pragma debug struct_begin 54 "__papu_bits"
#pragma debug field 21 8 0 1 "__papu0" ;0,1
#pragma debug field 21 8 0 1 "__papu1" ;1,1
#pragma debug field 21 8 0 1 "__papu2" ;2,1
#pragma debug field 21 8 0 1 "__papu3" ;3,1
#pragma debug field 21 8 0 1 "__papu4" ;4,1
#pragma debug field 21 8 0 1 "__papu5" ;5,1
#pragma debug field 21 8 0 1 "__papu6" ;6,1
#pragma debug field 21 8 0 1 "__papu7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 55 ""
#pragma debug field 2 54 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 55 1 ___papu "__papu" 1
#pragma debug struct_begin 56 "__pawu_bits"
#pragma debug field 21 8 0 1 "__pawu0" ;0,1
#pragma debug field 21 8 0 1 "__pawu1" ;1,1
#pragma debug field 21 8 0 1 "__pawu2" ;2,1
#pragma debug field 21 8 0 1 "__pawu3" ;3,1
#pragma debug field 21 8 0 1 "__pawu4" ;4,1
#pragma debug field 21 8 0 1 "__pawu5" ;5,1
#pragma debug field 21 8 0 1 "__pawu6" ;6,1
#pragma debug field 21 8 0 1 "__pawu7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 57 ""
#pragma debug field 2 56 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 57 1 ___pawu "__pawu" 1
#pragma debug struct_begin 58 "__pb_bits"
#pragma debug field 21 8 0 1 "__pb0" ;0,1
#pragma debug field 21 8 0 1 "__pb1" ;1,1
#pragma debug field 21 8 0 1 "__pb2" ;2,1
#pragma debug field 21 8 0 1 "__pb3" ;3,1
#pragma debug field 21 8 0 1 "__pb4" ;4,1
#pragma debug field 21 8 0 1 "__pb5" ;5,1
#pragma debug field 21 8 0 1 "__pb6" ;6,1
#pragma debug field 21 8 0 1 "__pb7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 59 ""
#pragma debug field 2 58 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 59 1 ___pb "__pb" 1
#pragma debug struct_begin 60 "__pbc_bits"
#pragma debug field 21 8 0 1 "__pbc0" ;0,1
#pragma debug field 21 8 0 1 "__pbc1" ;1,1
#pragma debug field 21 8 0 1 "__pbc2" ;2,1
#pragma debug field 21 8 0 1 "__pbc3" ;3,1
#pragma debug field 21 8 0 1 "__pbc4" ;4,1
#pragma debug field 21 8 0 1 "__pbc5" ;5,1
#pragma debug field 21 8 0 1 "__pbc6" ;6,1
#pragma debug field 21 8 0 1 "__pbc7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 61 ""
#pragma debug field 2 60 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 61 1 ___pbc "__pbc" 1
#pragma debug struct_begin 62 "__pbpu_bits"
#pragma debug field 21 8 0 1 "__pbpu0" ;0,1
#pragma debug field 21 8 0 1 "__pbpu1" ;1,1
#pragma debug field 21 8 0 1 "__pbpu2" ;2,1
#pragma debug field 21 8 0 1 "__pbpu3" ;3,1
#pragma debug field 21 8 0 1 "__pbpu4" ;4,1
#pragma debug field 21 8 0 1 "__pbpu5" ;5,1
#pragma debug field 21 8 0 1 "__pbpu6" ;6,1
#pragma debug field 21 8 0 1 "__pbpu7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 63 ""
#pragma debug field 2 62 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 63 1 ___pbpu "__pbpu" 1
#pragma debug struct_begin 64 "__pc_bits"
#pragma debug field 21 8 0 1 "__pc0" ;0,1
#pragma debug field 21 8 0 1 "__pc1" ;1,1
#pragma debug field 21 8 0 1 "__pc2" ;2,1
#pragma debug field 21 8 0 1 "__pc3" ;3,1
#pragma debug field 21 8 0 1 "__pc4" ;4,1
#pragma debug field 21 8 0 1 "__pc5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 65 ""
#pragma debug field 2 64 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 65 1 ___pc "__pc" 1
#pragma debug struct_begin 66 "__pcc_bits"
#pragma debug field 21 8 0 1 "__pcc0" ;0,1
#pragma debug field 21 8 0 1 "__pcc1" ;1,1
#pragma debug field 21 8 0 1 "__pcc2" ;2,1
#pragma debug field 21 8 0 1 "__pcc3" ;3,1
#pragma debug field 21 8 0 1 "__pcc4" ;4,1
#pragma debug field 21 8 0 1 "__pcc5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 67 ""
#pragma debug field 2 66 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 67 1 ___pcc "__pcc" 1
#pragma debug struct_begin 68 "__pcpu_bits"
#pragma debug field 21 8 0 1 "__pcpu0" ;0,1
#pragma debug field 21 8 0 1 "__pcpu1" ;1,1
#pragma debug field 21 8 0 1 "__pcpu2" ;2,1
#pragma debug field 21 8 0 1 "__pcpu3" ;3,1
#pragma debug field 21 8 0 1 "__pcpu4" ;4,1
#pragma debug field 21 8 0 1 "__pcpu5" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 69 ""
#pragma debug field 2 68 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 69 1 ___pcpu "__pcpu" 1
#pragma debug struct_begin 70 "__pd_bits"
#pragma debug field 21 8 0 1 "__pd0" ;0,1
#pragma debug field 21 8 0 1 "__pd1" ;1,1
#pragma debug field 21 8 0 1 "__pd2" ;2,1
#pragma debug field 21 8 0 1 "__pd3" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 71 ""
#pragma debug field 2 70 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 71 1 ___pd "__pd" 1
#pragma debug struct_begin 72 "__pdc_bits"
#pragma debug field 21 8 0 1 "__pdc0" ;0,1
#pragma debug field 21 8 0 1 "__pdc1" ;1,1
#pragma debug field 21 8 0 1 "__pdc2" ;2,1
#pragma debug field 21 8 0 1 "__pdc3" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 73 ""
#pragma debug field 2 72 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 73 1 ___pdc "__pdc" 1
#pragma debug struct_begin 74 "__pdpu_bits"
#pragma debug field 21 8 0 1 "__pdpu0" ;0,1
#pragma debug field 21 8 0 1 "__pdpu1" ;1,1
#pragma debug field 21 8 0 1 "__pdpu2" ;2,1
#pragma debug field 21 8 0 1 "__pdpu3" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 75 ""
#pragma debug field 2 74 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 75 1 ___pdpu "__pdpu" 1
#pragma debug struct_begin 76 "__wdtc_bits"
#pragma debug field 21 8 0 1 "__ws0" ;0,1
#pragma debug field 21 8 0 1 "__ws1" ;1,1
#pragma debug field 21 8 0 1 "__ws2" ;2,1
#pragma debug field 21 8 0 1 "__we0" ;3,1
#pragma debug field 21 8 0 1 "__we1" ;4,1
#pragma debug field 21 8 0 1 "__we2" ;5,1
#pragma debug field 21 8 0 1 "__we3" ;6,1
#pragma debug field 21 8 0 1 "__we4" ;7,1
#pragma debug struct_end
#pragma debug union_begin 77 ""
#pragma debug field 2 76 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 77 1 ___wdtc "__wdtc" 1
#pragma debug struct_begin 78 "__integ_bits"
#pragma debug field 21 8 0 1 "__int0s0" ;0,1
#pragma debug field 21 8 0 1 "__int0s1" ;1,1
#pragma debug field 21 8 0 1 "__int1s0" ;2,1
#pragma debug field 21 8 0 1 "__int1s1" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 79 ""
#pragma debug field 2 78 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 79 1 ___integ "__integ" 1
#pragma debug struct_begin 80 "__intc0_bits"
#pragma debug field 21 8 0 1 "__emi" ;0,1
#pragma debug field 21 8 0 1 "__pltc0e" ;1,1
#pragma debug field 21 8 0 1 "__int0e" ;2,1
#pragma debug field 21 8 0 1 "__int1e" ;3,1
#pragma debug field 21 8 0 1 "__pltc0f" ;4,1
#pragma debug field 21 8 0 1 "__int0f" ;5,1
#pragma debug field 21 8 0 1 "__int1f" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 81 ""
#pragma debug field 2 80 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 81 1 ___intc0 "__intc0" 1
#pragma debug struct_begin 82 "__intc2_bits"
#pragma debug field 21 8 0 1 "__mf2e" ;0,1
#pragma debug field 21 8 0 1 "__tb0e" ;1,1
#pragma debug field 21 8 0 1 "__tb1e" ;2,1
#pragma debug field 21 8 0 1 "__pltc1e" ;3,1
#pragma debug field 21 8 0 1 "__mf2f" ;4,1
#pragma debug field 21 8 0 1 "__tb0f" ;5,1
#pragma debug field 21 8 0 1 "__tb1f" ;6,1
#pragma debug field 21 8 0 1 "__pltc1f" ;7,1
#pragma debug struct_end
#pragma debug union_begin 83 ""
#pragma debug field 2 82 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 83 1 ___intc2 "__intc2" 1
#pragma debug struct_begin 84 "__pscr_bits"
#pragma debug field 21 8 0 1 "__clksel0" ;0,1
#pragma debug field 21 8 0 1 "__clksel1" ;1,1
#pragma debug field 21 8 0 6 ;2,6
#pragma debug struct_end
#pragma debug union_begin 85 ""
#pragma debug field 2 84 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 85 1 ___pscr "__pscr" 1
#pragma debug struct_begin 86 "__tb0c_bits"
#pragma debug field 21 8 0 1 "__tb00" ;0,1
#pragma debug field 21 8 0 1 "__tb01" ;1,1
#pragma debug field 21 8 0 1 "__tb02" ;2,1
#pragma debug field 21 8 0 4 ;3,4
#pragma debug field 21 8 0 1 "__tb0on" ;7,1
#pragma debug struct_end
#pragma debug union_begin 87 ""
#pragma debug field 2 86 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 87 1 ___tb0c "__tb0c" 1
#pragma debug variable 8 1 ___stm0dl "__stm0dl" 1
#pragma debug variable 8 1 ___stm0dh "__stm0dh" 1
#pragma debug struct_begin 88 "__sledc0_bits"
#pragma debug field 21 8 0 1 "__sledc00" ;0,1
#pragma debug field 21 8 0 1 "__sledc01" ;1,1
#pragma debug field 21 8 0 1 "__sledc02" ;2,1
#pragma debug field 21 8 0 1 "__sledc03" ;3,1
#pragma debug field 21 8 0 1 "__sledc04" ;4,1
#pragma debug field 21 8 0 1 "__sledc05" ;5,1
#pragma debug field 21 8 0 1 "__sledc06" ;6,1
#pragma debug field 21 8 0 1 "__sledc07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 89 ""
#pragma debug field 2 88 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 89 1 ___sledc0 "__sledc0" 1
#pragma debug struct_begin 90 "__sledc1_bits"
#pragma debug field 21 8 0 1 "__sledc10" ;0,1
#pragma debug field 21 8 0 1 "__sledc11" ;1,1
#pragma debug field 21 8 0 1 "__sledc12" ;2,1
#pragma debug field 21 8 0 1 "__sledc13" ;3,1
#pragma debug field 21 8 0 1 "__sledc14" ;4,1
#pragma debug field 21 8 0 1 "__sledc15" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 91 ""
#pragma debug field 2 90 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 91 1 ___sledc1 "__sledc1" 1
#pragma debug struct_begin 92 "__pas0_bits"
#pragma debug field 21 8 0 1 "__pas00" ;0,1
#pragma debug field 21 8 0 1 "__pas01" ;1,1
#pragma debug field 21 8 0 1 "__pas02" ;2,1
#pragma debug field 21 8 0 1 "__pas03" ;3,1
#pragma debug field 21 8 0 1 "__pas04" ;4,1
#pragma debug field 21 8 0 1 "__pas05" ;5,1
#pragma debug field 21 8 0 1 "__pas06" ;6,1
#pragma debug field 21 8 0 1 "__pas07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 93 ""
#pragma debug field 2 92 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 93 1 ___pas0 "__pas0" 1
#pragma debug struct_begin 94 "__pas1_bits"
#pragma debug field 21 8 0 1 "__pas10" ;0,1
#pragma debug field 21 8 0 1 "__pas11" ;1,1
#pragma debug field 21 8 0 1 "__pas12" ;2,1
#pragma debug field 21 8 0 1 "__pas13" ;3,1
#pragma debug field 21 8 0 1 "__pas14" ;4,1
#pragma debug field 21 8 0 1 "__pas15" ;5,1
#pragma debug field 21 8 0 1 "__pas16" ;6,1
#pragma debug field 21 8 0 1 "__pas17" ;7,1
#pragma debug struct_end
#pragma debug union_begin 95 ""
#pragma debug field 2 94 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 95 1 ___pas1 "__pas1" 1
#pragma debug struct_begin 96 "__pbs0_bits"
#pragma debug field 21 8 0 1 "__pbs00" ;0,1
#pragma debug field 21 8 0 1 "__pbs01" ;1,1
#pragma debug field 21 8 0 1 "__pbs02" ;2,1
#pragma debug field 21 8 0 1 "__pbs03" ;3,1
#pragma debug field 21 8 0 1 "__pbs04" ;4,1
#pragma debug field 21 8 0 1 "__pbs05" ;5,1
#pragma debug field 21 8 0 1 "__pbs06" ;6,1
#pragma debug field 21 8 0 1 "__pbs07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 97 ""
#pragma debug field 2 96 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 97 1 ___pbs0 "__pbs0" 1
#pragma debug struct_begin 98 "__pbs1_bits"
#pragma debug field 21 8 0 1 "__pbs10" ;0,1
#pragma debug field 21 8 0 1 "__pbs11" ;1,1
#pragma debug field 21 8 0 1 "__pbs12" ;2,1
#pragma debug field 21 8 0 1 "__pbs13" ;3,1
#pragma debug field 21 8 0 1 "__pbs14" ;4,1
#pragma debug field 21 8 0 1 "__pbs15" ;5,1
#pragma debug field 21 8 0 1 "__pbs16" ;6,1
#pragma debug field 21 8 0 1 "__pbs17" ;7,1
#pragma debug struct_end
#pragma debug union_begin 99 ""
#pragma debug field 2 98 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 99 1 ___pbs1 "__pbs1" 1
#pragma debug struct_begin 100 "__pcs0_bits"
#pragma debug field 21 8 0 1 "__pcs00" ;0,1
#pragma debug field 21 8 0 1 "__pcs01" ;1,1
#pragma debug field 21 8 0 1 "__pcs02" ;2,1
#pragma debug field 21 8 0 1 "__pcs03" ;3,1
#pragma debug field 21 8 0 1 "__pcs04" ;4,1
#pragma debug field 21 8 0 1 "__pcs05" ;5,1
#pragma debug field 21 8 0 1 "__pcs06" ;6,1
#pragma debug field 21 8 0 1 "__pcs07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 101 ""
#pragma debug field 2 100 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 101 1 ___pcs0 "__pcs0" 1
#pragma debug struct_begin 102 "__pcs1_bits"
#pragma debug field 21 8 0 1 "__pcs10" ;0,1
#pragma debug field 21 8 0 1 "__pcs11" ;1,1
#pragma debug field 21 8 0 1 "__pcs12" ;2,1
#pragma debug field 21 8 0 1 "__pcs13" ;3,1
#pragma debug field 21 8 0 4 ;4,4
#pragma debug struct_end
#pragma debug union_begin 103 ""
#pragma debug field 2 102 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 103 1 ___pcs1 "__pcs1" 1
#pragma debug struct_begin 104 "__pds0_bits"
#pragma debug field 21 8 0 1 "__pds00" ;0,1
#pragma debug field 21 8 0 1 "__pds01" ;1,1
#pragma debug field 21 8 0 1 "__pds02" ;2,1
#pragma debug field 21 8 0 1 "__pds03" ;3,1
#pragma debug field 21 8 0 1 "__pds04" ;4,1
#pragma debug field 21 8 0 1 "__pds05" ;5,1
#pragma debug field 21 8 0 1 "__pds06" ;6,1
#pragma debug field 21 8 0 1 "__pds07" ;7,1
#pragma debug struct_end
#pragma debug union_begin 105 ""
#pragma debug field 2 104 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 105 1 ___pds0 "__pds0" 1

; output external variables
extern _COAO:byte
extern _SmokeAO:byte
extern _PwrAO:byte
extern _RfAO:byte
extern r1:byte
extern r2:byte
extern r3:byte
#line 1550 "e:\x-sense_svn\xp02\xp02\src\main.c"
@code .section at 0 'code'
	clr bp
	jmp _main_startup1

extern _printf_2:byte
extern _printf:near
extern _E2promRead:near
extern _builtin_holtek_udivmodhi4_2:byte
extern _builtin_holtek_udivmodhi4:near
extern _SpeakerSendCmdForPowerOn:near
extern _EnteryLowPower:near
extern _TmrInsertTimer_2:byte
extern _TmrInsertTimer:near
extern _TmrDeleteTimer_2:byte
extern _TmrDeleteTimer:near
extern _SpeakerSendCmd_2:byte
extern _SpeakerSendCmd:near
extern _E2promWrite_2:byte
extern _E2promWrite:near
extern _GetRfPairedMode:near
extern _BatteryCheck:near
extern _SmokeAlarmCheck:near
extern _COSelfCheck_2:byte
extern _COSelfCheck:near
extern _CoAlarmCheck:near
extern _GetTempIndex:near
extern _STimerInit:near
extern _TmrInitHeader:near
extern _UsartCfg:near
extern _KeyInit:near
extern _PwrInit:near
extern _SmokeDetInit:near
extern _InitCO_Data:near
extern _BatteryCheckHandle:near
extern _SpeakerInit:near
extern _RfInit:near
extern _LoadSmokeData:near
extern _LoadCOData:near
extern _Polling:near
extern _PollingUartSend:near
extern _KeyHandleMsg:near
extern _UartService:near
extern _SmokeCaliMain:near
extern _SmokeTestMain:near
extern _SmokeAlarmMain:near
extern _SmokeMuteMain:near
extern _SmokeErrMain:near
extern _CoCaliMain:near
extern _CoTestMain:near
extern _CoAlarmMain:near
extern _CoErrMain:near
extern _CoMuteMain:near
extern _RfPairMain:near
extern _RfSmokeAlarmMain:near
extern _RfCoAlarmMain:near
extern _RfIntranetTestMain:near

; 
; Generated by holtek-gcc v3.19, Wed Mar 01 19:42:18 2023
; Rebuild 718
; end of file

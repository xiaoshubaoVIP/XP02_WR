; Generated by holtek-gcc v3.19, Wed Mar 01 18:52:22 2023
; 
; Configuration:
;       with long instruction
;       Multi-ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
; SFR address of long-instruction arch:
;    mp0 = -1,1,0
;    mp1 = 4,3,2
;    mp2 = 14,13,12
;    tbp = 9,7,8
;    acc = 5
;    pcl = 6
;    status = 10
;    bp = 11
;    intc = 67
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [4]
acc equ [5]
bp equ [11]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
cz equ [10].6
sc equ [10].7
intc equ [67]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
public _PwrInit
#pragma debug scope 2 1
#line 32 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
_PwrInit .section 'code'
_PwrInit proc
    local _PwrInit_2 db 2 dup(?)	; 0,2
#line 33 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _PwrAO[8]
#line 34 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _PwrAO[9]
#line 35 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _PwrAO[10]
#line 36 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _PwrAO[11]
#line 38 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,3
	fcall _E2promRead
	mov ra,a
#line 39 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	mov _PwrInit_2[1],a
	clr _PwrInit_2[0]
	mov a,_PwrInit_2[0]
	mov _PwrAO[2],a
	mov a,_PwrInit_2[1]
	mov _PwrAO[3],a
#line 40 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,4
	fcall _E2promRead
	mov ra,a
	mov a,_PwrInit_2[1]
	mov _PwrAO[3],a
	mov a,ra
	or a,_PwrInit_2[0]
	mov _PwrAO[2],a
	ret
_PwrInit endp
#line 40 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
#pragma debug scope 1 1
___scc equ [16]
___pa equ [20]
public _EnteryLowPower
#pragma debug scope 3 1
#line 50 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
_EnteryLowPower .section 'code'
_EnteryLowPower proc
#line 52 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr [16].1
#line 55 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	set [16].0
_L8:
#line 62 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
;# 62 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	clr wdt
#line 63 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
;# 63 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	halt
#line 66 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	sz [20].4
	jmp _L3
_L6:
#line 85 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _PwrAO[11]
#line 87 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	snz [20].4
	jmp _L2
#line 89 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,3
	mov _SysteSetSig_2[0],a
	clr _SysteSetSig_2[1]
	fcall _SysteSetSig
	jmp _L2
_L3:
#line 66 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	snz [20].0
	jmp _L6
#line 77 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	sz [20].1
	jmp _L7
#line 79 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,9
	mov _PwrAO[11],a
#line 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF 2000>263690
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	ERRMESSAGE 'the value 2000of the argument exceeds the maxinum 263690'
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF 2000<0
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	ERRMESSAGE 'the value 2000 of the argument exceeds the mininum 0'
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF 2000==0
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	JMP $
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=1) AND (2000<( 4 + __PBP__ * 2))
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=2) AND (2000<( 4 + __PBP__ * 2))
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=3) AND (2000<( 4 + __PBP__ * 2))
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=4) AND (2000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=5) AND (2000<( 4 + __PBP__ * 2)) AND ( __PBP__ > 0 )
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=6) AND (2000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=7) AND (2000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 1 )
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000>=8) AND (2000<( 4 + __PBP__ * 2))  AND ( __PBP__ > 2 )
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000==9)  AND ( __PBP__ > 2 )
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	NOP
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000< ( 8 + __PBP__ * 2)) AND (2000>( 3 + __PBP__ * 2))
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	fcall __DELAY3 + ( 7 + __PBP__ * 2) -2000
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000< ( 0404h + __PBP__ * 2)) AND (2000>( 7 + __PBP__ * 2))
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV A,(2000-( 4 + __PBP__ * 2))/4
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	fcall __DELAYX3 + 3 -((2000-( 4 + __PBP__ * 2)) MOD 4) 
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000< ( 040bh + __PBP__ * 2)) AND (2000> ( 0403h + __PBP__ * 2))
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV A,0 
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	fcall __DELAYX6 + ( 040ah + __PBP__ * 2) -2000
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000 >= ( 040bh + __PBP__ * 2)) AND ((((2000-( 9 + __PBP__ * 2))%0402h)/4+1)>256)
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV A,(2000-( 9 + __PBP__ * 2))/0402h
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV _builtin_holtek_delay_2,A
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV A,0
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	fcall __DELAYY5 +5- (((2000-( 9 + __PBP__ * 2))%0402h)%6) 
	ENDIF
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	IF (2000 >= ( 040bh + __PBP__ * 2)) AND ((((2000-( 9 + __PBP__ * 2))%0402h)/4+1)<=256)
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV A,(2000-( 9 + __PBP__ * 2))/0402h
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV _builtin_holtek_delay_2,A
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	MOV A,((2000-( 9 + __PBP__ * 2))%0402h)/4+1
;# 80 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c" 1
	fcall __DELAYY3 +3-(((2000-( 9 + __PBP__ * 2))%0402h)%4) 
	ENDIF
_L7:
#line 84 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_PwrAO[11]
	mov ra,a
	inca ra
	mov _PwrAO[11],a
	mov a,8
	sub a,ra
	sz c
	jmp _L8
	jmp _L6
_L2:
	ret
_EnteryLowPower endp
#line 84 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
#pragma debug scope 1 1
public _GetVddVol
#pragma debug scope 4 1
#line 105 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
_GetVddVol .section 'code'
_GetVddVol proc
public _GetVddVol_2
    local _GetVddVol_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 4 _GetVddVol_2+0 "VbgRef"
#line 111 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _builtin_holtek_udivmodsi4_2[12]
	mov a,0  
	mov _builtin_holtek_udivmodsi4_2[0],a  
	mov a,0  
	mov _builtin_holtek_udivmodsi4_2[1],a
	mov a,75  
	mov _builtin_holtek_udivmodsi4_2[2],a  
	mov a,0  
	mov _builtin_holtek_udivmodsi4_2[3],a
	mov a,_GetVddVol_2[0]  
	mov _builtin_holtek_udivmodsi4_2[4],a  
	mov a,_GetVddVol_2[1]  
	mov _builtin_holtek_udivmodsi4_2[5],a
	clr _builtin_holtek_udivmodsi4_2[6]
	clr _builtin_holtek_udivmodsi4_2[7]
	fcall _builtin_holtek_udivmodsi4
	mov a,_builtin_holtek_udivmodsi4_2[0]  
	mov ra,a  
	mov a,_builtin_holtek_udivmodsi4_2[1]  
	mov rb,a
	mov a,_builtin_holtek_udivmodsi4_2[2]  
	mov rc,a  
	mov a,_builtin_holtek_udivmodsi4_2[3]  
	mov rd,a
	ret
_GetVddVol endp
#line 111 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
#pragma debug scope 1 1
public _GetVddVolIndex
#pragma debug scope 5 1
#line 117 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
_GetVddVolIndex .section 'code'
_GetVddVolIndex proc
public _GetVddVolIndex_2
    local _GetVddVolIndex_2 db 2 dup(?)	; 2,0
#pragma debug variable 10 5 _GetVddVolIndex_2+0 "VolSample"
#line 121 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,183
	sub a,_GetVddVolIndex_2[0]
	mov a,11
	sbc a,_GetVddVolIndex_2[1]
	snz c
	jmp _L17
#line 121 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,83
	sub a,_GetVddVolIndex_2[0]
	mov a,11
	sbc a,_GetVddVolIndex_2[1]
	snz c
	jmp _L18
	mov a,239
	sub a,_GetVddVolIndex_2[0]
	mov a,10
	sbc a,_GetVddVolIndex_2[1]
	snz c
	jmp _L19
	mov a,139
	sub a,_GetVddVolIndex_2[0]
	mov a,10
	sbc a,_GetVddVolIndex_2[1]
	snz c
	jmp _L20
	mov a,39
	sub a,_GetVddVolIndex_2[0]
	mov a,10
	sbc a,_GetVddVolIndex_2[1]
	snz c
	jmp _L21
#line 126 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,5
	mov ra,a
	jmp _L16
_L17:
#line 118 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr ra
	jmp _L16
_L18:
#line 123 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	mov ra,a
	jmp _L16
_L19:
	mov a,2
	mov ra,a
	jmp _L16
_L20:
	mov a,3
	mov ra,a
	jmp _L16
_L21:
	mov a,4
	mov ra,a
_L16:
#line 132 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	ret
_GetVddVolIndex endp
#line 132 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
#pragma debug scope 1 1
public _BatteryCheckHandle
#pragma debug scope 6 1
#line 142 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
_BatteryCheckHandle .section 'code'
_BatteryCheckHandle proc
    local _BatteryCheckHandle_2 db 3 dup(?)	; 0,3
#pragma debug variable 10 6 _BatteryCheckHandle_2+0 "BatVol"
#line 153 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _GetVddSample_2[0]
	clr _GetVddSample_2[1]
	fcall _GetVddSample
#line 154 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	mov _GetVddVol_2[0],a
	mov a,rb
	mov _GetVddVol_2[1],a
	fcall _GetVddVol
	mov a,ra
	mov _PwrAO[0],a
	mov a,rb
	mov _PwrAO[1],a
#line 155 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	mov _GetVddVolIndex_2[0],a
	mov a,rb
	mov _GetVddVolIndex_2[1],a
	fcall _GetVddVolIndex
	mov ra,a
	mov a,ra
	mov _PwrAO[4],a
#line 157 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	mov _GetVddSample_2[0],a
	clr _GetVddSample_2[1]
	fcall _GetVddSample
#line 158 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	mov _GetVddVol_2[0],a
	mov a,rb
	mov _GetVddVol_2[1],a
	fcall _GetVddVol
	mov a,ra
	mov _BatteryCheckHandle_2[0],a
	mov a,rb
	mov _BatteryCheckHandle_2[1],a
#line 168 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,89
	sub a,ra
	mov a,10
	sbc a,rb
	snz c
	jmp _L24
#line 170 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	inca _PwrAO[7]
	mov ra,a
	mov a,ra
	mov _PwrAO[7],a
#line 171 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	sub a,ra
	sz c
	jmp _L26
#line 173 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	mov _PwrAO[7],a
#line 175 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	mov a,253  
	andm a,rb  
	mov a,255  
	andm a,rc
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,4
	mov _SysAO[7],a
	jmp _L26
_L24:
#line 178 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,139
	sub a,_BatteryCheckHandle_2[0]
	mov a,10
	sbc a,_BatteryCheckHandle_2[1]
	snz c
	jmp _L27
#line 180 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	inca _PwrAO[8]
	mov ra,a
#line 185 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	sub a,ra
	snz c
	jmp _L28
#line 180 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	mov _PwrAO[8],a
	jmp _L29
_L28:
#line 187 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	mov _PwrAO[8],a
#line 188 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_SysAO[7]
	mov rb,a
	mov a,_SysAO[8]
	mov rc,a
	snz rb.1
	jmp _L30
#line 190 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_SysAO[14]
	mov rd,a
	mov a,_SysAO[15]
	mov re,a
	mov a,16
	sub a,rd
	mov a,14
	sbc a,re
	sz c
	jmp _L31
#line 192 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,253  
	andm a,rb  
	mov a,255  
	andm a,rc
	jmp _L30
_L31:
#line 197 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	add a,rd
	mov _SysAO[14],a
	mov a,0
	adc a,re
	mov _SysAO[15],a
	jmp _L29
_L30:
#line 202 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,rc
	or a,0
	mov _SysAO[8],a
	mov a,rb
	or a,1
	mov _SysAO[7],a
_L29:
#line 205 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,1
	mov _PwrAO[5],a
	jmp _L26
_L27:
#line 209 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,239
	sub a,_BatteryCheckHandle_2[0]
	mov a,10
	sbc a,_BatteryCheckHandle_2[1]
	snz c
	jmp _L32
#line 211 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_PwrAO[10]
	mov _BatteryCheckHandle_2[2],a
	mov a,1
	sub a,_BatteryCheckHandle_2[2]
	sz c
	jmp _L33
#line 213 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _PwrAO[10]
	jmp _L34
_L33:
#line 215 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	snz _BatteryCheckHandle_2[2]
	jmp _L34
#line 217 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,2
	mov _PwrAO[10],a
_L34:
#line 219 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,3
	mov _PwrAO[5],a
#line 226 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,190
	sub a,_BatteryCheckHandle_2[0]
	mov a,10
	sbc a,_BatteryCheckHandle_2[1]
	sz c
	jmp _L26
	jmp _L35
_L32:
#line 223 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,4
	mov _PwrAO[5],a
_L35:
#line 228 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _PwrAO[8]
#line 230 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,250  
	andm a,_SysAO[7]  
	mov a,255  
	andm a,_SysAO[8]
_L26:
#line 234 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_PwrAO[5]
	mov ra,a
	mov a,_PwrAO[6]
	sub a,ra
	sz z
	jmp _L38
#line 236 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	mov _PwrAO[6],a
#line 238 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_RfAO[9]
	xor a,1
	or a,_RfAO[10]
	snz z
	jmp _L38
#line 240 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,ra
	mov _UartSendMsg_2[3],a
	mov a,6
	mov _UartSendMsg_2[2],a
	mov a,3
	mov _UartSendMsg_2[0],a
	clr _UartSendMsg_2[1]
	fcall _UartSendMsg
_L38:
#line 246 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	mov a,_BatteryCheckHandle_2[0]
	mov ra,a
	mov a,_BatteryCheckHandle_2[1]
	mov rb,a
	ret
_BatteryCheckHandle endp
#line 246 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
#pragma debug scope 1 1
public _BatteryCheck
#pragma debug scope 7 1
#line 256 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
_BatteryCheck .section 'code'
_BatteryCheck proc
#line 257 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	clr _builtin_holtek_udivmodhi4_2[6]
	mov a,_SysAO[12]  
	mov _builtin_holtek_udivmodhi4_2[0],a  
	mov a,_SysAO[13]  
	mov _builtin_holtek_udivmodhi4_2[1],a
	mov a,6  
	mov _builtin_holtek_udivmodhi4_2[2],a  
	clr _builtin_holtek_udivmodhi4_2[3]
	fcall _builtin_holtek_udivmodhi4
	mov a,_builtin_holtek_udivmodhi4_2[4]  
	mov rb,a  
	mov a,_builtin_holtek_udivmodhi4_2[5]  
	mov rc,a
	mov a,rb
	xor a,5
	or a,rc
	snz z
	jmp _L43
#line 259 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
	fcall _BatteryCheckHandle
_L43:
	ret
_BatteryCheck endp
#line 259 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
#pragma debug scope 1 1
public _VolTbl
@crom	.section 'crom'
#line 21 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
@crom	.section	'crom'
_VolTbl:
#pragma debug array 42 12 6 1
#pragma debug variable 42 1 _VolTbl "VolTbl"
	dc 3000
	dc 2900
	dc 2800
	dc 2700
	dc 2600
	dc 2500
#line 19 "e:\x-sense_svn\xp02\xp02\src\PwrManager.c"
public _PwrAO
@HCCINIT0_PwrAO .section 'data'
_PwrAO	db 12 dup(0)
#pragma debug struct_begin 43 "Pwr"
#pragma debug field 0 12 "BatVolVdd"
#pragma debug field 0 12 "CailVddValue"
#pragma debug field 0 8 "BatVolIndex"
#pragma debug field 0 8 "BatLevel"
#pragma debug field 0 8 "BatOldLevel"
#pragma debug field 0 8 "BatCheckCntForbitMute"
#pragma debug field 0 8 "BatCheckCntlow"
#pragma debug field 0 8 "BatCheckCnt1in3"
#pragma debug field 0 8 "BatCheckCnt2in3"
#pragma debug field 0 8 "standbycnt"
#pragma debug struct_end
#pragma debug variable 43 1 _PwrAO "PwrAO"

@HCCINIT .section 'data'
#pragma debug struct_begin 44 "__scc_bits"
#pragma debug field 21 8 0 1 "__fsiden" ;0,1
#pragma debug field 21 8 0 1 "__fhiden" ;1,1
#pragma debug field 21 8 0 1 "__fss" ;2,1
#pragma debug field 21 8 0 1 "__fhs" ;3,1
#pragma debug field 21 8 0 1 ;4,1
#pragma debug field 21 8 0 1 "__cks0" ;5,1
#pragma debug field 21 8 0 1 "__cks1" ;6,1
#pragma debug field 21 8 0 1 "__cks2" ;7,1
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___scc "__scc" 1
#pragma debug struct_begin 46 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 47 ""
#pragma debug field 2 46 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 47 1 ___pa "__pa" 1

; output external variables
extern _RfAO:byte
extern _SysAO:byte
extern _E2promRead:near
extern _SysteSetSig_2:byte
extern _SysteSetSig:near
extern _builtin_holtek_udivmodsi4_2:byte
extern _builtin_holtek_udivmodsi4:near
extern _GetVddSample_2:byte
extern _GetVddSample:near
extern _UartSendMsg_2:byte
extern _UartSendMsg:near
extern _builtin_holtek_udivmodhi4_2:byte
extern _builtin_holtek_udivmodhi4:near

; 
; Generated by holtek-gcc v3.19, Wed Mar 01 18:52:22 2023
; Rebuild 718
; end of file
